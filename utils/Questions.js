

// questionsData.js

const questions = {
  1: {
    // Module 1
    1: {
      // Chapter 1
      "1.1": [
        {
          id: 1,
          question: "What is a programming language?",
          options: ["a) A set of rules for writing code", "b) A way to communicate with computers", "c) Both a and b", "d) None of the above"],
          correctAnswer: "c) Both a and b",
        },
        {
          id: 2,
          question: "Which of the following is NOT a programming language?",
          options: ["a) Python", "b) HTML", "c) Java", "d) CPU"],
          correctAnswer: "b) HTML",
        },
        {
          id: 3,
          question: "What is the purpose of a programming language?",
          options: ["a) To make it easy for humans to communicate with computers", "b) To make code look fancy", "c) To confuse programmers", "d) To increase computer speed"],
          correctAnswer: "a) To make it easy for humans to communicate with computers",
        },
        {
          id: 4,
          question: "Which level of programming language directly communicates with hardware?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) All of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 5,
          question: "Which level of programming language is closer to human language?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 6,
          question: "Which type of language is Assembly Language?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 7,
          question: "Which type of language is C++?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "b) Mid-level language",
        },
        {
          id: 8,
          question: "Which type of language is Python?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 9,
          question: "Which language is considered to be more portable?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) All of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 10,
          question: "Which level of language is suitable for system programming?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 11,
          question: "Which level of language is a compromise between low-level and high-level languages?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "b) Mid-level language",
        },
        {
          id: 12,
          question: "Which level of language is easier to learn and write?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 13,
          question: "Which level of language requires a translator to convert code into machine language?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 14,
          question: "Which type of language is C?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "b) Mid-level language",
        },
        {
          id: 15,
          question: "Which level of language is closer to binary code?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 16,
          question: "Which language allows for better abstraction of complex operations?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 17,
          question: "Which type of language is suitable for artificial intelligence applications?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) All of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 18,
          question: "Which type of language is used for writing device drivers?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 19,
          question: "Which type of language is more human-readable?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 20,
          question: "Which type of language is closer to machine code?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 21,
          question: "Which type of language is suitable for business applications?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 22,
          question: "Which type of language is used for scientific calculations?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 23,
          question: "Which type of language is more efficient in terms of execution speed?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 24,
          question: "Which type of language is less error-prone?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 25,
          question: "Which type of language is used for web development?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 26,
          question: "Which type of language is used for system administration tasks?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 27,
          question: "Which type of language is suitable for writing operating systems?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
        {
          id: 28,
          question: "Which type of language is used for database management?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 29,
          question: "Which type of language is used for game development?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "c) High-level language",
        },
        {
          id: 30,
          question: "Which type of language is closer to the machine architecture?",
          options: ["a) Low-level language", "b) Mid-level language", "c) High-level language", "d) None of the above"],
          correctAnswer: "a) Low-level language",
        },
      ],


      "1.2": [
        {
          id: 1,
          question: "What is an algorithm?",
          options: [
            "a) A programming language",
            "b) A step-by-step set of instructions to solve a problem",
            "c) A type of data structure",
            "d) None of the above",
          ],
          correctAnswer: "b) A step-by-step set of instructions to solve a problem",
        },
        {
          id: 2,
          question: "What is the purpose of using pseudo-code?",
          options: [
            "a) To write code in a specific programming language",
            "b) To outline the logic of a program in a language-independent manner",
            "c) To make the code look fancy",
            "d) None of the above",
          ],
          correctAnswer: "b) To outline the logic of a program in a language-independent manner",
        },
        {
          id: 3,
          question: "Which of the following is a pseudo-code convention?",
          options: [
            "a) int main()",
            "b) Start with 'Begin' and end with 'End'",
            "c) for (i = 0; i < 10; i++)",
            "d) if (condition) { /* code */ }",
          ],
          correctAnswer: "b) Start with 'Begin' and end with 'End'",
        },
        {
          id: 4,
          question: "In pseudo-code, how is assignment denoted?",
          options: [
            "a) using '='",
            "b) using '=='",
            "c) using ':='",
            "d) using ':'",
          ],
          correctAnswer: "c) using ':='",
        },
        {
          id: 5,
          question: "Which statement is used in pseudo-code to iterate over a loop?",
          options: [
            "a) for",
            "b) while",
            "c) if",
            "d) else",
          ],
          correctAnswer: "a) for",
        },
        {
          id: 6,
          question: "What is the purpose of an algorithm?",
          options: [
            "a) To find and fix errors in a program",
            "b) To outline the logic for solving a problem",
            "c) To choose the right programming language",
            "d) None of the above",
          ],
          correctAnswer: "b) To outline the logic for solving a problem",
        },
        {
          id: 7,
          question: "Which of the following is a characteristic of a good algorithm?",
          options: [
            "a) Efficient",
            "b) Lengthy",
            "c) Complicated",
            "d) Hard to understand",
          ],
          correctAnswer: "a) Efficient",
        },
        {
          id: 8,
          question: "Which of the following is NOT a valid pseudo-code convention?",
          options: [
            "a) Use indentation to indicate blocks of code",
            "b) Use meaningful variable names",
            "c) Write code in a specific programming language",
            "d) Use comments to explain complex sections",
          ],
          correctAnswer: "c) Write code in a specific programming language",
        },
        {
          id: 9,
          question: "What is a flowchart?",
          options: [
            "a) A type of algorithm",
            "b) A graphical representation of a process",
            "c) A programming language",
            "d) None of the above",
          ],
          correctAnswer: "b) A graphical representation of a process",
        },
        {
          id: 10,
          question: "What does a diamond-shaped symbol represent in a flowchart?",
          options: [
            "a) Input/Output operation",
            "b) Decision or branching point",
            "c) Process or operation",
            "d) Start or end of the program",
          ],
          correctAnswer: "b) Decision or branching point",
        },
        {
          id: 11,
          question: "Which symbol is used to represent a process or operation in a flowchart?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "b) Rectangle",
        },
        {
          id: 12,
          question: "What does a parallelogram-shaped symbol represent in a flowchart?",
          options: [
            "a) Input/Output operation",
            "b) Decision or branching point",
            "c) Process or operation",
            "d) Start or end of the program",
          ],
          correctAnswer: "a) Input/Output operation",
        },
        {
          id: 13,
          question: "Which symbol is used to represent the start or end of a program in a flowchart?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "a) Oval",
        },
        {
          id: 14,
          question: "What does an arrow indicate in a flowchart?",
          options: [
            "a) Direction of data flow",
            "b) Start of a loop",
            "c) End of a loop",
            "d) None of the above",
          ],
          correctAnswer: "a) Direction of data flow",
        },
        {
          id: 15,
          question: "What is the purpose of using a flowchart?",
          options: [
            "a) To write code in a specific programming language",
            "b) To visualize the steps of a process",
            "c) To create complex algorithms",
            "d) None of the above",
          ],
          correctAnswer: "b) To visualize the steps of a process",
        },
        {
          id: 16,
          question: "Which symbol is used to represent a decision in a flowchart?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "c) Diamond",
        },
        {
          id: 17,
          question: "Which symbol is used to represent a loop in a flowchart?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "b) Rectangle",
        },
        {
          id: 18,
          question: "Which of the following is a valid flowchart symbol?",
          options: [
            "a) Triangle",
            "b) Hexagon",
            "c) Oval",
            "d) Square",
          ],
          correctAnswer: "c) Oval",
        },
        {
          id: 19,
          question: "In a flowchart, which symbol is used to indicate input and output operations?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "d) Parallelogram",
        },
        {
          id: 20,
          question: "Which of the following is NOT a purpose of using flowcharts?",
          options: [
            "a) To represent a graphical user interface",
            "b) To communicate complex processes",
            "c) To analyze and improve processes",
            "d) To document existing processes",
          ],
          correctAnswer: "a) To represent a graphical user interface",
        },
        {
          id: 21,
          question: "What is the significance of arrows in a flowchart?",
          options: [
            "a) Indicate the direction of data flow",
            "b) Represent conditional statements",
            "c) Denote the beginning of a loop",
            "d) None of the above",
          ],
          correctAnswer: "a) Indicate the direction of data flow",
        },
        {
          id: 22,
          question: "What does a rectangle symbolize in a flowchart?",
          options: [
            "a) Input/Output operation",
            "b) Decision or branching point",
            "c) Process or operation",
            "d) Start or end of the program",
          ],
          correctAnswer: "c) Process or operation",
        },
        {
          id: 23,
          question: "Which of the following is NOT a valid flowchart symbol?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Hexagon",
          ],
          correctAnswer: "d) Hexagon",
        },
        {
          id: 24,
          question: "In a flowchart, what does a circle represent?",
          options: [
            "a) Decision or branching point",
            "b) Process or operation",
            "c) Start or end of the program",
            "d) Input/Output operation",
          ],
          correctAnswer: "c) Start or end of the program",
        },
        {
          id: 25,
          question: "What is the primary purpose of using flowcharts in programming?",
          options: [
            "a) To execute code directly",
            "b) To plan and visualize the logic of a program",
            "c) To generate random numbers",
            "d) None of the above",
          ],
          correctAnswer: "b) To plan and visualize the logic of a program",
        },
        {
          id: 26,
          question: "Which symbol is used to represent a decision in a flowchart?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "c) Diamond",
        },
        {
          id: 27,
          question: "What does an oval symbolize in a flowchart?",
          options: [
            "a) Decision or branching point",
            "b) Process or operation",
            "c) Start or end of the program",
            "d) Input/Output operation",
          ],
          correctAnswer: "a) Decision or branching point",
        },
        {
          id: 28,
          question: "In a flowchart, what does a parallelogram represent?",
          options: [
            "a) Decision or branching point",
            "b) Process or operation",
            "c) Start or end of the program",
            "d) Input/Output operation",
          ],
          correctAnswer: "d) Input/Output operation",
        },
        {
          id: 29,
          question: "Which of the following is a valid flowchart symbol for process or operation?",
          options: [
            "a) Oval",
            "b) Rectangle",
            "c) Diamond",
            "d) Parallelogram",
          ],
          correctAnswer: "b) Rectangle",
        },
        {
          id: 30,
          question: "What is the advantage of using flowcharts when designing a program?",
          options: [
            "a) It allows for direct code execution",
            "b) It provides a visual representation of the program's logic",
            "c) It eliminates the need for debugging",
            "d) None of the above",
          ],
          correctAnswer: "b) It provides a visual representation of the program's logic",
        },
        // done
      ],
      // chapter 1 ended
    },







    2: {
      // Chapter 1
      "2.1": [
        {
          id: 1,
          question: "Which of the following statements is true regarding the history of the C programming language?",
          options: [
            "A) C was developed in the early 2000s.",
            "B) C was initially developed at Bell Labs by Dennis Ritchie in the early 1970s.",
            "C) C was primarily used for web development.",
            "D) C was first introduced as a high-level language."
          ],
          correctAnswer: "B) C was initially developed at Bell Labs by Dennis Ritchie in the early 1970s."
        },
        {
          id: 2,
          question: "What is a key feature of the C programming language?",
          options: [
            "A) Object-Oriented Programming (OOP) support.",
            "B) Strongly-typed language.",
            "C) Automatic memory management.",
            "D) High-level abstraction."
          ],
          correctAnswer: "B) Strongly-typed language."
        },
        {
          id: 3,
          question: "Which of the following is not a feature of the C programming language?",
          options: [
            "A) Portability.",
            "B) Low-level access to memory.",
            "C) Dynamic typing.",
            "D) Efficient execution."
          ],
          correctAnswer: "C) Dynamic typing."
        },
        {
          id: 4,
          question: "What does the term 'procedural language' mean in the context of C?",
          options: [
            "A) It emphasizes on objects and classes.",
            "B) It focuses on procedures or functions.",
            "C) It is exclusively used for web development.",
            "D) It is a type of markup language."
          ],
          correctAnswer: "B) It focuses on procedures or functions."
        },
        {
          id: 5,
          question: "Which programming paradigm does C primarily follow?",
          options: [
            "A) Object-Oriented Programming (OOP).",
            "B) Procedural Programming.",
            "C) Functional Programming.",
            "D) Declarative Programming."
          ],
          correctAnswer: "B) Procedural Programming."
        },
        {
          id: 6,
          question: "What is the correct order of execution for statements in a C program?",
          options: [
            "A) Preprocessor, Compiler, Assembler, Linker, Loader.",
            "B) Compiler, Preprocessor, Assembler, Linker, Loader.",
            "C) Preprocessor, Assembler, Compiler, Linker, Loader.",
            "D) Preprocessor, Compiler, Assembler, Loader, Linker."
          ],
          correctAnswer: "D) Preprocessor, Compiler, Assembler, Loader, Linker."
        },
        {
          id: 7,
          question: "What is the purpose of the main() function in a C program?",
          options: [
            "A) It is the first function to be executed in the program.",
            "B) It contains the most important code in the program.",
            "C) It serves as the entry point for program execution.",
            "D) It is used for mathematical calculations."
          ],
          correctAnswer: "C) It serves as the entry point for program execution."
        },
        {
          id: 8,
          question: "Which of the following statements is true regarding comments in a C program?",
          options: [
            "A) Comments are executed at runtime.",
            "B) Comments are ignored by the compiler.",
            "C) Comments must be enclosed in double quotes.",
            "D) Comments can be used for declaring variables."
          ],
          correctAnswer: "B) Comments are ignored by the compiler."
        },
        {
          id: 9,
          question: "What is the purpose of the 'return' statement in the main() function?",
          options: [
            "A) It indicates the end of the program.",
            "B) It returns a value to the operating system.",
            "C) It terminates the execution of the program.",
            "D) It is used to exit a loop."
          ],
          correctAnswer: "B) It returns a value to the operating system."
        },
        {
          id: 10,
          question: "Which symbol is used to denote a single-line comment in a C program?",
          options: [
            "A) //",
            "B) /**/",
            "C) #",
            "D) '''"
          ],
          correctAnswer: "A) //"
        },
        {
          id: 11,
          question: "Which directive is used to include standard input/output functions in a C program?",
          options: [
            "A) #import <stdio.h>",
            "B) #include <stdio.h>",
            "C) #include \"stdio.h\"",
            "D) #import \"stdio.h\""
          ],
          correctAnswer: "B) #include <stdio.h>"
        },
        {
          id: 12,
          question: "What happens if you forget to include the 'stdio.h' header file in your C program?",
          options: [
            "A) The program will not compile.",
            "B) The program will compile but not execute.",
            "C) The program will execute with warnings.",
            "D) The program will execute without any issues."
          ],
          correctAnswer: "A) The program will not compile."
        },
        {
          id: 13,
          question: "What is the role of the <stdio.h> header file in a C program?",
          options: [
            "A) It provides functions for mathematical operations.",
            "B) It contains functions for file input and output operations.",
            "C) It is used for defining data types.",
            "D) It is used for string manipulation."
          ],
          correctAnswer: "B) It contains functions for file input and output operations."
        },
        {
          id: 14,
          question: "Which function is called automatically when a C program is executed?",
          options: [
            "A) main()",
            "B) start()",
            "C) execute()",
            "D) initialize()"
          ],
          correctAnswer: "A) main()"
        },
        {
          id: 15,
          question: "What is the return type of the main() function in C?",
          options: [
            "A) int",
            "B) void",
            "C) float",
            "D) char"
          ],
          correctAnswer: "A) int"
        },
        {
          id: 16,
          question: "Which of the following is not a valid data type in C?",
          options: [
            "A) long double",
            "B) double long",
            "C) float",
            "D) char"
          ],
          correctAnswer: "B) double long"
        },
        {
          id: 17,
          question: "What is the size of the 'char' data type in C?",
          options: [
            "A) 4 bytes",
            "B) 2 bytes",
            "C) 1 byte",
            "D) 8 bytes"
          ],
          correctAnswer: "C) 1 byte"
        },
        {
          id: 18,
          question: "Which escape sequence is used for a newline character in C?",
          options: [
            "A) ",
            "B) \\t",
            "C) \\r",
            "D) \\a"
          ],
          correctAnswer: "A) "
        },
        {
          id: 19,
          question: "What is the range of values for an 'int' data type in C?",
          options: [
            "A) -32768 to 32767",
            "B) -2147483648 to 2147483647",
            "C) 0 to 65535",
            "D) 0 to 4294967295"
          ],
          correctAnswer: "B) -2147483648 to 2147483647"
        },
        {
          id: 20,
          question: "Which data type is used to store decimal numbers with single precision in C?",
          options: [
            "A) float",
            "B) double",
            "C) long double",
            "D) int"
          ],
          correctAnswer: "A) float"
        },
        {
          id: 21,
          question: "What is the maximum value that can be stored in an unsigned short int?",
          options: [
            "A) 32767",
            "B) 65535",
            "C) 2147483647",
            "D) 4294967295"
          ],
          correctAnswer: "B) 65535"
        },
        {
          id: 22,
          question: "Which data type is used to store true or false values in C?",
          options: [
            "A) boolean",
            "B) int",
            "C) char",
            "D) bool"
          ],
          correctAnswer: "B) int"
        },
        {
          id: 23,
          question: "What is the size of a 'long long int' in C?",
          options: [
            "A) 4 bytes",
            "B) 8 bytes",
            "C) 2 bytes",
            "D) 16 bytes"
          ],
          correctAnswer: "B) 8 bytes"
        },
        {
          id: 24,
          question: "Which escape sequence is used for a tab character in C?",
          options: [
            "A) \\t",
            "B) ",
            "C) \\r",
            "D) \\b"
          ],
          correctAnswer: "A) \\t"
        },
        {
          id: 25,
          question: "Which data type is used to store characters in C?",
          options: [
            "A) char",
            "B) character",
            "C) string",
            "D) chr"
          ],
          correctAnswer: "A) char"
        },
        {
          id: 26,
          question: "Which header file should be included to use the 'malloc()' function in C?",
          options: [
            "A) #include <stdlib.h>",
            "B) #include <memory.h>",
            "C) #include <alloc.h>",
            "D) #include <malloc.h>"
          ],
          correctAnswer: "A) #include <stdlib.h>"
        },
        {
          id: 27,
          question: "What is the purpose of the 'return 0;' statement in the main() function?",
          options: [
            "A) It indicates an error.",
            "B) It terminates the program.",
            "C) It signifies a successful execution.",
            "D) It is optional."
          ],
          correctAnswer: "C) It signifies a successful execution."
        },
        {
          id: 28,
          question: "What is the role of the <math.h> header file in a C program?",
          options: [
            "A) It provides functions for mathematical operations.",
            "B) It contains functions for file input and output operations.",
            "C) It is used for defining data types.",
            "D) It is used for string manipulation."
          ],
          correctAnswer: "A) It provides functions for mathematical operations."
        },
        {
          id: 29,
          question: "Which function is used to dynamically allocate memory in C?",
          options: [
            "A) malloc()",
            "B) allocate()",
            "C) memalloc()",
            "D) new()"
          ],
          correctAnswer: "A) malloc()"
        },
        {
          id: 30,
          question: "What is the return type of the 'malloc()' function in C?",
          options: [
            "A) int",
            "B) void*",
            "C) float",
            "D) char*"
          ],
          correctAnswer: "B) void*"
        }
      ],


      "2.2": [
        {
          id: 1,
          question: "Which of the following is a valid C identifier?",
          options: ["3number", "my_variable", "float", "main"],
          correctAnswer: "my_variable",
        },
        {
          id: 2,
          question: "What is a token in C programming?",
          options: [
            "A keyword in C.",
            "A basic unit of a program that the compiler recognizes.",
            "A named constant.",
            "A type of variable.",
          ],
          correctAnswer: "A basic unit of a program that the compiler recognizes.",
        },
        {
          id: 3,
          question: "Which of the following is a valid constant in C?",
          options: ["5myConst", "MAX_VALUE", "double", "main()"],
          correctAnswer: "MAX_VALUE",
        },
        {
          id: 4,
          question: "Which of the following is a keyword in C?",
          options: ["int", "value", "calculate", "string"],
          correctAnswer: "int",
        },
        {
          id: 5,
          question: "What is the maximum length of a variable name in C?",
          options: ["31 characters", "63 characters", "79 characters", "There is no specific limit."],
          correctAnswer: "There is no specific limit.",
        },
        {
          id: 6,
          question: "Which of the following is not a valid variable name in C?",
          options: ["my_variable", "totalValue", "123var", "_result"],
          correctAnswer: "123var",
        },
        {
          id: 7,
          question: "What is the value of a constant in C?",
          options: [
            "It cannot be changed during program execution.",
            "It is determined by the user at runtime.",
            "It can be modified anytime in the program.",
            "It is always equal to 0.",
          ],
          correctAnswer: "It cannot be changed during program execution.",
        },
        {
          id: 8,
          question: "Which of the following is an example of a string constant in C?",
          options: ["42", "'A'", "\"Hello, World!\"", "3.14"],
          correctAnswer: "\"Hello, World!\"",
        },
        {
          id: 9,
          question: "What happens if you try to use a keyword as a variable name in C?",
          options: [
            "It will result in a syntax error.",
            "The compiler will automatically rename the variable.",
            "It will not cause any issues.",
            "The program will crash.",
          ],
          correctAnswer: "It will result in a syntax error.",
        },
        {
          id: 10,
          question: "Which of the following is not a valid data type in C?",
          options: ["short int", "long long int", "real", "char"],
          correctAnswer: "real",
        },
        {
          id: 11,
          question: "What is the role of an identifier in C programming?",
          options: [
            "It represents a specific memory location.",
            "It defines a constant value.",
            "It is a keyword used for loops.",
            "It specifies the data type of a variable.",
          ],
          correctAnswer: "It represents a specific memory location.",
        },
        {
          id: 12,
          question: "What is the value of a variable in C?",
          options: [
            "It is determined by the user at runtime.",
            "It can change during program execution.",
            "It cannot be modified.",
            "It is always equal to 0.",
          ],
          correctAnswer: "It can change during program execution.",
        },
        {
          id: 13,
          question: "Which of the following is an example of a valid C identifier?",
          options: ["1st_place", "MAX-VALUE", "_variable_name", "break"],
          correctAnswer: "_variable_name",
        },
        {
          id: 14,
          question: "What is the purpose of using constants in C?",
          options: [
            "To store changing values.",
            "To make the code more readable.",
            "To avoid magic numbers.",
            "To declare variables.",
          ],
          correctAnswer: "To avoid magic numbers.",
        },
        {
          id: 15,
          question: "What is the significance of a keyword in C programming?",
          options: [
            "It has a special meaning in the language and cannot be used as an identifier.",
            "It is used to declare constants.",
            "It is a type of data.",
            "It represents a specific memory location.",
          ],
          correctAnswer: "It has a special meaning in the language and cannot be used as an identifier.",
        },
        {
          id: 16,
          question: "Which of the following is a valid way to declare a variable in C?",
          options: ["int x;", "x = 5;", "integer x;", "variable x;"],
          correctAnswer: "int x;",
        },
        {
          id: 17,
          question: "What is the correct way to declare multiple variables of the same data type in C?",
          options: ["int a, b, c;", "a, b, c int;", "int a; b; c;", "var a, b, c;"],
          correctAnswer: "int a, b, c;",
        },
        {
          id: 18,
          question: "Which of the following is not a valid data type in C?",
          options: ["short float", "long double", "unsigned int", "double"],
          correctAnswer: "short float",
        },
        {
          id: 19,
          question: "What is the significance of data types in C programming?",
          options: [
            "They determine the size and type of values that a variable can hold.",
            "They define the color of text in the console.",
            "They are used for mathematical calculations.",
            "They control the flow of program execution.",
          ],
          correctAnswer: "They determine the size and type of values that a variable can hold.",
        },
        {
          id: 20,
          question: "Which of the following is a valid way to initialize a variable in C?",
          options: ["int x = 5;", "x = 5;", "x int = 5;", "variable x = 5;"],
          correctAnswer: "int x = 5;",
        },
        {
          id: 21,
          question: "What is the purpose of variable declaration in C?",
          options: [
            "It assigns a value to a variable.",
            "It reserves memory space for a variable.",
            "It determines the data type of a variable.",
            "It performs a mathematical operation.",
          ],
          correctAnswer: "It reserves memory space for a variable.",
        },
        {
          id: 22,
          question: "Which of the following is a valid way to name a variable in C?",
          options: ["myVariable%", "myVariable_", "my Variable", "123myVariable"],
          correctAnswer: "myVariable_",
        },
        {
          id: 23,
          question: "What is the correct way to declare a constant in C?",
          options: [
            "const PI = 3.14;",
            "constant PI = 3.14;",
            "#define PI 3.14",
            "PI = 3.14;",
          ],
          correctAnswer: "#define PI 3.14",
        },
        {
          id: 24,
          question: "What is the purpose of assigning an initial value to a variable in C?",
          options: [
            "It helps in memory allocation.",
            "It defines the data type of the variable.",
            "It initializes the variable with a specific value.",
            "It specifies the size of the variable.",
          ],
          correctAnswer: "It initializes the variable with a specific value.",
        },
        {
          id: 25,
          question: "Which of the following is a valid way to comment out a line in C?",
          options: [
            "/* This is a comment */",
            "' This is a comment '",
            "// This is a comment",
            "# This is a comment",
          ],
          correctAnswer: "// This is a comment",
        },
        {
          id: 26,
          question: "Which of the following is a valid constant in C?",
          options: ["MAX-VALUE", "3.14", "myConstant", "int"],
          correctAnswer: "3.14",
        },
        {
          id: 27,
          question: "Which of the following is a valid variable name in C?",
          options: ["first-name", "totalValue$", "_result", "constant"],
          correctAnswer: "_result",
        },
        {
          id: 28,
          question: "What is the maximum length of a variable name in C?",
          options: ["15 characters", "63 characters", "128 characters", "There is no specific limit."],
          correctAnswer: "128 characters",
        },
        {
          id: 29,
          question: "Which of the following is not a valid way to declare a variable in C?",
          options: ["int x, y, z;", "float myVariable;", "variable int x;", "double myVar;"],
          correctAnswer: "variable int x;",
        },
        {
          id: 30,
          question: "What is the significance of data types in C programming?",
          options: [
            "They determine the color of text in the console.",
            "They define the size and type of values that a variable can hold.",
            "They are used for defining constants.",
            "They control the flow of program execution.",
          ],
          correctAnswer: "They define the size and type of values that a variable can hold.",
        },
      ],




      "2.3": [
        {
          id: 1,
          question: "What is a symbolic constant in C?",
          options: [
            "A) A constant with a meaningful name.",
            "B) A variable that can change its value.",
            "C) A constant with a numerical value.",
            "D) A reserved keyword in C."
          ],
          correctAnswer: "A) A constant with a meaningful name."
        },
        {
          id: 2,
          question: "Which keyword is used to define a symbolic constant in C?",
          options: [
            "A) const",
            "B) constant",
            "C) define",
            "D) symbol"
          ],
          correctAnswer: "C) define"
        },
        {
          id: 3,
          question: "What is the advantage of using symbolic constants in C?",
          options: [
            "A) They allow for variables to change their value.",
            "B) They make the code more readable and maintainable.",
            "C) They are used for mathematical operations.",
            "D) They are reserved for system-level constants."
          ],
          correctAnswer: "B) They make the code more readable and maintainable."
        },
        {
          id: 4,
          question: "Which of the following is a valid way to define a symbolic constant in C?",
          options: [
            "A) define MAX_VALUE 100",
            "B) #define MAX_VALUE 100",
            "C) constant MAX_VALUE = 100",
            "D) const MAX_VALUE = 100"
          ],
          correctAnswer: "B) #define MAX_VALUE 100"
        },
        {
          id: 5,
          question: "What is the value of PI in the following symbolic constant definition?  #define PI 3.14",
          options: [
            "A) 3",
            "B) 3.14",
            "C) 3.1415",
            "D) It cannot be determined from the given code."
          ],
          correctAnswer: "B) 3.14"
        },
        {
          id: 6,
          question: "Which of the following is a valid symbolic constant name in C?",
          options: [
            "A) 2PI",
            "B) MAX-VALUE",
            "C) PI_2",
            "D) constant"
          ],
          correctAnswer: "C) PI_2"
        },
        {
          id: 7,
          question: "What is the purpose of using symbolic constants in a C program?",
          options: [
            "A) To avoid using hard-coded values in the code.",
            "B) To reserve memory space for variables.",
            "C) To define mathematical operations.",
            "D) To perform file input/output operations."
          ],
          correctAnswer: "A) To avoid using hard-coded values in the code."
        },
        {
          id: 8,
          question: "Which of the following is not a valid way to use a symbolic constant in C?",
          options: [
            "A) int radius = PI * 2;",
            "B) int radius = 2 * PI;",
            "C) int radius = 2 * PI_2;",
            "D) int radius = 2 * CONSTANT;"
          ],
          correctAnswer: "D) int radius = 2 * CONSTANT;"
        },
        {
          id: 9,
          question: "Which of the following is a valid symbolic constant definition?",
          options: [
            "#define MAX_VALUE = 100",
            "#define MAX_VALUE 100",
            "const MAX_VALUE = 100",
            "constant MAX_VALUE 100"
          ],
          correctAnswer: "#define MAX_VALUE 100"
        },
        {
          id: 10,
          question: "What is the purpose of using symbolic constants instead of hard-coded values in C?",
          options: [
            "A) It makes the code more difficult to read.",
            "B) It allows for dynamic allocation of memory.",
            "C) It improves code readability and maintainability.",
            "D) It reduces the execution speed of the program."
          ],
          correctAnswer: "C) It improves code readability and maintainability."
        },
        {
          id: 11,
          question: "What is the purpose of the printf() function in C?",
          options: [
            "A) It is used for formatted input.",
            "B) It is used for displaying output to the console.",
            "C) It is used for character input.",
            "D) It is used for mathematical calculations."
          ],
          correctAnswer: "B) It is used for displaying output to the console."
        },
        {
          id: 12,
          question: "Which function is used to take input from the user in C?",
          options: [
            "A) getinput()",
            "B) input()",
            "C) scanf()",
            "D) print()"
          ],
          correctAnswer: "C) scanf()"
        },
        {
          id: 13,
          question: "What is the output of the following code snippet?  int num = 10;  printf(\"The value of num is %d\", num);",
          options: [
            "A) The value of num is 10",
            "B) The value of num is %d",
            "C) Error: missing semicolon",
            "D) 10"
          ],
          correctAnswer: "A) The value of num is 10"
        },
        {
          id: 14,
          question: "Which format specifier is used to print a floating-point number in C?",
          options: [
            "A) %f",
            "B) %d",
            "C) %c",
            "D) %s"
          ],
          correctAnswer: "A) %f"
        },
        {
          id: 15,
          question: "What is the purpose of the getchar() function in C?",
          options: [
            "A) It is used for formatted output.",
            "B) It is used for character input.",
            "C) It is used for mathematical calculations.",
            "D) It is used for taking user input."
          ],
          correctAnswer: "B) It is used for character input."
        },
        {
          id: 16,
          question: "What is the role of the putchar() function in C?",
          options: [
            "A) It is used for displaying output to the console.",
            "B) It is used for taking user input.",
            "C) It is used for character input.",
            "D) It is used for printing a character to the console."
          ],
          correctAnswer: "D) It is used for printing a character to the console."
        },
        {
          id: 17,
          question: "Which function is used to print a formatted string in C?",
          options: [
            "A) printf()",
            "B) scanf()",
            "C) print()",
            "D) sprint()"
          ],
          correctAnswer: "A) printf()"
        },
        {
          id: 18,
          question: "What is the output of the following code snippet?  char ch = 'A';  putchar(ch);",
          options: [
            "A) A",
            "B) 65",
            "C) Error: missing semicolon",
            "D) 'A'"
          ],
          correctAnswer: "A) A"
        },
        {
          id: 19,
          question: "Which function is used to read a formatted string in C?",
          options: [
            "A) printf()",
            "B) scanf()",
            "C) gets()",
            "D) read()"
          ],
          correctAnswer: "B) scanf()"
        },
        {
          id: 20,
          question: "What is the purpose of the puts() function in C?",
          options: [
            "A) It is used for displaying output to the console.",
            "B) It is used for taking user input.",
            "C) It is used for character input.",
            "D) It is used for printing a string to the console."
          ],
          correctAnswer: "D) It is used for printing a string to the console."
        },
        {
          id: 21,
          question: "What is the purpose of a symbolic constant like #define MAX_VALUE 100 in C?",
          options: [
            "A) To declare a variable named MAX_VALUE with a value of 100.",
            "B) To reserve memory for a variable.",
            "C) To provide a meaningful name for a constant value.",
            "D) To create a new data type."
          ],
          correctAnswer: "C) To provide a meaningful name for a constant value."
        },
        {
          id: 22,
          question: "Which of the following is a valid symbolic constant name in C?",
          options: [
            "A) 123VALUE",
            "B) _MAX_LENGTH",
            "C) constValue",
            "D) constant_value"
          ],
          correctAnswer: "B) _MAX_LENGTH"
        },
        {
          id: 23,
          question: "What is the primary advantage of using symbolic constants in C?",
          options: [
            "A) They allow variables to change their value.",
            "B) They make the code more complex.",
            "C) They improve code readability and maintainability.",
            "D) They can be used for mathematical operations."
          ],
          correctAnswer: "C) They improve code readability and maintainability."
        },
        {
          id: 24,
          question: "What is the value of the constant 'HOURS_IN_DAY' defined as #define HOURS_IN_DAY 24?",
          options: [
            "A) 12",
            "B) 60",
            "C) 24",
            "D) 48"
          ],
          correctAnswer: "C) 24"
        },
        {
          id: 25,
          question: "Which directive is used to define symbolic constants in C?",
          options: [
            "A) #include",
            "B) #define",
            "C) #symbol",
            "D) #const"
          ],
          correctAnswer: "B) #define"
        },
        {
          id: 26,
          question: "What is the role of the scanf() function in C?",
          options: [
            "A) It is used for character input.",
            "B) It is used for mathematical calculations.",
            "C) It is used for taking user input.",
            "D) It is used for displaying output."
          ],
          correctAnswer: "C) It is used for taking user input."
        },
        {
          id: 27,
          question: "Which format specifier is used to read a character in C using scanf()?",
          options: [
            "A) %c",
            "B) %d",
            "C) %f",
            "D) %s"
          ],
          correctAnswer: "A) %c"
        },
        {
          id: 28,
          question: "What is the purpose of the getchar() function in C?",
          options: [
            "A) It is used for formatted input.",
            "B) It is used for mathematical calculations.",
            "C) It is used for character input.",
            "D) It is used for displaying output."
          ],
          correctAnswer: "C) It is used for character input."
        },
        {
          id: 29,
          question: "Which function is used to read a line of text in C?",
          options: [
            "A) get()",
            "B) gets()",
            "C) scanf()",
            "D) read()"
          ],
          correctAnswer: "B) gets()"
        },
        {
          id: 30,
          question: "What is the purpose of the puts() function in C?",
          options: [
            "A) It is used for displaying output.",
            "B) It is used for taking user input.",
            "C) It is used for character input.",
            "D) It is used for printing a string to the console."
          ],
          correctAnswer: "D) It is used for printing a string to the console."
        }
      ],

      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 2 ended
    // Add more chapters for Module 1 as needed



    3: {
      // Chapter 1
      "3.1": [
        {
          id: 1,
          question: "What will be the value of result after the following code is executed?  int num1 = 10, num2 = 5, result;  result = num1 + num2 * 2;",
          options: ["a) 20", "b) 25", "c) 30", "d) 15"],
          correctAnswer: "b) 25",
        },
        {
          id: 2,
          question: "Which operator is used for finding the remainder of a division operation?",
          options: ["a) %", "b) /", "c) *", "d) -"],
          correctAnswer: "a) %",
        },
        {
          id: 3,
          question: "If x = 7 and y = 3, what is the value of x / y?",
          options: ["a) 2", "b) 2.33", "c) 2.5", "d) 3"],
          correctAnswer: "a) 2",
        },
        {
          id: 4,
          question: "What will be the result of the following expression?  int a = 5, b = 7, c = 5; int result = (a == c) && (b > a);",
          options: ["a) 0", "b) 1", "c) Compiler Error", "d) Undefined"],
          correctAnswer: "b) 1",
        },
        {
          id: 5,
          question: "Which operator is used to check if two values are not equal?",
          options: ["a) ==", "b) !=", "c) >", "d) <"],
          correctAnswer: "b) !=",
        },
        {
          id: 6,
          question: "What is the output of the following code snippet?  int x = 5, y = 3, z = 7;  int result = (x > y) || (y < z);",
          options: ["a) 0", "b) 1", "c) Compiler Error", "d) Undefined"],
          correctAnswer: "b) 1",
        },
        {
          id: 7,
          question: "In C, which operator is used to increment the value of a variable by 1?",
          options: ["a) ++", "b) --", "c) +", "d) -"],
          correctAnswer: "a) ++",
        },
        {
          id: 8,
          question: "What will be the value of result after the following code is executed?  int num = 10, result;  result = num++ + 5;",
          options: ["a) 15", "b) 16", "c) 10", "d) 11"],
          correctAnswer: "c) 10",
        },
        {
          id: 9,
          question: "How many operands does a binary operator require?",
          options: ["a) One", "b) Two", "c) Three", "d) None"],
          correctAnswer: "b) Two",
        },
        {
          id: 10,
          question: "The ______ operator is used to dereference a pointer.",
          options: ["a) *", "b) &", "c) ->", "d) ::"],
          correctAnswer: "a) *",
        },
        {
          id: 11,
          question: "To perform integer division in C, you should use the ______ operator.",
          options: ["a) /", "b) %", "c) //", "d) *"],
          correctAnswer: "a) /",
        },
        {
          id: 12,
          question: "The ______ operator is used to find the size of a data type.",
          options: ["a) sizeof", "b) size", "c) type", "d) length"],
          correctAnswer: "a) sizeof",
        },
        {
          id: 13,
          question: "Identify the error in the following code:  int a = 5, b = 3;  printf('The sum of a and b is: %d, a + b);",
          options: ["a) Missing semicolon", "b) Missing parentheses", "c) Incorrect format specifier", "d) No error"],
          correctAnswer: "d) No error",
        },
        {
          id: 14,
          question: "Identify the error in the following code:  int x;  printf('%d', x);",
          options: ["a) Missing data type", "b) Missing ampersand (&)", "c) Uninitialized variable", "d) No error"],
          correctAnswer: "c) Uninitialized variable",
        },
        {
          id: 15,
          question: "In a shopping cart application, if the total bill is above $100, a discount of 10% is applied. Which type of operator is used to implement this condition?",
          options: ["a) Arithmetic", "b) Relational", "c) Logical", "d) Assignment"],
          correctAnswer: "c) Logical",
        },
        {
          id: 16,
          question: "In a game, if a player's score is less than 0, they lose the game. Which type of operator is used to implement this condition?",
          options: ["a) Arithmetic", "b) Relational", "c) Logical", "d) Assignment"],
          correctAnswer: "b) Relational",
        },
        {
          id: 17,
          question: "In a temperature conversion program, which operator would you use to convert Celsius to Fahrenheit using the formula: F = (C * 9/5) + 32?",
          options: ["a) +", "b) *", "c) /", "d) -"],
          correctAnswer: "b) *",
        },
        {
          id: 18,
          question: "What is the value of result in the following code?  int num1 = 8, num2 = 3, result;  result = num1 / num2;",
          options: ["a) 2", "b) 2.67", "c) 2.33", "d) 3"],
          correctAnswer: "a) 2",
        },
        {
          id: 19,
          question: "Which operator is used for exponentiation in C?",
          options: ["a) **", "b) ^", "c) ^^", "d) none of the above"],
          correctAnswer: "d) none of the above",
        },
        {
          id: 20,
          question: "What will be the result of the following expression?  int a = 5, b = 3, c = 7;  int result = a + b * c - a;",
          options: ["a) 19", "b) 15", "c) 20", "d) 17"],
          correctAnswer: "a) 19",
        },
        {
          id: 21,
          question: "If x = 7 and y = 3, what is the value of x > y?",
          options: ["a) 0", "b) 1", "c) True", "d) False"],
          correctAnswer: "b) 1",
        },
        {
          id: 22,
          question: "What will be the result of the following expression?  int a = 5, b = 3, c = 7;  int result = (a > b) && (b < c);",
          options: ["a) 0", "b) 1", "c) Compiler Error", "d) Undefined"],
          correctAnswer: "b) 1",
        },
        {
          id: 23,
          question: "Which operator is used to perform logical OR operation?",
          options: ["a) &&", "b) ||", "c) !", "d) &|"],
          correctAnswer: "b) ||",
        },
        {
          id: 24,
          question: "In C, which operator is used to decrement the value of a variable by 1?",
          options: ["a) --", "b) ++", "c) -", "d) +"],
          correctAnswer: "a) --",
        },
        {
          id: 25,
          question: "What will be the value of result after the following code is executed?  int num = 7, result;  result = --num + 5;",
          options: ["a) 11", "b) 12", "c) 10", "d) 9"],
          correctAnswer: "c) 10",
        },
        {
          id: 26,
          question: "How many operands does a unary operator require?",
          options: ["a) One", "b) Two", "c) Three", "d) None"],
          correctAnswer: "a) One",
        },
        {
          id: 27,
          question: "The ______ operator is used to access the value stored at a memory address.",
          options: ["a) *", "b) &", "c) %", "d) ~"],
          correctAnswer: "a) *",
        },
        {
          id: 28,
          question: "To calculate the square root of a number in C, you should use the ______ function.",
          options: ["a) sqrt()", "b) sqr()", "c) root()", "d) sqrt{}"],
          correctAnswer: "a) sqrt()",
        },
        {
          id: 29,
          question: "The ______ operator is used to combine two or more conditions in a single expression.",
          options: ["a) &&", "b) ||", "c) !", "d) &|"],
          correctAnswer: "a) &&",
        },
        {
          id: 30,
          question: "Identify the error in the following code:  int x;  scanf('%d', x);",
          options: ["a) Missing ampersand (&) before x", "b) Missing format specifier", "c) Uninitialized variable", "d) No error"],
          correctAnswer: "a) Missing ampersand (&) before x",
        },
        // Add more questions for subchapter 1.1 as needed
      ],

      "3.2": [
        {
          id: 1,
          question: "What is the result of the following code?  int x = 5;  x = x + 2;",
          options: ["a) x is assigned the value 7", "b) x is assigned the value 5", "c) Compilation Error", "d) Undefined behavior"],
          correctAnswer: "a) x is assigned the value 7",
        },
        {
          id: 2,
          question: "In C, what is the equality operator used to compare two values?",
          options: ["a) ==", "b) =", "c) ===", "d) ="],
          correctAnswer: "a) ==",
        },
        {
          id: 3,
          question: "What is the value of y after the following code is executed?  int x = 10, y = 3;  y += x;",
          options: ["a) 13", "b) 30", "c) 7", "d) 10"],
          correctAnswer: "a) 13",
        },
        {
          id: 4,
          question: "In C, what is the syntax for the conditional operator?",
          options: ["a) ? :", "b) if then else", "c) switch case", "d) cond ?"],
          correctAnswer: "a) ? :",
        },
        {
          id: 5,
          question: "What will be the value of result after the following code is executed  int a = 5, b = 3, result;  result = (a > b) ? a : b;",
          options: ["a) 5", "b) 3", "c) 8", "d) 0"],
          correctAnswer: "a) 5",
        },
        {
          id: 6,
          question: "The conditional operator is also known as:",
          options: ["a) Ternary operator", "b) Binary operator", "c) Unary operator", "d) Trinary operator"],
          correctAnswer: "a) Ternary operator",
        },
        {
          id: 7,
          question: "Which operator is used for performing bitwise AND operation in C?",
          options: ["a) &", "b) &&", "c) |", "d) ||"],
          correctAnswer: "a) &",
        },
        {
          id: 8,
          question: "What is the result of the following expression?  int x = 5, y = 3;  int result = x | y;",
          options: ["a) 7", "b) 6", "c) 1", "d) 8"],
          correctAnswer: "a) 7",
        },
        {
          id: 9,
          question: "The result of a bitwise XOR operation is 1 if:",
          options: ["a) Both bits are 0", "b) Both bits are 1", "c) One bit is 0 and the other is 1", "d) None of the above"],
          correctAnswer: "c) One bit is 0 and the other is 1",
        },
        {
          id: 10,
          question: "The ______ operator is used for bitwise left shift.",
          options: ["a) <<", "b) >>", "c) &", "d) |"],
          correctAnswer: "a) <<",
        },
        {
          id: 11,
          question: "To check if a bit is set (1) in C, you can use the ______ operator.",
          options: ["a) &", "b) |", "c) ~", "d) ^"],
          correctAnswer: "a) &",
        },
        {
          id: 12,
          question: "The ______ operator is used for bitwise complement (NOT).",
          options: ["a) ~", "b) !", "c) ^", "d) -"],
          correctAnswer: "a) ~",
        },
        {
          id: 13,
          question: "Identify the error in the following code:  int x  x = 10;",
          options: ["a) Missing data type", "b) Missing semicolon", "c) Missing assignment operator", "d) No error"],
          correctAnswer: "b) Missing semicolon",
        },
        {
          id: 14,
          question: "Identify the error in the following code:  int y = x;",
          options: ["a) Missing data type", "b) Missing semicolon", "c) Uninitialized variable", "d) No error"],
          correctAnswer: "c) Uninitialized variable",
        },
        {
          id: 15,
          question: "Identify the error in the following code:  int x, y;  x = y = 5;",
          options: ["a) Missing data type", "b) Missing semicolon", "c) Missing assignment operator", "d) No error"],
          correctAnswer: "a) Missing data type",
        },
        {
          id: 16,
          question: "What will be the value of z after the following code is executed?  int x = 7, y = 3, z = 5;  z *= x + y;",
          options: ["a) 35", "b) 50", "c) 56", "d) 25"],
          correctAnswer: "a) 35",
        },
        {
          id: 17,
          question: "In C, which operator is used to compare if two values are not equal?",
          options: ["a) !=", "b) <>", "c) ==!", "d) ><"],
          correctAnswer: "a) !=",
        },
        {
          id: 18,
          question: "What is the value of num after the following code is executed?  int num = 10;  num -= 3;",
          options: ["a) 10", "b) 7", "c) 3", "d) 13"],
          correctAnswer: "b) 7",
        },
        {
          id: 19,
          question: "What will be the value of result after the following code is executed?  int a = 8, b = 5, result;  result = (a < b) ? a : b;",
          options: ["a) 8", "b) 5", "c) 0", "d) 13"],
          correctAnswer: "b) 5",
        },
        {
          id: 20,
          question: "In a conditional expression x ? y : z, what happens if x is non-zero?",
          options: ["a) y is evaluated", "b) z is evaluated", "c) Both y and z are evaluated", "d) Error occurs"],
          correctAnswer: "a) y is evaluated",
        },
        {
          id: 21,
          question: "The conditional operator can be used as a replacement for which of the following structures?",
          options: ["a) if-else statement", "b) switch statement", "c) while loop", "d) for loop"],
          correctAnswer: "a) if-else statement",
        },
        {
          id: 22,
          question: "What will be the result of the following expression?  int x = 7, y = 3;  int result = x & y;",
          options: ["a) 3", "b) 5", "c) 7", "d) 1"],
          correctAnswer: "a) 3",
        },
        {
          id: 23,
          question: "The result of a bitwise OR operation is 1 if:",
          options: ["a) Both bits are 0", "b) Both bits are 1", "c) One bit is 0 and the other is 1", "d) None of the above"],
          correctAnswer: "b) Both bits are 1",
        },
        {
          id: 24,
          question: "What is the result of the following code?  int a = 5, b = 9, c = 12;  c ^= a;  c ^= b;",
          options: ["a) 0", "b) 4", "c) 5", "d) 12"],
          correctAnswer: "a) 0",
        },
        {
          id: 25,
          question: "The ______ operator is used for bitwise right shift.",
          options: ["a) >>", "b) <<", "c) &", "d) |"],
          correctAnswer: "a) >>",
        },
        {
          id: 26,
          question: "To check if a bit is clear (0) in C, you can use the ______ operator.",
          options: ["a) &", "b) |", "c) ~", "d) ^"],
          correctAnswer: "c) ~",
        },
        {
          id: 27,
          question: "The ______ operator is used for bitwise OR operation.",
          options: ["a) |", "b) &", "c) ^", "d) ~"],
          correctAnswer: "a) |",
        },
        {
          id: 28,
          question: "Identify the error in the following code:  int x = 10;  x == 5;",
          options: ["a) Missing assignment operator", "b) Missing semicolon", "c) Incorrect comparison operator", "d) No error"],
          correctAnswer: "b) Missing semicolon",
        },
        {
          id: 29,
          question: "Identify the error in the following code:  int a, b;  a b = 5;",
          options: ["a) Missing data type for b", "b) Missing semicolon after a", "c) Missing comma after a", "d) No error"],
          correctAnswer: "a) Missing data type for b",
        },
        {
          id: 30,
          question: "Identify the error in the following code:  int num;  printf(\"%d\", num);",
          options: ["a) Missing data type for num", "b) Missing ampersand (&) before num", "c) Uninitialized variable", "d) No error"],
          correctAnswer: "c) Uninitialized variable",
        },
      ],


      "3.3": [
        {
          id: 1,
          question: "What is the value of x after the following code is executed?",
          options: ["a) 5", "b) 6", "c) 4", "d) 7"],
          correctAnswer: "b) 6",
        },
        {
          id: 2,
          question: "What will be the output of the following code?",
          options: [
            "a) 5 3",
            "b) 5 4",
            "c) 6 4",
            "d) 6 3"
          ],
          correctAnswer: "c) 6 4",
        },
        {
          id: 3,
          question: "Which operator increases the value of a variable by 1?",
          options: ["a) +", "b) -", "c) ++", "d) --"],
          correctAnswer: "c) ++",
        },
        {
          id: 4,
          question: "What is the result of the following expression?",
          options: ["a) 8.0", "b) 8", "c) 5.2", "d) 8.2"],
          correctAnswer: "a) 8.0",
        },
        {
          id: 5,
          question: "In C, what happens when you assign a float value to an integer variable?",
          options: [
            "a) The float value is truncated to an integer",
            "b) Compilation error occurs",
            "c) The float value is rounded to the nearest integer",
            "d) Undefined behavior"
          ],
          correctAnswer: "a) The float value is truncated to an integer",
        },
        {
          id: 6,
          question: "Which type of conversion is performed when an int is assigned to a float?",
          options: [
            "a) Implicit conversion",
            "b) Explicit conversion",
            "c) Typecasting",
            "d) No conversion"
          ],
          correctAnswer: "a) Implicit conversion",
        },
        {
          id: 7,
          question: "What is the result of the following expression?",
          options: ["a) 11", "b) 21", "c) 16", "d) 13"],
          correctAnswer: "a) 11",
        },
        {
          id: 8,
          question: "Which operator has the highest precedence in C?",
          options: ["a) +", "b) *", "c) ()", "d) /"],
          correctAnswer: "c) ()",
        },
        {
          id: 9,
          question: "What is the value of result after the following code is executed?",
          options: ["a) 26", "b) 33", "c) 19", "d) 48"],
          correctAnswer: "a) 26",
        },
        {
          id: 10,
          question: "The ______ operator is used for decrementing the value of a variable by 1.",
          options: ["a) --", "b) ++", "c) -", "d) +"],
          correctAnswer: "a) --",
        },
        {
          id: 11,
          question: "The ______ operator is used for explicit type conversion in C.",
          options: [
            "a) (type)",
            "b) type()",
            "c) convert",
            "d) type_cast"
          ],
          correctAnswer: "a) (type)",
        },
        {
          id: 12,
          question: "The ______ operator is used to access a member of a structure.",
          options: ["a) .", "b) ->", "c) ::", "d) :"],
          correctAnswer: "a) .",
        },
        {
          id: 13,
          question: "Identify the error in the following code:  float result = 5 / 2;",
          options: [
            "a) Missing semicolon",
            "b) Incorrect data type for result",
            "c) Missing type conversion",
            "d) No error"
          ],
          correctAnswer: "b) Incorrect data type for result",
        },
        {
          id: 14,
          question: "Identify the error in the following code:  int x = 5.6;",
          options: [
            "a) Missing semicolon",
            "b) Incorrect assignment",
            "c) No error",
            "d) Missing data type for x"
          ],
          correctAnswer: "d) Missing data type for x",
        },
        {
          id: 15,
          question: "Identify the error in the following code:  float a = 5;",
          options: [
            "a) Missing semicolon",
            "b) Incorrect assignment",
            "c) No error",
            "d) Missing type conversion"
          ],
          correctAnswer: "d) Missing type conversion",
        },
        {
          id: 16,
          question: "What is the value of y after the following code is executed?  int x = 8, y = 3;  y = x--;",
          options: ["a) 3", "b) 4", "c) 8", "d) 7"],
          correctAnswer: "a) 3",
        },
        {
          id: 17,
          question: "What will be the output of the following code?  int a = 5, b = 3;  printf(\"%d %d\", --a, b++);",
          options: ["a) 4 3", "b) 5 3", "c) 4 4", "d) 5 4"],
          correctAnswer: "a) 4 3",
        },
        {
          id: 18,
          question: "Which operator decreases the value of a variable by 1?",
          options: ["a) +", "b) -", "c) --", "d) ++"],
          correctAnswer: "c) --",
        },
        {
          id: 19,
          question: "What is the result of the following expression?  float a = 2.5int b = 3;  int result = a * b;",
          options: ["a) 7.5", "b) 7", "c) 8", "d) 6"],
          correctAnswer: "b) 7",
        },
        {
          id: 20,
          question: "In C, what happens when you assign an integer value to a float variable?",
          options: [
            "a) The integer value is rounded to the nearest float",
            "b) Compilation error occurs",
            "c) The integer value is implicitly converted to float",
            "d) Undefined behavior"
          ],
          correctAnswer: "c) The integer value is implicitly converted to float",
        },
        {
          id: 21,
          question: "Which type of conversion is performed when a float is assigned to an int?",
          options: [
            "a) Implicit conversion",
            "b) Explicit conversion",
            "c) Typecasting",
            "d) No conversion"
          ],
          correctAnswer: "a) Implicit conversion",
        },
        {
          id: 22,
          question: "What is the result of the following expression?  int a = 4, b = 2, c = 3;  int result = (a + b) / c;",
          options: ["a) 2", "b) 3", "c) 4", "d) 5"],
          correctAnswer: "b) 3",
        },
        {
          id: 23,
          question: "Which operator has the lowest precedence in C?",
          options: ["a) +", "b) *", "c) ()", "d) /"],
          correctAnswer: "a) +",
        },
        {
          id: 24,
          question: "What is the value of result after the following code is executed?  int a = 5, b = 2, c = 3;  int result = a + b * c - b;",
          options: ["a) 7", "b) 10", "c) 11", "d) 13"],
          correctAnswer: "b) 10",
        },
        {
          id: 25,
          question: "The ______ operator is used for incrementing the value of a variable by 1.",
          options: ["a) ++", "b) --", "c) +", "d) -"],
          correctAnswer: "a) ++",
        },
        {
          id: 26,
          question: "The ______ operator is used for explicit type conversion in C.",
          options: [
            "a) (type)",
            "b) type()",
            "c) convert",
            "d) type_cast"
          ],
          correctAnswer: "a) (type)",
        },
        {
          id: 27,
          question: "The ______ operator is used to access a member of a structure when using pointers.",
          options: ["a) .", "b) ->", "c) ::", "d) :"],
          correctAnswer: "b) ->",
        },
        {
          id: 28,
          question: "Identify the error in the following code:  int x = 5.6;",
          options: [
            "a) Missing semicolon",
            "b) Incorrect assignment",
            "c) No error",
            "d) Missing data type for x"
          ],
          correctAnswer: "d) Missing data type for x",
        },
        {
          id: 29,
          question: "Identify the error in the following code:  int a = 5;  float b = 3  float result = a + b;",
          options: [
            "a) Missing semicolon",
            "b) Incorrect data type for result",
            "c) No error",
            "d) Missing type conversion"
          ],
          correctAnswer: "b) Incorrect data type for result",
        },
        {
          id: 30,
          question: "Identify the error in the following code:  float a = 5;  int b = 3;  int result = a * b;",
          options: [
            "a) Missing semicolon",
            "b) Incorrect data type for result",
            "c) No error",
            "d) Missing type conversion"
          ],
          correctAnswer: "b) Incorrect data type for result",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 3 ended




    4: {
      // Chapter 1

      "4.1": [
        {
          "id": 1,
          "question": "What is the purpose of the if statement in C?",
          "options": [
            "A) To execute a block of code only if a condition is true",
            "B) To execute a block of code only if a condition is false",
            "C) To execute a block of code unconditionally",
            "D) To execute a block of code repeatedly"
          ],
          "correctAnswer": "A) To execute a block of code only if a condition is true"
        },
        {
          "id": 2,
          "question": "In C, which keyword is used to define an alternative condition when the first condition is false?",
          "options": [
            "A) else",
            "B) elseif",
            "C) switch",
            "D) unless"
          ],
          "correctAnswer": "A) else"
        },
        {
          "id": 3,
          "question": "Which control structure allows you to choose between multiple conditions, each leading to a different set of statements?",
          "options": [
            "A) switch",
            "B) if else",
            "C) else if ladder",
            "D) nested if"
          ],
          "correctAnswer": "A) switch"
        },
        {
          "id": 4,
          "question": "What is the syntax for an else if statement in C?",
          "options": [
            "A) else if(condition)",
            "B) else if condition",
            "C) elseif(condition)",
            "D) elseif condition"
          ],
          "correctAnswer": "B) else if condition"
        },
        {
          "id": 5,
          "question": "When should you use a switch statement instead of multiple if else statements?",
          "options": [
            "A) When there are multiple conditions to check",
            "B) When there is only one condition to check",
            "C) When the conditions involve complex logic",
            "D) When the conditions involve nested if statements"
          ],
          "correctAnswer": "A) When there are multiple conditions to check"
        },
        {
          "id": 6,
          "question": "In a switch statement, what is the purpose of the default case?",
          "options": [
            "A) It is executed when none of the other cases match",
            "B) It is executed first, regardless of other conditions",
            "C) It is used to define the initial value of the switch variable",
            "D) It is used to terminate the switch statement"
          ],
          "correctAnswer": "A) It is executed when none of the other cases match"
        },
        {
          "id": 7,
          "question": "What is the output of the following codeint x = 5if (x > 3)    printf(\"x is greater than 3\")} else    printf(\"x is not greater than 3\")}",
          "options": [
            "A) x is greater than 3",
            "B) x is not greater than 3",
            "C) Error: Missing semicolon",
            "D) Error: Invalid syntax"
          ],
          "correctAnswer": "A) x is greater than 3"
        },
        {
          "id": 8,
          "question": "In a nested if statement, where is the inner if statement located?",
          "options": [
            "A) Inside the condition of the outer if statement",
            "B) After the else block of the outer if statement",
            "C) Before the else block of the outer if statement",
            "D) Outside the outer if statement"
          ],
          "correctAnswer": "A) Inside the condition of the outer if statement"
        },
        {
          "id": 9,
          "question": "What happens if none of the conditions in a switch statement match the value of the switch variable?",
          "options": [
            "A) The program terminates abruptly",
            "B) The default case (if present) is executed",
            "C) The program continues without executing any case",
            "D) A compilation error occurs"
          ],
          "correctAnswer": "B) The default case (if present) is executed"
        },
        {
          "id": 10,
          "question": "What is the purpose of the break statement in a switch case?",
          "options": [
            "A) It exits the switch statement and continues with the next statement after the switch block",
            "B) It continues with the next case without executing the remaining code in the current case",
            "C) It restarts the current case from the beginning",
            "D) It ends the program abruptly"
          ],
          "correctAnswer": "A) It exits the switch statement and continues with the next statement after the switch block"
        },
        {
          "id": 11,
          "question": "What is the output of the following codeint x = 10switch(x)    case 5       printf(\"x is 5\")       break   case 10       printf(\"x is 10\")       break   default       printf(\"x is neither 5 nor 10\")}",
          "options": [
            "A) x is 5",
            "B) x is 10",
            "C) x is neither 5 nor 10",
            "D) Error: Missing semicolon"
          ],
          "correctAnswer": "B) x is 10"
        },
        {
          "id": 12,
          "question": "In a switch statement, what happens if you forget to include a break statement after a case block?",
          "options": [
            "A) It causes a compilation error",
            "B) It leads to a runtime error",
            "C) It causes the program to execute the code in the next case block(s) as well",
            "D) It has no effect on the program's execution"
          ],
          "correctAnswer": "C) It causes the program to execute the code in the next case block(s) as well"
        },
        {
          "id": 13,
          "question": "Which of the following is a valid syntax for an else if ladder in CA) else if (condition1)    // code blocelse if (condition2)    // code blocB) else if (condition1)    // code blocelse    // code blocC) if (condition1)    // code blocif (condition2)    // code blocD) if (condition1)    // code blocelse if (condition2)    // code bloc}",
          "options": [
            "A) A) else if (condition1)    // code blocelse if (condition2)    // code bloc}",
            "B) B) else if (condition1)    // code blocelse    // code bloc}",
            "C) C) if (condition1)    // code blocif (condition2)    // code bloc}",
            "D) D) if (condition1)    // code blocelse if (condition2)    // code bloc}"
          ],
          "correctAnswer": "A) A) else if (condition1)    // code blocelse if (condition2)    // code bloc}"
        },
        {
          "id": 14,
          "question": "What is the output of the following codeint x = 7if (x > 5)    printf(\"x is greater than 5\")} else if (x < 5)    printf(\"x is less than 5\")} else    printf(\"x is equal to 5\")}",
          "options": [
            "A) x is greater than 5",
            "B) x is less than 5",
            "C) x is equal to 5",
            "D) Error: Invalid syntax"
          ],
          "correctAnswer": "A) x is greater than 5"
        },
        {
          "id": 15,
          "question": "When should you use a nested if statement?",
          "options": [
            "A) When you need to check multiple conditions, but only one condition is relevant at a time",
            "B) When you need to execute a block of code repeatedly",
            "C) When you want to avoid using else statements",
            "D) When you want to execute a block of code regardless of any condition"
          ],
          "correctAnswer": "A) When you need to check multiple conditions, but only one condition is relevant at a time"
        },
        {
          "id": 16,
          "question": "What is the output of the following codeint x = 4if (x > 3)    if (x < 5)        printf(\"x is between 3 and 5\")   } else    printf(\"x is not greater than 3\")}",
          "options": [
            "A) x is between 3 and 5",
            "B) x is not greater than 3",
            "C) Error: Missing semicolon",
            "D) Error: Invalid syntax"
          ],
          "correctAnswer": "A) x is between 3 and 5"
        },
        {
          "id": 17,
          "question": "In a switch statement, can the cases contain multiple statements?",
          "options": [
            "A) Yes",
            "B) No"
          ],
          "correctAnswer": "A) Yes"
        },
        {
          "id": 18,
          "question": "What is the output of the following codeint x = 2switch(x)    case 1       printf(\"x is 1\")       break   case 2       printf(\"x is 2\")       break   case 3       printf(\"x is 3\")       break   default       printf(\"x is not 1, 2, or 3\")}",
          "options": [
            "A) x is 1",
            "B) x is 2",
            "C) x is 3",
            "D) x is not 1, 2, or 3"
          ],
          "correctAnswer": "B) x is 2"
        },
        {
          "id": 19,
          "question": "What is the output of the following codeint x = 5switch(x)    case 1       printf(\"x is 1\")       break   case 2       printf(\"x is 2\")       break   default       printf(\"x is neither 1 nor 2\")}",
          "options": [
            "A) x is 1",
            "B) x is 2",
            "C) x is neither 1 nor 2",
            "D) Error: Invalid syntax"
          ],
          "correctAnswer": "C) x is neither 1 nor 2"
        },
        {
          "id": 20,
          "question": "In a switch statement, can the switch variable be of type float?",
          "options": [
            "A) Yes",
            "B) No"
          ],
          "correctAnswer": "B) No"
        },
        {
          "id": 21,
          "question": "What is the output of the following codeint x = 2if (x < 5)    printf(\"x is less than 5\")} else if (x == 5)    printf(\"x is equal to 5\")} else    printf(\"x is greater than 5\")}",
          "options": [
            "A) x is less than 5",
            "B) x is equal to 5",
            "C) x is greater than 5",
            "D) Error: Invalid syntax"
          ],
          "correctAnswer": "A) x is less than 5"
        },
        {
          "id": 22,
          "question": "Which of the following is a valid syntax for an else statement in C?",
          "options": [
            "A) else    // code bloc}",
            "B) if (condition)    // code bloc} else    // code bloc}",
            "C) if (condition)    // code bloc} else if (condition)    // code bloc}",
            "D) else if (condition)    // code bloc}"
          ],
          "correctAnswer": "A) else    // code bloc}"
        },
        {
          "id": 23,
          "question": "What is the output of the following codeint x = 6switch(x)    case 1       printf(\"x is 1\")       break   case 2       printf(\"x is 2\")       break   case 3       printf(\"x is 3\")       break   default       printf(\"x is not 1, 2, or 3\")}",
          "options": [
            "A) x is 1",
            "B) x is 2",
            "C) x is 3",
            "D) x is not 1, 2, or 3"
          ],
          "correctAnswer": "D) x is not 1, 2, or 3"
        },
        {
          "id": 24,
          "question": "In a switch statement, can cases have the same value?",
          "options": [
            "A) Yes",
            "B) No"
          ],
          "correctAnswer": "A) Yes"
        },
        {
          "id": 25,
          "question": "What is the output of the following codeint x = 8switch(x)    case 1       printf(\"x is 1\")       break   case 2       printf(\"x is 2\")       break   default       printf(\"x is not 1 or 2\")       break}",
          "options": [
            "A) x is 1",
            "B) x is 2",
            "C) x is not 1 or 2",
            "D) Error: Missing semicolon"
          ],
          "correctAnswer": "C) x is not 1 or 2"
        },
        {
          "id": 26,
          "question": "In a switch statement, can the switch variable be of type char?",
          "options": [
            "A) Yes",
            "B) No"
          ],
          "correctAnswer": "A) Yes"
        },
        {
          "id": 27,
          "question": "What is the output of the following codeint x = 2if (x > 5)    printf(\"x is greater than 5\")} else if (x == 5)    printf(\"x is equal to 5\")} else    printf(\"x is not greater than 5\")}",
          "options": [
            "A) x is greater than 5",
            "B) x is equal to 5",
            "C) x is not greater than 5",
            "D) Error: Invalid syntax"
          ],
          "correctAnswer": "C) x is not greater than 5"
        },
        {
          "id": 28,
          "question": "In a switch statement, can the cases have expressions instead of constants?",
          "options": [
            "A) Yes",
            "B) No"
          ],
          "correctAnswer": "A) Yes"
        },
        {
          "id": 29,
          "question": "What will x print in switch case if x = 7?",
          "options": [
            "A) x is 1",
            "B) x is 2",
            "C) x is 3",
            "D) x is not 1, 2, or 3"
          ],
          "correctAnswer": "D) x is not 1, 2, or 3"
        },
        {
          "id": 30,
          "question": "Which of the following is a valid syntax for an else if statement in CA) else if (condition)    // code blocB) else if condition    // code blocC) if else (condition)    // code blocD) if else condition    // code bloc}",
          "options": [
            "A) else if (condition)    // code bloc}",
            "B) else if condition    // code bloc}",
            "C) if else (condition)    // code bloc}",
            "D) if else condition    // code bloc}"
          ],
          "correctAnswer": "A) else if (condition)    // code bloc}"
        }
      ],


      "4.2": [
        {
          id: 1,
          question: "What is the purpose of a loop in programming?",
          options: [
            "A) To execute a block of code repeatedly",
            "B) To skip a block of code",
            "C) To execute a block of code only once",
            "D) To execute a block of code conditionally",
          ],
          correctAnswer: "A) To execute a block of code repeatedly",
        },
        {
          id: 2,
          question: "In C, which loop is known as an entry-controlled loop?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) goto loop",
          ],
          correctAnswer: "A) for loop",
        },
        {
          id: 3,
          question: "What is the syntax for a for loop in C?",
          options: [
            "A) for(initialization; condition; increment) { // code block }",
            "B) for(condition; increment; initialization) { // code block }",
            "C) for(condition; initialization; increment) { // code block }",
            "D) for(increment; condition; initialization) { // code block }",
          ],
          correctAnswer: "A) for(initialization; condition; increment) { // code block }",
        },
        {
          id: 4,
          question: "In a for loop, where is the initialization step located?",
          options: [
            "A) Before the condition",
            "B) After the condition",
            "C) After the increment",
            "D) Inside the code block",
          ],
          correctAnswer: "A) Before the condition",
        },
        {
          id: 5,
          question: "What is the output of the following codeint ifor(i=0; i<5; i++)    printf(\"%d \", i)}",
          options: [
            "A) 0 1 2 3 4",
            "B) 1 2 3 4 5",
            "C) 0 1 2 3",
            "D) 1 2 3 4",
          ],
          correctAnswer: "A) 0 1 2 3 4",
        },
        {
          id: 6,
          question: "In C, which loop is known as an exit-controlled loop?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) goto loop",
          ],
          correctAnswer: "C) do-while loop",
        },
        {
          id: 7,
          question: "What is the syntax for a while loop in C?",
          options: [
            "A) while(condition) { // code block }",
            "B) do { // code block } while(condition);",
            "C) while { // code block } (condition);",
            "D) while { // code block };",
          ],
          correctAnswer: "A) while(condition) { // code block }",
        },
        {
          id: 8,
          question: "What is the purpose of the break statement in a loop?",
          options: [
            "A) It terminates the loop and continues with the next iteration",
            "B) It restarts the loop from the beginning",
            "C) It continues with the next iteration of the loop without executing the remaining code",
            "D) It ends the program abruptly",
          ],
          correctAnswer: "A) It terminates the loop and continues with the next iteration",
        },
        {
          id: 9,
          question: "What is the output of the following codeint i = 0while(i < 3)    printf(\"%d \", i)   i++}",
          options: [
            "A) 0 1 2",
            "B) 1 2 3",
            "C) 0 1 2 3",
            "D) 1 2 3 4",
          ],
          correctAnswer: "A) 0 1 2",
        },
        {
          id: 10,
          question: "In a nested loop, which loop is considered the outer loop?",
          options: [
            "A) The loop mentioned first in the code",
            "B) The loop mentioned second in the code",
            "C) The loop with the smaller range",
            "D) The loop with the larger range",
          ],
          correctAnswer: "A) The loop mentioned first in the code",
        },
        {
          id: 11,
          question: "What is the output of the following codeint i, jfor(i=1; i<=3; i++)    for(j=1; j<=2; j++)        printf(\"%d%d \", i, j)   }",
          options: [
            "A) 112233",
            "B) 121212",
            "C) 123123",
            "D) 221122",
          ],
          correctAnswer: "C) 123123",
        },
        {
          id: 12,
          question: "What is the purpose of the continue statement in a loop?",
          options: [
            "A) It skips the rest of the code in the loop and continues with the next iteration",
            "B) It terminates the loop and continues with the next iteration",
            "C) It restarts the loop from the beginning",
            "D) It has no effect on the loop's execution",
          ],
          correctAnswer: "A) It skips the rest of the code in the loop and continues with the next iteration",
        },
        {
          id: 13,
          question: "What is the output of the following codeint ifor(i=0; i<5; i++)    if(i == 2       continue   printf(\"%d \", i)}",
          options: [
            "A) 0 1 3 4",
            "B) 0 1 2 3 4",
            "C) 0 1 2 3",
            "D) 1 3 4",
          ],
          correctAnswer: "A) 0 1 3 4",
        },
        {
          id: 14,
          question: "What is the output of the following codeint i = 0while(1)    printf(\"%d \", i)   i++   if(i == 3       break}",
          options: [
            "A) 0 1 2",
            "B) 0 1 2 3",
            "C) 1 2 3",
            "D) 0 1",
          ],
          correctAnswer: "A) 0 1 2",
        },
        {
          id: 15,
          question: "What is the purpose of the goto statement in C?",
          options: [
            "A) To skip a block of code",
            "B) To transfer control to a labeled statement in the code",
            "C) To exit the program",
            "D) To restart the loop from the beginning",
          ],
          correctAnswer: "B) To transfer control to a labeled statement in the code",
        },
        {
          id: 16,
          question: "In C, how do you label a statement for use with a goto statement?",
          options: [
            "A) label:",
            "B) label();",
            "C) label[];",
            "D) label++",
          ],
          correctAnswer: "A) label:",
        },
        {
          id: 17,
          question: "What is the output of the following codeint i, jfor(i=1; i<=3; i++)    for(j=1; j<=3; j++)        if(j == 2           goto endLoop       printf(\"%d%d \", i, j)   endLoop:",
          options: [
            "A) 11 12 13 21 22 23",
            "B) 11 12 13",
            "C) 11 21 31",
            "D) 12 22 32",
          ],
          correctAnswer: "B) 11 12 13",
        },
        {
          id: 18,
          question: "In a comparison between while and do-while loops, which loop is guaranteed to execute the code inside the loop at least once?",
          options: [
            "A) while loop",
            "B) do-while loop",
          ],
          correctAnswer: "B) do-while loop",
        },
        {
          id: 19,
          question: "In a comparison between while and do-while loops, which loop checks the condition before executing the code inside the loop?",
          options: [
            "A) while loop",
            "B) do-while loop",
          ],
          correctAnswer: "A) while loop",
        },
        {
          id: 20,
          question: "What is the output of the following codeint i = 5while(i < 3)    printf(\"%d \", i)   i++}",
          options: [
            "A) This code will not produce any output.",
            "B) 5",
            "C) 5 6",
            "D) 5 6 7",
          ],
          correctAnswer: "A) This code will not produce any output.",
        },
        {
          id: 21,
          question: "What is the output of the following codeint i = 5do    printf(\"%d \", i)   i++} while(i < 3);",
          options: [
            "A) 5",
            "B) 5 6",
            "C) 5 6 7",
            "D) This code will not produce any output.",
          ],
          correctAnswer: "B) 5 6",
        },
        {
          id: 22,
          question: "What happens if you forget to increment the loop variable in a while loop?",
          options: [
            "A) The loop will execute indefinitely",
            "B) The loop will not execute at all",
            "C) It will cause a compilation error",
            "D) It will cause a runtime error",
          ],
          correctAnswer: "A) The loop will execute indefinitely",
        },
        {
          id: 23,
          question: "What is the output of the following codeint i = 0do    printf(\"%d \", i)} while(i < 0);",
          options: [
            "A) 0",
            "B) This code will not produce any output.",
            "C) 0 1",
            "D) It will cause a compilation error.",
          ],
          correctAnswer: "A) 0",
        },
        {
          id: 24,
          question: "In a for loop, can the initialization step be omitted?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 25,
          question: "What is the output of the following codeint ifor(i=0; i<5; i--)    printf(\"%d \", i)}",
          options: [
            "A) This code will not produce any output.",
            "B) 0 1 2 3 4",
            "C) 0 -1 -2 -3 -4",
            "D) It will cause a compilation error.",
          ],
          correctAnswer: "C) 0 -1 -2 -3 -4",
        },
        {
          id: 26,
          question: "In a for loop, can the condition be omitted?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 27,
          question: "What is the output of the following codeint i = 0for(; i<5; i++)    printf(\"%d \", i)}",
          options: [
            "A) 0 1 2 3 4",
            "B) 1 2 3 4 5",
            "C) 0 1 2 3",
            "D) This code will not produce any output.",
          ],
          correctAnswer: "A) 0 1 2 3 4",
        },
        {
          id: 28,
          question: "In a do-while loop, can the condition be omitted?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 29,
          question: "What is the output of the following codeint i = 5while(i < 3)    printf(\"%d \", i)   i++}",
          options: [
            "A) This code will not produce any output.",
            "B) 5",
            "C) 5 6",
            "D) 5 6 7",
          ],
          correctAnswer: "A) This code will not produce any output.",
        },
        {
          id: 30,
          question: "What is the output of the following codeint i = 5do    printf(\"%d \", i)   i++} while(i < 3);",
          options: [
            "A) 5",
            "B) 5 6",
            "C) 5 6 7",
            "D) This code will not produce any output.",
          ],
          correctAnswer: "B) 5 6",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 4 ended





    5: {
      // Chapter 1
      "5.1": [
        {
          id: 1,
          question: "What is the purpose of using an array in programming?",
          options: [
            "a) To store multiple elements of the same type",
            "b) To perform mathematical operations",
            "c) To execute conditional statements",
            "d) To print output on the screen"
          ],
          correctAnswer: "a) To store multiple elements of the same type"
        },
        {
          id: 2,
          question: "Which of the following is the correct way to declare an array in C?",
          options: [
            "a) int arr[];",
            "b) int arr[10];",
            "c) arr[10];",
            "d) array int[10];"
          ],
          correctAnswer: "b) int arr[10];"
        },
        {
          id: 3,
          question: "How would you initialize an array with values in C?",
          options: [
            "a) int arr = {1, 2, 3};",
            "b) int arr[3] = {1, 2, 3};",
            "c) arr = {1, 2, 3};",
            "d) arr[3] = {1, 2, 3};"
          ],
          correctAnswer: "b) int arr[3] = {1, 2, 3};"
        },
        {
          id: 4,
          question: "How do you access the third element of an array 'arr' in C?",
          options: [
            "a) arr[3];",
            "b) arr[2];",
            "c) arr(3);",
            "d) arr.3;"
          ],
          correctAnswer: "b) arr[2];"
        },
        {
          id: 5,
          question: "What happens if you try to access an index beyond the bounds of an array in C?",
          options: [
            "a) It gives a runtime error",
            "b) It gives a compile-time error",
            "c) It returns garbage value",
            "d) It gives a segmentation fault"
          ],
          correctAnswer: "d) It gives a segmentation fault"
        },
        {
          id: 6,
          question: "What is the size of an array declared as int arr[5] in C?",
          options: [
            "a) 5 bytes",
            "b) 10 bytes",
            "c) 20 bytes",
            "d) It depends on the system architecture"
          ],
          correctAnswer: "c) 20 bytes"
        },
        {
          id: 7,
          question: "Which of the following code snippets finds the largest element in an array 'arr' of size 'n' in C?",
          options: [
            "a) int max = arr[0]; for(int i = 1; i < n; i++) { if(arr[i] > max) max = arr[i]; }",
            "b) int max = 0; for(int i = 0; i < n; i++) { if(arr[i] > max) max = arr[i]; }",
            "c) int max = arr[n]; for(int i = 0; i < n; i++) { if(arr[i] > max) max = arr[i]; }",
            "d) int max = arr[0]; for(int i = 0; i < n; i++) { if(arr[i] > max) max = arr[i]; }"
          ],
          correctAnswer: "a) int max = arr[0]; for(int i = 1; i < n; i++) { if(arr[i] > max) max = arr[i]; }"
        },
        {
          id: 8,
          question: "Which sorting algorithm has the worst-case time complexity of O(n^2)?",
          options: [
            "a) Bubble Sort",
            "b) Quick Sort",
            "c) Merge Sort",
            "d) Radix Sort"
          ],
          correctAnswer: "a) Bubble Sort"
        },
        {
          id: 9,
          question: "What is the correct way to pass an array to a function in C?",
          options: [
            "a) void func(int arr[])",
            "b) void func(int *arr)",
            "c) void func(int &arr)",
            "d) void func(int arr[10])"
          ],
          correctAnswer: "a) void func(int arr[])"
        },
        {
          id: 10,
          question: "Which function is used to search for an element in an array in C?",
          options: [
            "a) search()",
            "b) find()",
            "c) scanf()",
            "d) binary_search()"
          ],
          correctAnswer: "d) binary_search()"
        },
        {
          id: 11,
          question: "In C, what is the index of the last element in an array of size 'n'?",
          options: [
            "a) n-1",
            "b) n",
            "c) n+1",
            "d) n/2"
          ],
          correctAnswer: "a) n-1"
        },
        {
          id: 12,
          question: "What is the output of the following code snippet```int arr[3] = {1, 2, 3}printf(\"%d\", arr[3]);```",
          options: [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) Garbage value"
          ],
          correctAnswer: "d) Garbage value"
        },
        {
          id: 13,
          question: "Which statement is used to perform bound checking in C?",
          options: [
            "a) if",
            "b) for",
            "c) while",
            "d) There is no built-in bound checking in C"
          ],
          correctAnswer: "d) There is no built-in bound checking in C"
        },
        {
          id: 14,
          question: "Which sorting algorithm has the best time complexity for average and worst cases in most scenarios?",
          options: [
            "a) Bubble Sort",
            "b) Selection Sort",
            "c) Merge Sort",
            "d) Quick Sort"
          ],
          correctAnswer: "c) Merge Sort"
        },
        {
          id: 15,
          question: "What is the output of the following code snippet```int arr[5]printf(\"%d\", arr[0]);```",
          options: [
            "a) 0",
            "b) Garbage value",
            "c) Compilation error",
            "d) Runtime error"
          ],
          correctAnswer: "b) Garbage value"
        },
        {
          id: 16,
          question: "Which sorting algorithm uses the divide-and-conquer strategy?",
          options: [
            "a) Bubble Sort",
            "b) Insertion Sort",
            "c) Merge Sort",
            "d) Selection Sort"
          ],
          correctAnswer: "c) Merge Sort"
        },
        {
          id: 17,
          question: "What is the output of the following code snippet```int arr[5] = {1, 2, 3, 4, 5}printf(\"%d\", arr[4]);```",
          options: [
            "a) 1",
            "b) 2",
            "c) 5",
            "d) 4"
          ],
          correctAnswer: "c) 5"
        },
        {
          id: 18,
          question: "Which of the following is used to find the smallest element in an array 'arr' of size 'n' in C?",
          options: [
            "a) min_element(arr, n)",
            "b) find_min(arr, n)",
            "c) int min = arr[0]; for(int i=1; i<n; i++) if(arr[i]<min) min=arr[i];",
            "d) smallest(arr, n)"
          ],
          correctAnswer: "c) int min = arr[0]; for(int i=1; i<n; i++) if(arr[i]<min) min=arr[i];"
        },
        {
          id: 19,
          question: "What does the following code do```int temp = arr[i]arr[i] = arr[j]arr[j] = temp;```",
          options: [
            "a) Swaps the values of arr[i] and arr[j]",
            "b) Assigns the value of arr[j] to arr[i]",
            "c) Assigns the value of arr[i] to arr[j]",
            "d) Sets arr[i] to 0"
          ],
          correctAnswer: "a) Swaps the values of arr[i] and arr[j]"
        },
        {
          id: 20,
          question: "Which loop is commonly used for iterating through the elements of an array in C?",
          options: [
            "a) for",
            "b) while",
            "c) do-while",
            "d) if"
          ],
          correctAnswer: "a) for"
        },
        {
          id: 21,
          question: "What is the output of the following code snippet```int arr[3] = {1, 2, 3}printf(\"%d\", *(arr+1));```",
          options: [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) Compilation error"
          ],
          correctAnswer: "b) 2"
        },
        {
          id: 22,
          question: "Which of the following statements is true about arrays in C?",
          options: [
            "a) The size of an array can be changed after it is declared.",
            "b) Array indices can be negative.",
            "c) Array elements must be of the same data type.",
            "d) Arrays can only store a single element."
          ],
          correctAnswer: "c) Array elements must be of the same data type."
        },
        {
          id: 23,
          question: "Which sorting algorithm has a time complexity of O(n log n) in average and worst cases?",
          options: [
            "a) Bubble Sort",
            "b) Insertion Sort",
            "c) Quick Sort",
            "d) Selection Sort"
          ],
          correctAnswer: "c) Quick Sort"
        },
        {
          id: 24,
          question: "What is the output of the following code snippet```int arr[5] = {5, 4, 3, 2, 1}for(int i=0; i<5; i++)  printf(\"%d \", arr[i])}```",
          options: [
            "a) 5 4 3 2 1",
            "b) 1 2 3 4 5",
            "c) 1 2 3 4 5 (in any order)",
            "d) 5 4 3 2 1 (in any order)"
          ],
          correctAnswer: "a) 5 4 3 2 1"
        },
        {
          id: 25,
          question: "Which of the following statements is true about multidimensional arrays in C?",
          options: [
            "a) All rows must have the same number of columns.",
            "b) Multidimensional arrays cannot be passed to functions.",
            "c) They can only have two dimensions.",
            "d) The elements must be of different data types."
          ],
          correctAnswer: "a) All rows must have the same number of columns."
        },
        {
          id: 26,
          question: "What is the output of the following code snippet```int arr[3] = {1, 2, 3}printf(\"%p\", &arr[0]);```",
          options: [
            "a) Address of arr[0]",
            "b) 1",
            "c) 2",
            "d) Compilation error"
          ],
          correctAnswer: "a) Address of arr[0]"
        },
        {
          id: 27,
          question: "Which of the following is the correct way to declare an array in JavaScript?",
          options: [
            "a) int arr[];",
            "b) int arr[10];",
            "c) let arr = [];",
            "d) array int[10];"
          ],
          correctAnswer: "c) let arr = [];"
        },
        {
          id: 28,
          question: "What is the output of the following code snippet```let arr = [1, 2, 3]console.log(arr.length);```",
          options: [
            "a) 1",
            "b) 2",
            "c) 3",
            "d) Compilation error"
          ],
          correctAnswer: "c) 3"
        },
        {
          id: 29,
          question: "In JavaScript, how do you access the first element of an array 'arr'?",
          options: [
            "a) arr[0]",
            "b) arr.first",
            "c) arr.firstElement",
            "d) arr[1]"
          ],
          correctAnswer: "a) arr[0]"
        },
        {
          id: 30,
          question: "What is the purpose of using a loop when working with arrays in programming?",
          options: [
            "a) To store multiple elements of the same type",
            "b) To perform mathematical operations",
            "c) To iterate through elements and perform operations",
            "d) To print output on the screen"
          ],
          correctAnswer: "c) To iterate through elements and perform operations"
        },

      ],







      "5.2": [
        {
          id: 1,
          question: "How is a two-dimensional array declared in C?",
          options: ["a) int arr[2][2];", "b) int arr[];", "c) arr[2][2];", "d) array int[2][2];"],
          correctAnswer: "a) int arr[2][2];",
        },
        {
          id: 2,
          question: "What is the correct way to initialize a 2D array with values in C?",
          options: ["a) int arr[2][2] = {{1, 2}, {3, 4}};", "b) arr[2][2] = {{1, 2}, {3, 4}};", "c) int arr[][] = {{1, 2}, {3, 4}};", "d) int arr[1][2] = {1, 2, 3, 4};"],
          correctAnswer: "a) int arr[2][2] = {{1, 2}, {3, 4}};",
        },

        {
          id: 3,
          question: "How do you access the element at row 'i' and column 'j' in a 2D array 'arr' in C?",
          options: ["a) arr[i][j];", "b) arr[i, j];", "c) arr(i, j);", "d) arr(i)(j);"],
          correctAnswer: "a) arr[i][j];",
        },
        {
          id: 4,
          question: "What is the output of the following code snippet```int arr[2][2] = {{1, 2}, {3, 4}}printf(\"%d\", arr[1][0]);```",
          options: ["a) 1", "b) 2", "c) 3", "d) 4"],
          correctAnswer: "c) 3",
        },
        {
          id: 5,
          question: "In a 2D array, how many square brackets are needed to access an element?",
          options: ["a) 1", "b) 2", "c) 3", "d) It depends on the array size"],
          correctAnswer: "b) 2",
        },
        {
          id: 6,
          question: "Which of the following code snippets correctly stores and displays elements of a 2D array 'arr' in C```for(int i=0; i<2; i++)    for(int j=0; j<2; j++)        printf(\"%d \", arr[i][j])      printf(\"\")}```",
          options: ["a)", "b)", "c)", "d)"],
          correctAnswer: "a)",
        },
        {
          id: 7,
          question: "How is a 2D array represented in memory?",
          options: ["a) As a contiguous block of memory", "b) As separate blocks for each row", "c) As a linked list of elements", "d) It depends on the compiler"],
          correctAnswer: "a) As a contiguous block of memory",
        },
        {
          id: 8,
          question: "What is the output of the following code snippet```int arr[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}printf(\"%d\", arr[2][1]);```",
          options: ["a) 2", "b) 5", "c) 8", "d) 7"],
          correctAnswer: "b) 5",
        },
        {
          id: 9,
          question: "What does the following code snippet do```int arr[2][2] = {{1, 2}, {3, 4}}int temp = arr[0][0]arr[0][0] = arr[1][1]arr[1][1] = temp;```",
          options: ["a) Swaps the values of arr[0][0] and arr[1][1]", "b) Assigns the value of arr[1][1] to arr[0][0]", "c) Assigns the value of arr[0][0] to arr[1][1]", "d) Sets arr[0][0] to 0"],
          correctAnswer: "a) Swaps the values of arr[0][0] and arr[1][1]",
        },
        {
          id: 10,
          question: "How do you declare a 2D array with 3 rows and 4 columns in C?",
          options: ["a) int arr[3][4];", "b) int arr[4][3];", "c) int arr[12];", "d) int arr[3][3][4];"],
          correctAnswer: "a) int arr[3][4];",
        },
        {
          id: 11,
          question: "What is the correct way to pass a 2D array to a function in C?",
          options: ["a) void func(int arr[][])", "b) void func(int **arr)", "c) void func(int arr[3][3])", "d) void func(int arr[][3])"],
          correctAnswer: "d) void func(int arr[][3])",
        },
        {
          id: 12,
          question: "Which of the following is used to initialize the entire 2D array to zero in C?",
          options: ["a) memset(arr, 0, sizeof(arr))", "b) initialize(arr, 0)", "c) arr = {0}", "d) zero(arr)"],
          correctAnswer: "a) memset(arr, 0, sizeof(arr))",
        },
        {
          id: 13,
          question: "What is the output of the following code snippet```int arr[2][2] = {{1, 2}, {3, 4}}printf(\"%d\", *(*(arr+1)+1));```",
          options: ["a) 1", "b) 2", "c) 3", "d) 4"],
          correctAnswer: "d) 4",
        },
        {
          id: 14,
          question: "What is the size of a 2D array declared as int arr[3][4] in C?",
          options: ["a) 12", "b) 24", "c) 48", "d) It depends on the system architecture"],
          correctAnswer: "b) 24",
        },
        {
          id: 15,
          question: "Which of the following is true about the following code snippet```int arr[2][3] = {{1, 2, 3}, {4, 5, 6}};```",
          options: ["a) It is a 2x3 matrix", "b) It is a 3x2 matrix", "c) It is a 2x2 matrix", "d) It is a compilation error"],
          correctAnswer: "a) It is a 2x3 matrix",
        },
        {
          id: 16,
          question: "What is the output of the following code snippet```int arr[2][2] = {{1, 2}, {3, 4}}printf(\"%d\", arr[0][1] - arr[1][0]);```",
          options: ["a) 1", "b) -1", "c) 2", "d) -2"],
          correctAnswer: "a) 1",
        },
        {
          id: 17,
          question: "How many elements are there in a 2D array declared as int arr[4][3] in C?",
          options: ["a) 7", "b) 10", "c) 12", "d) 24"],
          correctAnswer: "c) 12",
        },
        {
          id: 18,
          question: "What is the output of the following code snippet```int arr[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}for(int i=0; i<3; i++)    for(int j=0; j<3; j++)        printf(\"%d \", arr[i][j])      printf(\"\")}```",
          options: ["a) 1 2 3 4 5 6 7 8 9 (in any order)", "b) 1 4 7 2 5 8 3 6 9 (in any order)", "c) 9 8 7 6 5 4 3 2 1 (in any order)", "d) 1 2 3 4 5 6 7 8 9 (in that order)"],
          correctAnswer: "d) 1 2 3 4 5 6 7 8 9",
        },
        {
          id: 19,
          question: "What is the output of the following code snippet```int arr[3][2] = {{1, 2}, {3, 4}, {5, 6}}printf(\"%d\", arr[2][1]);```",
          options: ["a) 2", "b) 3", "c) 5", "d) 6"],
          correctAnswer: "d) 6",
        },
        {
          id: 20,
          question: "Which statement is used to find the total number of rows in a 2D array in C?",
          options: ["a) sizeof(arr) / sizeof(arr[0])", "b) rows(arr)", "c) length(arr)", "d) total_rows(arr)"],
          correctAnswer: "a) sizeof(arr) / sizeof(arr[0])",
        },
        {
          id: 21,
          question: "What is the output of the following code snippet```int arr[2][2] = {{1, 2}, {3, 4}}printf(\"%d\", arr[1][2] - arr[0][1]);```",
          options: ["a) 1", "b) 2", "c) 3", "d) 4"],
          correctAnswer: "b) 2",
        },
        {
          id: 22,
          question: "What is the correct way to initialize a 2D array with all elements set to 1 in C?",
          options: ["a) int arr[2][2] = {1, 1, 1, 1};", "b) int arr[2][2] = {{1, 1}, {1, 1}};", "c) int arr[1][1] = {1};", "d) int arr[][] = {1, 1, 1, 1};"],
          correctAnswer: "b) int arr[2][2] = {{1, 1}, {1, 1}};",
        },
        {
          id: 23,
          question: "What is the output of the following code snippet```int arr[2][2] = {{1, 2}, {3, 4}}printf(\"%d\", *arr[1]);```",
          options: ["a) 1", "b) 2", "c) 3", "d) 4"],
          correctAnswer: "c) 3",
        },
        {
          id: 24,
          question: "Which of the following is used to set all elements of a 2D array to a specific value in C?",
          options: ["a) memset(arr, value, sizeof(arr))", "b) set_all(arr, value)", "c) initialize(arr, value)", "d) arr = {value}"],
          correctAnswer: "a) memset(arr, value, sizeof(arr))",
        },
        {
          id: 25,
          question: "What is the output of the following code snippet```int arr[2][2] = {{1, 2}, {3, 4}}printf(\"%d\", arr[0][0] + arr[1][1]);```",
          options: ["a) 1", "b) 2", "c) 3", "d) 5"],
          correctAnswer: "d) 5",
        },
        {
          id: 26,
          question: "Which statement is used to find the total number of elements in a 2D array 'arr' with 'm' rows and 'n' columns in C?",
          options: ["a) m * n", "b) sizeof(arr) / sizeof(arr[0][0])", "c) m + n", "d) total_elements(arr, m, n)"],
          correctAnswer: "b) sizeof(arr) / sizeof(arr[0][0])",
        },
      ],

      "5.3": [
        {
          id: 1,
          question: "How do you declare a string variable in C?",
          options: [
            "a) char str[10];",
            "b) string str;",
            "c) int str[];",
            "d) char[] str;"
          ],
          correctAnswer: "a) char str[10];",
        },
        {
          id: 2,
          question: "What is the size of the string declared as char str[20] in C?",
          options: [
            "a) 10 characters",
            "b) 20 characters",
            "c) 19 characters",
            "d) It depends on the content of the string"
          ],
          correctAnswer: "b) 20 characters",
        },
        {
          id: 3,
          question: "Which library function is used to find the length of a string in C?",
          options: [
            "a) stringlen()",
            "b) strlength()",
            "c) strlen()",
            "d) length()"
          ],
          correctAnswer: "c) strlen()",
        },
        {
          id: 4,
          question: "How do you initialize a string in C?",
          options: [
            "a) str = 'Hello';",
            "b) char str[] = 'Hello';",
            "c) str = {'H', 'e', 'l', 'l', 'o', '\\0'};",
            "d) str = 'Hello\\0';"
          ],
          correctAnswer: "b) char str[] = 'Hello';",
        },
        {
          id: 5,
          question: "What is the null terminator in a C string?",
          options: [
            "a) It indicates the end of a string.",
            "b) It is a character with a value of 0.",
            "c) It is used to terminate a loop.",
            "d) It signifies an empty string."
          ],
          correctAnswer: "b) It is a character with a value of 0.",
        },
        {
          id: 6,
          question: "How do you read a string from the terminal in C?",
          options: [
            "a) scanf('%s', str);",
            "b) getstring(str);",
            "c) gets(str);",
            "d) read(str);"
          ],
          correctAnswer: "a) scanf('%s', str);",
        },
        {
          id: 7,
          question: "Which function is used to write a string to the screen in C?",
          options: [
            "a) display()",
            "b) write()",
            "c) printf()",
            "d) printstr()"
          ],
          correctAnswer: "c) printf()",
        },
        {
          id: 8,
          question: "Which function is used to copy one string into another in C?",
          options: [
            "a) copystr()",
            "b) strncpy()",
            "c) strcpy()",
            "d) strcopy()"
          ],
          correctAnswer: "c) strcpy()",
        },
        {
          id: 9,
          question: "What is the output of the following code snippet```char str1[] = 'Hello'char str2[10]strcpy(str2, str1)printf('%s', str2)```",
          options: [
            "a) Hello",
            "b) H",
            "c) Null",
            "d) Garbage value"
          ],
          correctAnswer: "a) Hello",
        },
        {
          id: 10,
          question: "Which function is used to concatenate two strings in C?",
          options: [
            "a) strcat()",
            "b) concat()",
            "c) combine()",
            "d) join()"
          ],
          correctAnswer: "a) strcat()",
        },
        {
          id: 11,
          question: "What is the output of the following code snippet```char str1[] = 'Hello, 'char str2[] = 'world!'strcat(str1, str2)printf('%s', str1)```",
          options: [
            "a) Hello, world!",
            "b) Hello,",
            "c) world!",
            "d) Compilation error"
          ],
          correctAnswer: "a) Hello, world!",
        },
        {
          id: 12,
          question: "Which function is used to compare two strings in C?",
          options: [
            "a) strcompare()",
            "b) strc()",
            "c) strcmp()",
            "d) compare()"
          ],
          correctAnswer: "c) strcmp()",
        },
        {
          id: 13,
          question: "What is the return value of strcmp('apple', 'banana') in C?",
          options: [
            "a) -1",
            "b) 0",
            "c) 1",
            "d) It depends on the compiler"
          ],
          correctAnswer: "a) -1",
        },
        {
          id: 14,
          question: "How do you check if a string is a palindrome in C?",
          options: [
            "a) Using reverse() function",
            "b) By comparing the string with its reverse",
            "c) By checking the first and last characters",
            "d) By using the palindrome() function"
          ],
          correctAnswer: "b) By comparing the string with its reverse",
        },
        {
          id: 15,
          question: "What is the output of the following code snippet```char str[] = 'racecar'int result = isPalindrome(str)printf('%d', result)```",
          options: [
            "a) 1",
            "b) 0",
            "c) -1",
            "d) racecar"
          ],
          correctAnswer: "a) 1",
        },
        {
          id: 16,
          question: "Which of the following is a correct way to declare and initialize a string in C?",
          options: [
            "a) char str[10]; str = 'Hello';",
            "b) string str = 'Hello';",
            "c) char str[] = {'H', 'e', 'l', 'l', 'o', '\\0'};",
            "d) char str[] = 'Hello';"
          ],
          correctAnswer: "d) char str[] = 'Hello';",
        },
        {
          id: 17,
          question: "What is the maximum length of a string that can be stored in the following declaration: char str[15]?",
          options: [
            "a) 14 characters",
            "b) 15 characters",
            "c) 16 characters",
            "d) It depends on the system"
          ],
          correctAnswer: "a) 14 characters",
        },
        {
          id: 18,
          question: "Which function is used to find the length of a string excluding the null terminator in C?",
          options: [
            "a) strnlen()",
            "b) strlength()",
            "c) strlen()",
            "d) length()"
          ],
          correctAnswer: "a) strnlen()",
        },
        {
          id: 19,
          question: "What is the output of the following code snippet```char str[] = 'Hello'int len = strnlen(str, 3)printf('%d', len)```",
          options: [
            "a) 3",
            "b) 5",
            "c) 6",
            "d) Hello"
          ],
          correctAnswer: "a) 3",
        },
        {
          id: 20,
          question: "What is the output of the following code snippet```char str1[] = 'apple'char str2[] = 'banana'int result = strcmp(str1, str2)printf('%d', result)```",
          options: [
            "a) -1",
            "b) 0",
            "c) 1",
            "d) It depends on the compiler"
          ],
          correctAnswer: "c) 1",
        },
        {
          id: 21,
          question: "Which function is used to check if a character is a digit in C?",
          options: [
            "a) isdigit()",
            "b) isalpha()",
            "c) isnumber()",
            "d) isnumeric()"
          ],
          correctAnswer: "a) isdigit()",
        },
        {
          id: 22,
          question: "What is the output of the following code snippet```char str[] = '12345'int is_digit = isdigit(str[2])printf('%d', is_digit)```",
          options: [
            "a) 0",
            "b) 1",
            "c) 2",
            "d) Compilation error"
          ],
          correctAnswer: "b) 1",
        },
        {
          id: 23,
          question: "How do you reverse a string in C without using any library functions?",
          options: [
            "a) Using a loop",
            "b) By using the reverse() function",
            "c) By using the strrev() function",
            "d) By using the revert() function"
          ],
          correctAnswer: "a) Using a loop",
        },
        {
          id: 24,
          question: "What is the output of the following code snippet```char str[] = 'abcdef'reverseString(str)printf('%s', str)```",
          options: [
            "a) fedcba",
            "b) abcdef",
            "c) a",
            "d) Compilation error"
          ],
          correctAnswer: "a) fedcba",
        },
        {
          id: 25,
          question: "How do you declare a string variable in C?",
          options: [
            "a) char str[10];",
            "b) string str;",
            "c) int str[];",
            "d) char[] str;"
          ],
          correctAnswer: "a) char str[10];",
        },
        {
          id: 26,
          question: "What is the size of the string declared as char str[20] in C?",
          options: [
            "a) 10 characters",
            "b) 20 characters",
            "c) 19 characters",
            "d) It depends on the content of the string"
          ],
          correctAnswer: "b) 20 characters",
        },
        {
          id: 27,
          question: "Which library function is used to find the length of a string in C?",
          options: [
            "a) stringlen()",
            "b) strlength()",
            "c) strlen()",
            "d) length()"
          ],
          correctAnswer: "c) strlen()",
        },
        {
          id: 28,
          question: "How do you initialize a string in C?",
          options: [
            "a) str = 'Hello';",
            "b) char str[] = 'Hello';",
            "c) str = {'H', 'e', 'l', 'l', 'o', '\\0'};",
            "d) str = 'Hello\\0';"
          ],
          correctAnswer: "b) char str[] = 'Hello';",
        },
        {
          id: 29,
          question: "What is the null terminator in a C string?",
          options: [
            "a) It indicates the end of a string.",
            "b) It is a character with a value of 0.",
            "c) It is used to terminate a loop.",
            "d) It signifies an empty string."
          ],
          correctAnswer: "b) It is a character with a value of 0.",
        },
        {
          id: 30,
          question: "How do you read a string from the terminal in C?",
          options: [
            "a) scanf('%s', str);",
            "b) getstring(str);",
            "c) gets(str);",
            "d) read(str);"
          ],
          correctAnswer: "a) scanf('%s', str);",
        },
      ],


    },


    //chapter 5 ended






    6: {
      // Chapter 1
      "6.1": [
        {
          id: 1,
          question: "What is the purpose of using functions in programming?",
          options: [
            "A) To organize code and make it more readable",
            "B) To perform mathematical calculations",
            "C) To create user interfaces",
            "D) To store data",
          ],
          correctAnswer: "A) To organize code and make it more readable",
        },
        {
          id: 2,
          question: "Which of the following best defines a function in C?",
          options: [
            "A) A block of code that performs a specific task",
            "B) A data type used to store numbers",
            "C) A variable that can hold multiple values",
            "D) A reserved keyword for loops",
          ],
          correctAnswer: "A) A block of code that performs a specific task",
        },
        {
          id: 3,
          question: "What is an advantage of using functions in a program?",
          options: [
            "A) Functions allow code reusability",
            "B) Functions are only used for mathematical calculations",
            "C) Functions make the program run faster",
            "D) Functions are not supported in C",
          ],
          correctAnswer: "A) Functions allow code reusability",
        },
        {
          id: 4,
          question: "How is a function declared in C?",
          options: [
            "A) function myFunction();",
            "B) void myFunction();",
            "C) myFunction void();",
            "D) myFunction();",
          ],
          correctAnswer: "B) void myFunction();",
        },
        {
          id: 5,
          question: "What is the purpose of a function definition?",
          options: [
            "A) It specifies what the function does",
            "B) It declares the function's return type",
            "C) It assigns a name to the function",
            "D) It initializes the function",
          ],
          correctAnswer: "A) It specifies what the function does",
        },
        {
          id: 6,
          question: "How do you call a function in C?",
          options: [
            "A) myFunction;",
            "B) call myFunction();",
            "C) myFunction();",
            "D) run myFunction;",
          ],
          correctAnswer: "C) myFunction();",
        },
        {
          id: 7,
          question: "What is the syntax for defining a function that returns an integer in C?",
          options: [
            "A) int myFunction() {}",
            "B) myFunction() int {}",
            "C) void myFunction() {}",
            "D) myFunction() {}",
          ],
          correctAnswer: "A) int myFunction() {}",
        },
        {
          id: 8,
          question: "What type of value does a void function return?",
          options: [
            "A) Integer",
            "B) Character",
            "C) Float",
            "D) None",
          ],
          correctAnswer: "D) None",
        },
        {
          id: 9,
          question: "Which of the following is an example of a function call?",
          options: [
            "A) myFunction;",
            "B) call myFunction();",
            "C) myFunction();",
            "D) run myFunction;",
          ],
          correctAnswer: "C) myFunction();",
        },
        {
          id: 10,
          question: "What is the keyword used for including a user-defined function in a C program?",
          options: [
            "A) use",
            "B) include",
            "C) define",
            "D) function",
          ],
          correctAnswer: "B) include",
        },
        {
          id: 11,
          question: "In C, can a function be defined inside another function?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 12,
          question: "What is the return type of a function that doesn't return any value in C?",
          options: [
            "A) void",
            "B) int",
            "C) float",
            "D) char",
          ],
          correctAnswer: "A) void",
        },
        {
          id: 13,
          question: "What is the purpose of a function prototype in C?",
          options: [
            "A) It declares the function before its actual definition",
            "B) It defines the function before using it",
            "C) It specifies the return type of a function",
            "D) It initializes the function",
          ],
          correctAnswer: "A) It declares the function before its actual definition",
        },
        {
          id: 14,
          question: "Which of the following is not a valid function name in C?",
          options: [
            "A) my_function",
            "B) 123function",
            "C) function_123",
            "D) myFunction",
          ],
          correctAnswer: "B) 123function",
        },
        {
          id: 15,
          question: "What happens if you don't include a function prototype in your C program?",
          options: [
            "A) The compiler will generate an error",
            "B) The program will run without any issues",
            "C) The program will run, but the function will not work properly",
            "D) It is not allowed to exclude a function prototype",
          ],
          correctAnswer: "A) The compiler will generate an error",
        },
        {
          id: 16,
          question: "What is the purpose of using functions with parameters in C?",
          options: [
            "A) To pass data to the function",
            "B) To specify the return type of the function",
            "C) To declare the function before its actual definition",
            "D) To organize code and make it more readable",
          ],
          correctAnswer: "A) To pass data to the function",
        },
        {
          id: 17,
          question: "What is the correct syntax for declaring a function with two parameters in C?",
          options: [
            "A) void myFunction(int a, int b) {}",
            "B) void myFunction(int a; int b) {}",
            "C) void myFunction(int a int b) {}",
            "D) void myFunction(int a, b) {}",
          ],
          correctAnswer: "A) void myFunction(int a, int b) {}",
        },
        {
          id: 18,
          question: "Which keyword is used to indicate the end of a function in C?",
          options: [
            "A) end",
            "B) finish",
            "C) return",
            "D) exit",
          ],
          correctAnswer: "C) return",
        },
        {
          id: 19,
          question: "What is the purpose of the 'return' statement in a function?",
          options: [
            "A) To terminate the program",
            "B) To return a value from the function",
            "C) To declare the function before its actual definition",
            "D) To pass data to the function",
          ],
          correctAnswer: "B) To return a value from the function",
        },
        {
          id: 20,
          question: "Which of the following is true about recursive functions in C?",
          options: [
            "A) A recursive function calls itself",
            "B) Recursive functions are not supported in C",
            "C) Recursive functions cannot have parameters",
            "D) Recursive functions do not have a base case",
          ],
          correctAnswer: "A) A recursive function calls itself",
        },
        {
          id: 21,
          question: "What is the output of the following code#include <stdio.hint add(int a, int b)    return a + bint main()    int result = add(3, 4)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) Error",
          ],
          correctAnswer: "A) 7",
        },
        {
          id: 22,
          question: "What is the output of the following code#include <stdio.hvoid greet()    printf(\"Hello, World!\")int main()    greet()   return 0}",
          options: [
            "A) Hello, World!",
            "B) Error",
            "C) Nothing is printed",
            "D) 0",
          ],
          correctAnswer: "A) Hello, World!",
        },
        {
          id: 23,
          question: "What is the output of the following code#include <stdio.hvoid printNumbers()    for(int i = 1; i <= 5; i++)        printf(\"%d \", i)   int main()    printNumbers()   return 0}",
          options: [
            "A) 1 2 3 4 5",
            "B) 5 4 3 2 1",
            "C) 1 1 1 1 1",
            "D) 0",
          ],
          correctAnswer: "A) 1 2 3 4 5",
        },
        {
          id: 24,
          question: "What is the output of the following code#include <stdio.hvoid printMessage(char msg[])    printf(\"%s\", msg)int main()    char message[] = \"Welcome!\"   printMessage(message)   return 0}",
          options: [
            "A) Welcome!",
            "B) Error",
            "C) Nothing is printed",
            "D) 0",
          ],
          correctAnswer: "A) Welcome!",
        },
        {
          id: 25,
          question: "What is the output of the following code#include <stdio.hint square(int num)    return num * numint main()    int result = square(5)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 25",
            "B) 10",
            "C) 5",
            "D) Error",
          ],
          correctAnswer: "A) 25",
        },
        {
          id: 26,
          question: "What is the output of the following code#include <stdio.hint multiply(int a, int b)    return a * bint main()    int result = multiply(3, 4)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) 10",
          ],
          correctAnswer: "B) 12",
        },
        {
          id: 27,
          question: "What is the output of the following code#include <stdio.hint subtract(int a, int b)    return a - bint main()    int result = subtract(7, 4)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 3",
            "B) 11",
            "C) 4",
            "D) Error",
          ],
          correctAnswer: "A) 3",
        },
        {
          id: 28,
          question: "What is the output of the following code#include <stdio.hint factorial(int n)    if(n == 0 || n == 1       return 1   els       return n * factorial(n - 1)int main()    int result = factorial(5)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 5",
            "B) 15",
            "C) 120",
            "D) Error",
          ],
          correctAnswer: "C) 120",
        },
        {
          id: 29,
          question: "What is the output of the following code#include <stdio.hint power(int base, int exponent)    if(exponent == 0       return 1   els       return base * power(base, exponent - 1)int main()    int result = power(2, 3)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 6",
            "B) 8",
            "C) 12",
            "D) 16",
          ],
          correctAnswer: "B) 8",
        },
        {
          id: 30,
          question: "What is the output of the following code#include <stdio.hint findMax(int a, int b)    if(a > b       return a   els       return bint main()    int result = findMax(10, 7)   printf(\"%d\", result)   return 0}",
          options: [
            "A) 7",
            "B) 10",
            "C) 17",
            "D) 0",
          ],
          correctAnswer: "B) 10",
        },
      ],


      "6.2": [
        {
          id: 1,
          question: "What type of function has no argument and no return value?",
          options: [
            "A) Function with no argument and no return value",
            "B) Function with no argument and with return value",
            "C) Function with argument and with return value",
            "D) None of the above"
          ],
          correctAnswer: "A) Function with no argument and no return value"
        },
        {
          id: 2,
          question: "Which of the following is an example of a function with no argument and with return value in C?",
          options: [
            "A) void myFunction() { /* code */ }",
            "B) int calculate() { /* code */ return 0; }",
            "C) int findMax(int a, int b) { /* code */ }",
            "D) float computeAverage() { /* code */ return 0.0; }"
          ],
          correctAnswer: "B) int calculate() { /* code */ return 0; }"
        },
        {
          id: 3,
          question: "In a function with arguments and return value, how are the arguments passed to the function?",
          options: [
            "A) By reference",
            "B) By value",
            "C) By pointer",
            "D) By name"
          ],
          correctAnswer: "B) By value"
        },
        {
          id: 4,
          question: "What is the storage class of a local variable declared inside a function in C by default?",
          options: [
            "A) auto",
            "B) static",
            "C) extern",
            "D) register"
          ],
          correctAnswer: "A) auto"
        },
        {
          id: 5,
          question: "Which storage class in C retains the value of a variable between function calls?",
          options: [
            "A) auto",
            "B) static",
            "C) extern",
            "D) register"
          ],
          correctAnswer: "B) static"
        },
        {
          id: 6,
          question: "What is the scope of a local variable in C?",
          options: [
            "A) It is visible only within the function where it is declared",
            "B) It is visible throughout the entire program",
            "C) It is visible in other functions as well",
            "D) It is visible only in the main() function"
          ],
          correctAnswer: "A) It is visible only within the function where it is declared"
        },
        {
          id: 7,
          question: "What is the scope of a global variable in C?",
          options: [
            "A) It is visible only within the function where it is declared",
            "B) It is visible throughout the entire program",
            "C) It is visible in other functions as well",
            "D) It is visible only in the main() function"
          ],
          correctAnswer: "B) It is visible throughout the entire program"
        },
        {
          id: 8,
          question: "Which keyword is used to declare a variable with global scope in C?",
          options: [
            "A) global",
            "B) extern",
            "C) globalvar",
            "D) public"
          ],
          correctAnswer: "B) extern"
        },
        {
          id: 9,
          question: "What happens if a variable with the 'register' storage class is declared inside a function in C?",
          options: [
            "A) The variable is stored in a CPU register for faster access",
            "B) The variable cannot be used in the function",
            "C) The variable retains its value between function calls",
            "D) The variable is stored in the heap memory"
          ],
          correctAnswer: "A) The variable is stored in a CPU register for faster access"
        },
        {
          id: 10,
          question: "What is recursion in programming?",
          options: [
            "A) A programming error",
            "B) A loop construct",
            "C) A function that calls itself",
            "D) A conditional statement"
          ],
          correctAnswer: "C) A function that calls itself"
        },
        {
          id: 11,
          question: "Which of the following is an example of a recursive function in C?",
          options: [
            "A) void calculate() { /* code */ }",
            "B) int findMax(int a, int b) { /* code */ }",
            "C) int factorial(int n) { /* code */ }",
            "D) float computeAverage() { /* code */ }"
          ],
          correctAnswer: "C) int factorial(int n) { /* code */ }"
        },
        {
          id: 12,
          question: "What is the base case in a recursive function?",
          options: [
            "A) The initial case that allows the function to stop calling itself",
            "B) The final case where the function returns a value",
            "C) The case where the function calls itself",
            "D) The case where the function has multiple return statements"
          ],
          correctAnswer: "A) The initial case that allows the function to stop calling itself"
        },
        {
          id: 13,
          question: "In a recursive function, what can happen if there is no base case?",
          options: [
            "A) The program will run infinitely and may crash",
            "B) The function will return a random value",
            "C) The function will throw an error",
            "D) The program will terminate abruptly"
          ],
          correctAnswer: "A) The program will run infinitely and may crash"
        },
        {
          id: 14,
          question: "What is the output of the following recursive functionCopy cod#include <stdio.hint factorial(int n)    if(n == 0 || n == 1       return 1   els       return n * factorial(n - 1)int main()    int result = factorial(5)   printf(\"%d\", result)   return 0A) B) 1C) 12D) 25",
          options: [
            "A) 5",
            "B) 15",
            "C) 120",
            "D) 25"
          ],
          correctAnswer: "C) 120"
        },
        {
          id: 15,
          question: "What is the output of the following recursive functionCopy cod#include <stdio.hint power(int base, int exponent)    if(exponent == 0       return 1   els       return base * power(base, exponent - 1)int main()    int result = power(2, 3)   printf(\"%d\", result)   return 0A) B) C) 1D) 16",
          options: [
            "A) 6",
            "B) 8",
            "C) 12",
            "D) 16"
          ],
          correctAnswer: "B) 8"
        },
        {
          id: 16,
          question: "What is the output of the following recursive functionCopy cod#include <stdio.hint fibonacci(int n)    if(n <= 1       return n   els       return fibonacci(n-1) + fibonacci(n-2)int main()    int result = fibonacci(6)   printf(\"%d\", result)   return 0A) B) 1C) 2D) 34",
          options: [
            "A) 8",
            "B) 13",
            "C) 21",
            "D) 34"
          ],
          correctAnswer: "B) 13"
        },
        {
          id: 17,
          question: "What is the output of the following codeCopy cod#include <stdio.hint x = 10void changeX()    x = 20int main()    changeX()   printf(\"%d\", x)   return 0A) 1B) 2C) ErroD) 0",
          options: [
            "A) 10",
            "B) 20",
            "C) Error",
            "D) 0"
          ],
          correctAnswer: "B) 20"
        },
        {
          id: 18,
          question: "What is the output of the following codeCopy cod#include <stdio.hvoid increment()    static int count = 0   count++   printf(\"%d \", count)int main()    increment()   increment()   increment()   return 0A) 1 2 B) 3 2 C) 1 1 D) 0",
          options: [
            "A) 1 2 3",
            "B) 3 2 1",
            "C) 1 1 1",
            "D) 0"
          ],
          correctAnswer: "A) 1 2 3"
        },
        {
          id: 19,
          question: "What is the output of the following codeCopy cod#include <stdio.hvoid printMessage(char msg[])    printf(\"%s\", msg)int main()    char message[] = \"Welcome!\"   printMessage(message)   return 0A) WelcomeB) ErroC) Nothing is printeD) 0",
          options: [
            "A) Welcome!",
            "B) Error",
            "C) Nothing is printed",
            "D) 0"
          ],
          correctAnswer: "A) Welcome!"
        },
        {
          id: 20,
          question: "What is the output of the following codeCopy cod#include <stdio.hvoid greet()    printf(\"Hello, World!\")int main()    greet()   return 0A) Hello, WorldB) ErroC) Nothing is printeD) 0",
          options: [
            "A) Hello, World!",
            "B) Error",
            "C) Nothing is printed",
            "D) 0"
          ],
          correctAnswer: "A) Hello, World!"
        },
        {
          id: 21,
          question: "What is the output of the following codeCopy cod#include <stdio.hvoid printNumbers()    for(int i = 1; i <= 5; i++)        printf(\"%d \", i)   int main()    printNumbers()   return 0A) 1 2 3 4 B) 5 4 3 2 C) 1 1 1 1 D) 0",
          options: [
            "A) 1 2 3 4 5",
            "B) 5 4 3 2 1",
            "C) 1 1 1 1 1",
            "D) 0"
          ],
          correctAnswer: "A) 1 2 3 4 5"
        },
        {
          id: 22,
          question: "What is the output of the following codeCopy cod#include <stdio.hint add(int a, int b)    return a + bint main()    int result = add(3, 4)   printf(\"%d\", result)   return 0A) B) 1C) 3D) Error",
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) Error"
          ],
          correctAnswer: "A) 7"
        },
        {
          id: 23,
          question: "What is the output of the following codeCopy cod#include <stdio.hint multiply(int a, int b)    return a * bint main()    int result = multiply(3, 4)   printf(\"%d\", result)   return 0A) B) 1C) 3D) 10",
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) 10"
          ],
          correctAnswer: "B) 12"
        },
        {
          id: 24,
          question: "What is the output of the following codeCopy cod#include <stdio.hint subtract(int a, int b)    return a - bint main()    int result = subtract(7, 4)   printf(\"%d\", result)   return 0A) B) 1C) D) Error",
          options: [
            "A) 3",
            "B) 11",
            "C) 4",
            "D) Error"
          ],
          correctAnswer: "A) 3"
        },
        {
          id: 25,
          question: "What is the output of the following codeCopy cod#include <stdio.hint findMax(int a, int b)    if(a > b       return a   els       return bint main()    int result = findMax(10, 7)   printf(\"%d\", result)   return 0A) B) 1C) 1D) 0",
          options: [
            "A) 7",
            "B) 10",
            "C) 17",
            "D) 0"
          ],
          correctAnswer: "B) 10"
        },
        {
          id: 26,
          question: "What is the output of the following codeCopy cod#include <stdio.hint x = 5void changeX()    int x = 10   printf(\"%d \", x)int main()    changeX()   printf(\"%d\", x)   return 0A) 5 1B) 10 C) 5 D) 10 10",
          options: [
            "A) 5 10",
            "B) 10 5",
            "C) 5 5",
            "D) 10 10"
          ],
          correctAnswer: "A) 5 10"
        },
        {
          id: 27,
          question: "What is the output of the following codeCopy cod#include <stdio.hint x = 5void changeX()    x = 10   printf(\"%d \", x)int main()    changeX()   printf(\"%d\", x)   return 0A) 10 1B) 5 C) 10 D) 5 10",
          options: [
            "A) 10 10",
            "B) 5 5",
            "C) 10 5",
            "D) 5 10"
          ],
          correctAnswer: "C) 10 5"
        },
        {
          id: 28,
          question: "What is the output of the following codeCopy cod#include <stdio.hint main()    int i = 5          int i = 10       printf(\"%d \", i)      printf(\"%d\", i)   return 0A) 5 1B) 10 C) 10 1D) 5 5",
          options: [
            "A) 5 10",
            "B) 10 5",
            "C) 10 10",
            "D) 5 5"
          ],
          correctAnswer: "B) 10 5"
        },
        {
          id: 29,
          question: "What is the output of the following codeCopy cod#include <stdio.hint main()    int x = 5   printf(\"%d \", x)          int x = 10       printf(\"%d \", x)      printf(\"%d\", x)   return 0A) 5 10 B) 5 5 C) 5 10 1D) 10 5 10",
          options: [
            "A) 5 10 5",
            "B) 5 5 5",
            "C) 5 10 10",
            "D) 10 5 10"
          ],
          correctAnswer: "A) 5 10 5"
        },
        {
          id: 30,
          question: "What is the output of the following codeCopy cod#include <stdio.hint main()    int i = 5          int i = 10       printf(\"%d \", i)      printf(\"%d\", i)   return 0A) 10 B) 5 C) 10 1D) 5 10",
          options: [
            "A) 10 5",
            "B) 5 5",
            "C) 10 10",
            "D) 5 10"
          ],
          correctAnswer: "A) 10 5"
        }
      ],

      // Add more subchapters for Chapter 1 as needed
    },


    //chapter 6 ended






    7: {
      // Chapter 1
      "7.1": [
        {
          id: 1,
          question: "What is a structure in C language?",
          options: [
            "A) A data type that can hold multiple variables of the same type",
            "B) A way to define functions in C",
            "C) A loop construct in C",
            "D) A special character in C",
          ],
          correctAnswer: "A) A data type that can hold multiple variables of the same type",
        },
        {
          id: 2,
          question: "How do you declare a structure named 'Person' in C?",
          options: [
            "A) struct : Person {}",
            "B) struct Person {}",
            "C) Person : struct {}",
            "D) Person struct {}",
          ],
          correctAnswer: "B) struct Person {}",
        },
        {
          id: 3,
          question: "How do you initialize a structure in C?",
          options: [
            "A) Person p();",
            "B) struct Person p = {};",
            "C) Person p = {};",
            "D) struct p = Person();",
          ],
          correctAnswer: "C) Person p = {};",
        },
        {
          id: 4,
          question: "What is the correct way to access the 'age' member of a structure 'Person'?",
          options: [
            "A) p->age",
            "B) p.age",
            "C) p::age",
            "D) p[age]",
          ],
          correctAnswer: "B) p.age",
        },
        {
          id: 5,
          question: "Which of the following statements is true about nested structures in C?",
          options: [
            "A) They cannot be defined inside another structure",
            "B) They can only have one level of nesting",
            "C) They allow one structure to be a member of another structure",
            "D) They can only contain integer members",
          ],
          correctAnswer: "C) They allow one structure to be a member of another structure",
        },
        {
          id: 6,
          question: "Given the following structure definition, what will be the size of the structurestruct Employee    int empID   char name[20]};",
          options: [
            "A) 24 bytes",
            "B) 28 bytes",
            "C) 32 bytes",
            "D) 36 bytes",
          ],
          correctAnswer: "B) 28 bytes",
        },
        {
          id: 7,
          question: "Which keyword is used to declare a pointer to a structure in C?",
          options: [
            "A) ptr",
            "B) point",
            "C) struct_ptr",
            "D) struct",
          ],
          correctAnswer: "D) struct",
        },
        {
          id: 8,
          question: "What is the correct way to dynamically allocate memory for a structure in C?",
          options: [
            "A) struct_ptr = new struct Type;",
            "B) struct_ptr = (struct Type *)malloc(sizeof(struct Type));",
            "C) struct_ptr = alloc(struct Type);",
            "D) struct_ptr = allocate(struct Type);",
          ],
          correctAnswer: "B) struct_ptr = (struct Type *)malloc(sizeof(struct Type));",
        },
        {
          id: 9,
          question: "Which of the following is a correct way to pass a structure to a function in C?",
          options: [
            "A) void func(struct Type s)",
            "B) void func(struct Type &s)",
            "C) void func(struct Type *s)",
            "D) void func(Type s)",
          ],
          correctAnswer: "C) void func(struct Type *s)",
        },
        {
          id: 10,
          question: "What is the correct syntax to access the member 'salary' of a structure 'Employee' inside a nested structure 'Company'A) c.e.salarB) c->e.salarC) c.e->salarD) c->e->salary",
          options: [
            "A) c.e.salary",
            "B) c->e.salary",
            "C) c.e->salary",
            "D) c->e->salary",
          ],
          correctAnswer: "A) c.e.salary",
        },
        {
          id: 11,
          question: "Which of the following statements is true about structure padding in C?",
          options: [
            "A) It is used to reduce the size of the structure",
            "B) It is used to align the members of a structure in memory",
            "C) It is not supported in C language",
            "D) It is used to rearrange the members of a structure",
          ],
          correctAnswer: "B) It is used to align the members of a structure in memory",
        },
        {
          id: 12,
          question: "What is the output of the following codestruct Point    int x   int y}struct Point p = {5, 10}printf(\"%d\", p.x);",
          options: [
            "A) 5",
            "B) 10",
            "C) 15",
            "D) Error",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 13,
          question: "How do you compare two structures for equality in C?",
          options: [
            "A) if (struct1 == struct2)",
            "B) if (struct1 is struct2)",
            "C) if (compare(struct1, struct2))",
            "D) You cannot compare structures directly",
          ],
          correctAnswer: "D) You cannot compare structures directly",
        },
        {
          id: 14,
          question: "What is the correct way to initialize a nested structure in C?",
          options: [
            "A) struct Inner i = {1, 2}; struct Outer o = {i, 3};",
            "B) struct Outer o = {1, 2, 3};",
            "C) struct Outer o = {{1, 2}, 3};",
            "D) struct Inner i = {1, 2}; struct Outer o = i, 3;",
          ],
          correctAnswer: "A) struct Inner i = {1, 2}; struct Outer o = {i, 3};",
        },
        {
          id: 15,
          question: "Which of the following is a correct way to declare an array of structures in C?",
          options: [
            "A) struct Type arr[10];",
            "B) struct arr[Type]",
            "C) Type arr[struct];",
            "D) Type[10] arr;",
          ],
          correctAnswer: "A) struct Type arr[10];",
        },
        {
          id: 16,
          question: "What is the correct syntax to access the member 'address' of a structure 'Person' inside an array of structures 'employees' at index 2?",
          options: [
            "A) employees[2].address",
            "B) employees[2]->address",
            "C) employees[2]::address",
            "D) employees[2][address]",
          ],
          correctAnswer: "A) employees[2].address",
        },
        {
          id: 17,
          question: "What is the output of the following codestruct Date    int day   int month   int year}struct Date d = {10, 9, 2023}printf(\"%d/%d/%d\", d.day, d.month, d.year);",
          options: [
            "A) 10/9/2023",
            "B) 9/10/2023",
            "C) 2023/9/10",
            "D) Error",
          ],
          correctAnswer: "A) 10/9/2023",
        },
        {
          id: 18,
          question: "Which of the following is true about the scope of a structure in C?",
          options: [
            "A) A structure's scope is limited to the block in which it is defined",
            "B) A structure's scope is global to the entire program",
            "C) A structure's scope is limited to the file in which it is defined",
            "D) A structure's scope is determined by its members",
          ],
          correctAnswer: "A) A structure's scope is limited to the block in which it is defined",
        },
        {
          id: 19,
          question: "What is the correct way to pass a structure to a function by reference in C?",
          options: [
            "A) void func(struct Type s)",
            "B) void func(struct Type &s)",
            "C) void func(struct Type *s)",
            "D) void func(Type &s)",
          ],
          correctAnswer: "C) void func(struct Type *s)",
        },
        {
          id: 20,
          question: "Given a structure 'Rectangle' with members 'length' and 'width', how would you calculate the area of a rectangle using a function named 'calculateArea'?",
          options: [
            "A) int calculateArea(struct Rectangle r) { return r.length * r.width; }",
            "B) int calculateArea(struct Rectangle *r) { return (*r).length * (*r).width; }",
            "C) int calculateArea(Rectangle r) { return r->length * r->width; }",
            "D) int calculateArea(Rectangle *r) { return r.length * r.width; }",
          ],
          correctAnswer: "B) int calculateArea(struct Rectangle *r) { return (*r).length * (*r).width; }",
        },
        {
          id: 21,
          question: "What is the output of the following codestruct Student    char name[20]   int age}struct Student s = {'John', 21}printf('%s is %d years old.', s.name, s.age);",
          options: [
            "A) John is 21 years old.",
            "B) s is 21 years old.",
            "C) John is 42 years old.",
            "D) Error",
          ],
          correctAnswer: "A) John is 21 years old.",
        },
        {
          id: 22,
          question: "What is the correct way to declare a pointer to a structure named 'Book' in C?",
          options: [
            "A) struct Book *b;",
            "B) Book *b;",
            "C) ptr Book b;",
            "D) ptr *b;",
          ],
          correctAnswer: "B) Book *b;",
        },
        {
          id: 23,
          question: "How do you access the member 'author' of a structure 'Book' inside a pointer to that structure?",
          options: [
            "A) b->author",
            "B) b.author",
            "C) b[author]",
            "D) b::author",
          ],
          correctAnswer: "A) b->author",
        },
        {
          id: 24,
          question: "Which of the following is a valid way to initialize a structure with default values?",
          options: [
            "A) struct Type t = {0};",
            "B) struct Type t = {NULL};",
            "C) struct Type t = {''};",
            "D) struct Type t = {};",
          ],
          correctAnswer: "D) struct Type t = {};",
        },
        {
          id: 25,
          question: "What is the output of the following codestruct Car    char model[20]   int year}struct Car c1 = {'Toyota', 2020}struct Car c2 = c1printf('%s %d', c2.model, c2.year);",
          options: [
            "A) Toyota 2020",
            "B) Toyota 0",
            "C) Error",
            "D) 2020 Toyota",
          ],
          correctAnswer: "A) Toyota 2020",
        },
        {
          id: 26,
          question: "What is the correct way to access the member 'address' of a structure 'Person' inside a pointer to an array of structures 'people' at index 3?",
          options: [
            "A) people[3]->address",
            "B) people[3].address",
            "C) people[3][address]",
            "D) people[3].->address",
          ],
          correctAnswer: "A) people[3]->address",
        },
        {
          id: 27,
          question: "Which of the following is true about structure assignment in C?",
          options: [
            "A) It is not possible to assign one structure to another",
            "B) It is done by copying the values of each member from one structure to another",
            "C) It can only be done using pointers",
            "D) It requires explicit casting",
          ],
          correctAnswer: "B) It is done by copying the values of each member from one structure to another",
        },
        {
          id: 28,
          question: "What is the correct way to access the member 'score' of a structure 'Player' inside a pointer to a structure 'Team' named 't'?",
          options: [
            "A) t->score",
            "B) t.score",
            "C) t[Player]->score",
            "D) t[Player].score",
          ],
          correctAnswer: "A) t->score",
        },
        {
          id: 29,
          question: "How do you define a nested structure named 'Address' inside a structure named 'Employee'?",
          options: [
            "Astruct Employee    struct Address        char street[20]       char city[20]   } addr   char name[20]};",
            "Bstruct Employee    struct Address        char street[20]       char city[20]   }   char name[20]};",
            "Cstruct Employee    Address        char street[20]       char city[20]   }   char name[20]};",
            "Dstruct Employee    Address        char street[20]       char city[20]   } addr   char name[20]};",
          ],
          correctAnswer: "Astruct Employee    struct Address        char street[20]       char city[20]   } addr   char name[20]};",
        },
        {
          id: 30,
          question: "What is the output of the following codestruct Time    int hours   int minutes}struct Time t1 = {4, 30}struct Time t2 = {2, 45}struct Time t3 = {0}t3 = t1t1 = t2t2 = t3printf('%d:%d %d:%d %d:%d', t1.hours, t1.minutes, t2.hours, t2.minutes, t3.hours, t3.minutes);",
          options: [
            "A) 2:45 0:0 4:30",
            "B) 0:0 4:30 2:45",
            "C) 4:30 2:45 0:0",
            "D) 2:45 4:30 0:0",
          ],
          correctAnswer: "C) 4:30 2:45 0:0",
        },
      ],


      "7.2": [
        {
          id: 1,
          question: "What is a union in C language?",
          options: [
            "A) A data type that can hold multiple variables of different types",
            "B) A way to define functions in C",
            "C) A loop construct in C",
            "D) A special character in C",
          ],
          correctAnswer: "A) A data type that can hold multiple variables of different types",
        },
        {
          id: 2,
          question: "How do you declare a union named 'Data' in C?",
          options: [
            "A) union : Data {}",
            "B) union Data {}",
            "C) Data : union {}",
            "D) Data union {}",
          ],
          correctAnswer: "B) union Data {}",
        },
        {
          id: 3,
          question: "How do you access the members of a union in C?",
          options: [
            "A) By using the '.' operator",
            "B) By using the '->' operator",
            "C) By using the '::' operator",
            "D) By using the '[]' operator",
          ],
          correctAnswer: "A) By using the '.' operator",
        },
        {
          id: 4,
          question: "What is the main difference between a structure and a union in C?",
          options: [
            "A) A structure can hold multiple variables of different types, while a union can hold only one at a time",
            "B) A structure can hold only one variable at a time, while a union can hold multiple variables of different types",
            "C) There is no difference between a structure and a union",
            "D) A structure is used for loops, while a union is used for conditional statements",
          ],
          correctAnswer: "A) A structure can hold multiple variables of different types, while a union can hold only one at a time",
        },
        {
          id: 5,
          question: "Which statement is true about the memory allocation for a union in C?",
          options: [
            "A) It allocates memory for the largest member of the union",
            "B) It allocates memory for the smallest member of the union",
            "C) It allocates memory for all members of the union",
            "D) It does not allocate any memory for the union",
          ],
          correctAnswer: "A) It allocates memory for the largest member of the union",
        },
        {
          id: 6,
          question: "Given the following union definition, what will be the size of the unionunion Status   int errorCode  char errorMsg[20]};",
          options: [
            "A) 4 bytes",
            "B) 20 bytes",
            "C) 24 bytes",
            "D) 28 bytes",
          ],
          correctAnswer: "B) 20 bytes",
        },
        {
          id: 7,
          question: "How do you initialize a union in C?",
          options: [
            "A) Data d = {10};",
            "B) Data d();",
            "C) Data d = {.errorCode = 10};",
            "D) Data d = 10;",
          ],
          correctAnswer: "C) Data d = {.errorCode = 10};",
        },
        {
          id: 8,
          question: "What will be the value of d.errorCode after the following codeunion Data   int errorCode  char errorMsg[20]} d = {.errorCode = 5};",
          options: [
            "A) 5",
            "B) Undefined",
            "C) 0",
            "D) Compiler error",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 9,
          question: "What is the output of the following codeunion Details   int id  float salary}union Details d = {.id = 1001}printf(\"%f\", d.salary);",
          options: [
            "A) 1001.000000",
            "B) 0.000000",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 0.000000",
        },
        {
          id: 10,
          question: "Which of the following statements is true about nested unions in C?",
          options: [
            "A) They are not allowed in C",
            "B) They allow one union to be a member of another union",
            "C) They allow one structure to be a member of another union",
            "D) They can only contain integer members",
          ],
          correctAnswer: "A) They are not allowed in C",
        },
        {
          id: 11,
          question: "How do you access the member 'message' of a union 'Error' inside a structure 'Response'?",
          options: [
            "A) r.e.message",
            "B) r->e.message",
            "C) r::e.message",
            "D) r.e->message",
          ],
          correctAnswer: "A) r.e.message",
        },
        {
          id: 12,
          question: "What is the output of the following codeunion Value   int count  double amount}union Value v = {.count = 10}printf(\"%lf\", v.amount);",
          options: [
            "A) 10.000000",
            "B) 0.000000",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 0.000000",
        },
        {
          id: 13,
          question: "How do you define a pointer to a union in C?",
          options: [
            "A) Data *d;",
            "B) Data d*;",
            "C) union Data *d;",
            "D) union *Data d;",
          ],
          correctAnswer: "A) Data *d;",
        },
        {
          id: 14,
          question: "What is the output of the following codeunion Number   int x  float y}union Number n = {.x = 5}printf(\"%f\", n.y);",
          options: [
            "A) 0.000000",
            "B) 5.000000",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 5.000000",
        },
        {
          id: 15,
          question: "What will be the value of n.y after the following codeunion Number   int x  float y} n = {.y = 2.5};",
          options: [
            "A) 2.500000",
            "B) Undefined",
            "C) 0.000000",
            "D) Compiler error",
          ],
          correctAnswer: "A) 2.500000",
        },
        {
          id: 16,
          question: "Which of the following is true about the scope of a union in C?",
          options: [
            "A) A union's scope is limited to the block in which it is defined",
            "B) A union's scope is global to the entire program",
            "C) A union's scope is limited to the file in which it is defined",
            "D) A union's scope is determined by its members",
          ],
          correctAnswer: "A) A union's scope is limited to the block in which it is defined",
        },
        {
          id: 17,
          question: "What is the correct way to pass a union to a function in C?",
          options: [
            "A) void func(union Data d)",
            "B) void func(union Data *d)",
            "C) void func(union d)",
            "D) void func(Data d)",
          ],
          correctAnswer: "B) void func(union Data *d)",
        },
        {
          id: 18,
          question: "What is the output of the following codeunion Point   int x  int y}union Point p = {5}printf(\"%d\", p.x);",
          options: [
            "A) 5",
            "B) 0",
            "C) Error",
            "D) Undefined behavior",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 19,
          question: "How do you access the member 'latitude' of a union 'Coordinates' inside a pointer to that union?",
          options: [
            "A) c->latitude",
            "B) c.latitude",
            "C) c[latitude]",
            "D) c::latitude",
          ],
          correctAnswer: "A) c->latitude",
        },
        {
          id: 20,
          question: "What is the correct way to initialize a nested union in C?",
          options: [
            "A) union Inner i = {5}; union Outer o = {i};",
            "B) union Outer o = {5};",
            "C) union Outer o = {{5}};",
            "D) union Inner i = {5}; union Outer o = i;",
          ],
          correctAnswer: "A) union Inner i = {5}; union Outer o = {i};",
        },
        {
          id: 21,
          question: "What is the output of the following codeunion Result   int status  char message[20]}union Result r = {.status = 200}printf(\"%s\", r.message);",
          options: [
            "A) 200",
            "B) Error",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) Error",
        },
        {
          id: 22,
          question: "How do you compare two unions for equality in C?",
          options: [
            "A) if (union1 == union2)",
            "B) if (union1 is union2)",
            "C) if (compare(union1, union2))",
            "D) You cannot compare unions directly",
          ],
          correctAnswer: "D) You cannot compare unions directly",
        },
        {
          id: 23,
          question: "What is the output of the following codeunion Choice   int option  char selection}union Choice c = {.option = 3}printf(\"%c\", c.selection);",
          options: [
            "A) 3",
            "B) Error",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "D) Undefined behavior",
        },
        {
          id: 24,
          question: "What is the correct way to define a union 'BookInfo' with members 'title', 'author', and 'pages'```union BookInfo   char title[50]  char author[50]  int pages};```",
          options: [
            "A) Correct",
            "B) Incorrect",
            "C) Incorrect",
            "D) Incorrect",
          ],
          correctAnswer: "A) Correct",
        },
        {
          id: 25,
          question: "How do you access the member 'code' of a union 'Product' inside an array of unions 'inventory' at index 2?",
          options: [
            "A) inventory[2].code",
            "B) inventory[2]->code",
            "C) inventory[2][code]",
            "D) inventory[2].->code",
          ],
          correctAnswer: "A) inventory[2].code",
        },
        {
          id: 26,
          question: "What is the output of the following codeunion Shape   int sides  float radius}union Shape s = {.sides = 4}printf(\"%f\", s.radius);",
          options: [
            "A) 4.000000",
            "B) 0.000000",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 0.000000",
        },
        {
          id: 27,
          question: "Which of the following is a valid way to initialize a union with default values?",
          options: [
            "A) union Type t = {0};",
            "B) union Type t = {NULL};",
            "C) union Type t = {\"\"};",
            "D) union Type t = {};",
          ],
          correctAnswer: "A) union Type t = {0};",
        },
        {
          id: 28,
          question: "What is the output of the following codeunion Letter   char upper  char lower}union Letter l = {.lower = 'a'}printf(\"%c\", l.upper);",
          options: [
            "A) a",
            "B) A",
            "C) Error",
            "D) Compiler error",
          ],
          correctAnswer: "B) A",
        },
        {
          id: 29,
          question: "How do you access the member 'weight' of a union 'Product' inside a pointer to a union 'p'?",
          options: [
            "A) p->weight",
            "B) p.weight",
            "C) p[Product]->weight",
            "D) p[Product].weight",
          ],
          correctAnswer: "A) p->weight",
        },
        {
          id: 30,
          question: "What is the output of the following codeunion Number   int x  float y}union Number n = {.y = 3.14}printf(\"%d\", n.x);",
          options: [
            "A) 0",
            "B) 3",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "A) 0",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 7 ended








    8: {
      // Chapter 1
      "8.1": [
        {
          id: 1,
          question: "What is the primary purpose of using pointers in programming?",
          options: [
            "A) To store large amounts of data",
            "B) To dynamically allocate memory",
            "C) To enable direct access to memory locations",
            "D) To perform arithmetic operations"
          ],
          correctAnswer: "C) To enable direct access to memory locations"
        },
        {
          id: 2,
          question: "Which of the following best describes a pointer?",
          options: [
            "A) A variable that stores the address of another variable",
            "B) A variable that stores the value of another variable",
            "C) A variable that stores the result of a mathematical operation",
            "D) A variable that stores a string of characters"
          ],
          correctAnswer: "A) A variable that stores the address of another variable"
        },
        {
          id: 3,
          question: "What is the syntax for declaring a pointer in C/C++?",
          options: [
            "A) int *ptr;",
            "B) int ptr;",
            "C) ptr int;",
            "D) *int ptr;"
          ],
          correctAnswer: "A) int *ptr;"
        },
        {
          id: 4,
          question: "Which of the following correctly initializes a pointer named ptr to point to the variable num?",
          options: [
            "A) int *ptr = num;",
            "B) int *ptr; ptr = &num;",
            "C) int *ptr = &num;",
            "D) int ptr = &num;"
          ],
          correctAnswer: "C) int *ptr = &num;"
        },
        {
          id: 5,
          question: "What does the & operator do when used with a variable in C/C++?",
          options: [
            "A) Returns the value of the variable",
            "B) Returns the address of the variable",
            "C) Performs bitwise AND operation",
            "D) Concatenates strings"
          ],
          correctAnswer: "B) Returns the address of the variable"
        },
        {
          id: 6,
          question: "Given the following code```int num = 10int *ptr = &num*ptr = 20``After execution, what will be the value of num?",
          options: [
            "A) 10",
            "B) 20",
            "C) Compiler Error",
            "D) Undefined"
          ],
          correctAnswer: "B) 20"
        },
        {
          id: 7,
          question: "What is the output of the following code```int num = 5int *ptr = &numprintf(\"%d\", *ptr)```",
          options: [
            "A) 5",
            "B) Compiler Error",
            "C) 0",
            "D) Garbage Value"
          ],
          correctAnswer: "A) 5"
        },
        {
          id: 8,
          question: "Which operator is used to access the value pointed to by a pointer?",
          options: [
            "A) .",
            "B) ->",
            "C) *",
            "D) &"
          ],
          correctAnswer: "C) *"
        },
        {
          id: 9,
          question: "What happens if you try to dereference a null pointer?",
          options: [
            "A) The program crashes",
            "B) Compiler Error",
            "C) Undefined Behavior",
            "D) Nothing, it's allowed"
          ],
          correctAnswer: "A) The program crashes"
        },
        {
          id: 10,
          question: "Consider the following code snippet```int arr[5] = {1, 2, 3, 4, 5}int *ptr = arr + 2printf(\"%d\", *ptr)``What will be the output?",
          options: [
            "A) 2",
            "B) 3",
            "C) 4",
            "D) Compiler Error"
          ],
          correctAnswer: "C) 4"
        },
        {
          id: 11,
          question: "Which of the following is an advantage of using pointers?",
          options: [
            "A) Improved code readability",
            "B) Efficient memory usage",
            "C) Faster program execution",
            "D) Easier debugging"
          ],
          correctAnswer: "B) Efficient memory usage"
        },
        {
          id: 12,
          question: "In what scenario would pointers be particularly useful?",
          options: [
            "A) When working with simple calculations",
            "B) When dealing with complex data structures",
            "C) When performing string operations",
            "D) When printing output to the console"
          ],
          correctAnswer: "B) When dealing with complex data structures"
        },
        {
          id: 13,
          question: "What is a potential downside or risk of using pointers?",
          options: [
            "A) They can lead to memory leaks",
            "B) They can improve code performance",
            "C) They can make code easier to debug",
            "D) They can only work with primitive data types"
          ],
          correctAnswer: "A) They can lead to memory leaks"
        },
        {
          id: 14,
          question: "Which of the following statements is true regarding pointers?",
          options: [
            "A) Pointers cannot be reassigned once initialized",
            "B) Pointers can only be used with arrays",
            "C) Pointers can be used to create dynamic data structures",
            "D) Pointers are only used in low-level programming languages"
          ],
          correctAnswer: "C) Pointers can be used to create dynamic data structures"
        },
        {
          id: 15,
          question: "What is one real-world scenario where pointers are commonly used?",
          options: [
            "A) Managing a contact list in a phone",
            "B) Sorting elements in an array",
            "C) Displaying graphics on a screen",
            "D) Sending emails"
          ],
          correctAnswer: "A) Managing a contact list in a phone"
        },
        {
          id: 16,
          question: "What is the data type of a pointer that points to an integer variable?",
          options: [
            "A) int",
            "B) float",
            "C) char",
            "D) Depends on the system"
          ],
          correctAnswer: "A) int"
        },
        {
          id: 17,
          question: "Which of the following is a valid pointer declaration in C++?",
          options: [
            "A) int *ptr;",
            "B) int ptr;",
            "C) ptr int;",
            "D) *int ptr;"
          ],
          correctAnswer: "A) int *ptr;"
        },
        {
          id: 18,
          question: "What is the significance of the NULL pointer?",
          options: [
            "A) It points to a location with the value 0",
            "B) It points to an undefined memory location",
            "C) It is equivalent to a pointer with garbage value",
            "D) It is used to store large data sets"
          ],
          correctAnswer: "A) It points to a location with the value 0"
        },
        {
          id: 19,
          question: "Consider the code```int x = 10int *p = &xprintf(\"%p\", p)``What will be the output?",
          options: [
            "A) Address of x",
            "B) Value of x",
            "C) Garbage value",
            "D) Compiler Error"
          ],
          correctAnswer: "A) Address of x"
        },
        {
          id: 20,
          question: "In C++, how do you declare a pointer to a class object?",
          options: [
            "A) MyClass ptr;",
            "B) ptr MyClass;",
            "C) MyClass *ptr;",
            "D) *MyClass ptr;"
          ],
          correctAnswer: "C) MyClass *ptr;"
        },
        {
          id: 21,
          question: "What is the output of the following code```int arr[3] = {1, 2, 3}int *ptr = arrprintf(\"%d\", *(ptr + 1))```",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) Compiler Error"
          ],
          correctAnswer: "B) 2"
        },
        {
          id: 22,
          question: "In C, what is the effect of incrementing a pointer by 1?",
          options: [
            "A) It moves the pointer to the next memory location of the same type",
            "B) It increments the value stored at the memory location",
            "C) It multiplies the value at the memory location by 2",
            "D) It has no effect"
          ],
          correctAnswer: "A) It moves the pointer to the next memory location of the same type"
        },
        {
          id: 23,
          question: "Consider the code```int x = 5int *p = &x*p = 7printf(\"%d\", x)``What will be the output?",
          options: [
            "A) 5",
            "B) 7",
            "C) Compiler Error",
            "D) Undefined Behavior"
          ],
          correctAnswer: "B) 7"
        },
        {
          id: 24,
          question: "What is the result of the expression sizeof(int*) on a 64-bit system?",
          options: [
            "A) 4",
            "B) 8",
            "C) 16",
            "D) Depends on the compiler"
          ],
          correctAnswer: "B) 8"
        },
        {
          id: 25,
          question: "What is the purpose of using the const keyword when declaring a pointer?",
          options: [
            "A) It prevents the pointer from being dereferenced",
            "B) It makes the pointer point to a constant variable",
            "C) It indicates that the pointer itself is a constant",
            "D) It has no effect on pointers"
          ],
          correctAnswer: "B) It makes the pointer point to a constant variable"
        },
        {
          id: 26,
          question: "In what scenario would you use pointers to functions?",
          options: [
            "A) When the function is short and simple",
            "B) When you want to pass a function as an argument",
            "C) When the function has no parameters",
            "D) When the function has a void return type"
          ],
          correctAnswer: "B) When you want to pass a function as an argument"
        },
        {
          id: 27,
          question: "What is one advantage of using pointers to structures?",
          options: [
            "A) It allows for more efficient memory usage",
            "B) It improves the readability of the code",
            "C) It restricts the access to structure members",
            "D) It only applies to classes, not structures"
          ],
          correctAnswer: "A) It allows for more efficient memory usage"
        },
        {
          id: 28,
          question: "Which of the following best describes a memory leak?",
          options: [
            "A) It occurs when a program uses too much memory",
            "B) It occurs when memory is not deallocated properly",
            "C) It occurs when a program crashes due to a memory issue",
            "D) It occurs when a pointer is not properly initialized"
          ],
          correctAnswer: "B) It occurs when memory is not deallocated properly"
        },
        {
          id: 29,
          question: "What is a potential drawback of using pointers?",
          options: [
            "A) They can lead to inefficient memory usage",
            "B) They can only be used with primitive data types",
            "C) They can only be used in object-oriented programming",
            "D) They make debugging easier"
          ],
          correctAnswer: "A) They can lead to inefficient memory usage"
        },
        {
          id: 30,
          question: "In C++, what is the purpose of the this pointer?",
          options: [
            "A) It points to the current class instance within a member function",
            "B) It points to the next class instance within a member function",
            "C) It points to the base class instance within a derived class",
            "D) It points to the previous class instance within a member function"
          ],
          correctAnswer: "A) It points to the current class instance within a member function"
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 8 ended







    9: {
      // Chapter 1
      "9.1": [
        {
          id: 1,
          question: "What is the purpose of the fopen() function in C?",
          options: ["A) To create a new file", "B) To open an existing file", "C) To close a file", "D) To read a file"],
          correctAnswer: "B) To open an existing file",
        },
        {
          id: 2,
          question: "Which mode should be used with fopen() to open a file for reading and writing?",
          options: ["A) \"r\"", "B) \"w\"", "C) \"a\"", "D) \"r+\""],
          correctAnswer: "D) \"r+\"",
        },
        {
          id: 3,
          question: "Which function is used to close a file in C?",
          options: ["A) fclose()", "B) close()", "C) endfile()", "D) closefile()"],
          correctAnswer: "A) fclose()",
        },
        {
          id: 4,
          question: "What does fputc() do in C?",
          options: ["A) Reads a character from a file", "B) Writes a character to a file", "C) Opens a file for reading", "D) Closes a file"],
          correctAnswer: "B) Writes a character to a file",
        },
        {
          id: 5,
          question: "Which function is used to read a character from a file in C?",
          options: ["A) fgetc()", "B) fputc()", "C) fread()", "D) fwrite()"],
          correctAnswer: "A) fgetc()",
        },
        {
          id: 6,
          question: "What is the return type of fgetc() function?",
          options: ["A) int", "B) char", "C) FILE*", "D) void"],
          correctAnswer: "B) char",
        },
        {
          id: 7,
          question: "Which of the following is the correct syntax for opening a file in binary mode for reading?",
          options: ["A) fopen(\"file.txt\", \"rb\")", "B) fopen(\"file.txt\", \"r\")", "C) fopen(\"file.txt\", \"wb\")", "D) fopen(\"file.txt\", \"w\")"],
          correctAnswer: "A) fopen(\"file.txt\", \"rb\")",
        },
        {
          id: 8,
          question: "How can you check if a file was successfully opened using fopen()?",
          options: ["A) Check if it is not NULL", "B) Check if it is NULL", "C) Use fileopen() function", "D) Use ferror() function"],
          correctAnswer: "A) Check if it is not NULL",
        },
        {
          id: 9,
          question: "Which function is used to write a string to a file in C?",
          options: ["A) fprintf()", "B) fputs()", "C) fwrite()", "D) fprint()"],
          correctAnswer: "B) fputs()",
        },
        {
          id: 10,
          question: "Which function is used to write a character to a file in C?",
          options: ["A) fprintf()", "B) fputs()", "C) fputc()", "D) fwrite()"],
          correctAnswer: "C) fputc()",
        },
        {
          id: 11,
          question: "What is the correct way to check for the end of a file using fgetc()?",
          options: ["A) Check if fgetc() returns NULL", "B) Check if fgetc() returns EOF", "C) Use feof() function", "D) Use endoffile() function"],
          correctAnswer: "B) Check if fgetc() returns EOF",
        },
        {
          id: 12,
          question: "Which function is used to move the file pointer to a specific position in a file?",
          options: ["A) fseek()", "B) moveptr()", "C) setpos()", "D) filemove()"],
          correctAnswer: "A) fseek()",
        },
        {
          id: 13,
          question: "What does rewind() do in C?",
          options: ["A) Closes a file", "B) Moves the file pointer to the beginning of a file", "C) Deletes a file", "D) Renames a file"],
          correctAnswer: "B) Moves the file pointer to the beginning of a file",
        },
        {
          id: 14,
          question: "Which of the following is used to read a line from a file in C?",
          options: ["A) fgets()", "B) fgetline()", "C) freadline()", "D) getLine()"],
          correctAnswer: "A) fgets()",
        },
        {
          id: 15,
          question: "What does feof() do in C?",
          options: ["A) Checks for end of file", "B) Opens a file", "C) Reads a file", "D) Closes a file"],
          correctAnswer: "A) Checks for end of file",
        },
        {
          id: 16,
          question: "What is the return type of fclose() function?",
          options: ["A) int", "B) char", "C) FILE*", "D) void"],
          correctAnswer: "A) int",
        },
        {
          id: 17,
          question: "Which of the following modes opens a file for writing and creates it if it doesn't exist?",
          options: ["A) \"r+\"", "B) \"w+\"", "C) \"a+\"", "D) \"w\""],
          correctAnswer: "B) \"w+\"",
        },
        {
          id: 18,
          question: "Which function is used to read a block of data from a file?",
          options: ["A) fread()", "B) fgetc()", "C) fgets()", "D) read()"],
          correctAnswer: "A) fread()",
        },
        {
          id: 19,
          question: "Which function is used to write a block of data to a file?",
          options: ["A) fwrite()", "B) fputc()", "C) fputs()", "D) write()"],
          correctAnswer: "A) fwrite()",
        },
        {
          id: 20,
          question: "In C, how can you check if an error occurred during a file operation?",
          options: ["A) Check if ferror() returns 0", "B) Check if ferror() returns a non-zero value", "C) Use fileerror() function", "D) Use errorcheck() function"],
          correctAnswer: "B) Check if ferror() returns a non-zero value",
        },
        {
          id: 21,
          question: "Which function is used to rename a file in C?",
          options: ["A) rename()", "B) changerename()", "C) moverename()", "D) setrename()"],
          correctAnswer: "A) rename()",
        },
        {
          id: 22,
          question: "What is the purpose of the 'a' mode in fopen()?",
          options: ["A) Append to a file", "B) Create a new file", "C) Open an existing file", "D) Read a file"],
          correctAnswer: "A) Append to a file",
        },
        {
          id: 23,
          question: "Which function is used to delete a file in C?",
          options: ["A) remove()", "B) delete()", "C) erase()", "D) discard()"],
          correctAnswer: "A) remove()",
        },
        {
          id: 24,
          question: "What does the feof() function return when the end of file is reached?",
          options: ["A) 0", "B) 1", "C) EOF", "D) -1"],
          correctAnswer: "B) 1",
        },
        {
          id: 25,
          question: "Which function is used to flush the output buffer in C?",
          options: ["A) fflush()", "B) flush()", "C) flushout()", "D) clearout()"],
          correctAnswer: "A) fflush()",
        },
        {
          id: 26,
          question: "Which function is used to obtain the current position of the file pointer?",
          options: ["A) ftell()", "B) getpos()", "C) currpos()", "D) filepos()"],
          correctAnswer: "A) ftell()",
        },
        {
          id: 27,
          question: "What does feof() return if there's no error and the end of file is not reached?",
          options: ["A) 0", "B) 1", "C) EOF", "D) -1"],
          correctAnswer: "A) 0",
        },
        {
          id: 28,
          question: "Which function is used to create a new directory in C?",
          options: ["A) mkdir()", "B) createdir()", "C) newdir()", "D) makedir()"],
          correctAnswer: "A) mkdir()",
        },
        {
          id: 29,
          question: "What does the fseek() function do in C?",
          options: ["A) Moves the file pointer to a specific position", "B) Sets the file pointer to NULL", "C) Closes the file", "D) Reads a line from the file"],
          correctAnswer: "A) Moves the file pointer to a specific position",
        },
        {
          id: 30,
          question: "Which function is used to read a binary file in C?",
          options: ["A) fread()", "B) fgetc()", "C) fgets()", "D) read()"],
          correctAnswer: "A) fread()",
        },
      ],

      "9.2": [
        {
          id: 1,
          question: "Which mode is used to open a file for reading only, and the file must already exist?",
          options: [
            "A) \"r\"",
            "B) \"w\"",
            "C) \"a\"",
            "D) \"rb\""
          ],
          correctAnswer: "A) \"r\"",
        },
        {
          id: 2,
          question: "Which mode is used to open a file for writing only, and if the file already exists, its contents are truncated?",
          options: [
            "A) \"r\"",
            "B) \"w\"",
            "C) \"a\"",
            "D) \"wb\""
          ],
          correctAnswer: "B) \"w\"",
        },
        {
          id: 3,
          question: "Which mode is used to open a file for appending data at the end of the file?",
          options: [
            "A) \"r\"",
            "B) \"w\"",
            "C) \"a\"",
            "D) \"ab\""
          ],
          correctAnswer: "C) \"a\"",
        },
        {
          id: 4,
          question: "Which mode is used to open a file for reading and writing, without truncating the file if it already exists?",
          options: [
            "A) \"r\"",
            "B) \"w\"",
            "C) \"a\"",
            "D) \"r+\""
          ],
          correctAnswer: "D) \"r+\"",
        },
        {
          id: 5,
          question: "In binary mode, what is the difference between \"rb\" and \"wb\"?",
          options: [
            "A) \"rb\" opens for reading, \"wb\" opens for writing",
            "B) \"rb\" opens for reading in binary mode, \"wb\" opens for writing in binary mode",
            "C) \"rb\" opens for writing, \"wb\" opens for reading",
            "D) There is no difference"
          ],
          correctAnswer: "B) \"rb\" opens for reading in binary mode, \"wb\" opens for writing in binary mode",
        },
        {
          id: 6,
          question: "Which mode is used to open a file for both reading and appending?",
          options: [
            "A) \"ra\"",
            "B) \"rw\"",
            "C) \"a+\"",
            "D) \"r+\""
          ],
          correctAnswer: "C) \"a+\"",
        },
        {
          id: 7,
          question: "What happens if you try to open a non-existent file in \"r\" mode?",
          options: [
            "A) It creates a new file",
            "B) It returns an error",
            "C) It opens an empty file",
            "D) It appends to an existing file"
          ],
          correctAnswer: "B) It returns an error",
        },
        {
          id: 8,
          question: "Which mode is used to create a new file for writing, but if the file already exists, its contents are preserved?",
          options: [
            "A) \"w+\"",
            "B) \"a+\"",
            "C) \"wb+\"",
            "D) \"ab+\""
          ],
          correctAnswer: "A) \"w+\"",
        },
        {
          id: 9,
          question: "Which mode is used to open a file for both reading and writing in binary mode?",
          options: [
            "A) \"r+\"",
            "B) \"w+\"",
            "C) \"a+\"",
            "D) \"rb+\""
          ],
          correctAnswer: "D) \"rb+\"",
        },
        {
          id: 10,
          question: "If you open a file in \"a\" mode and write to it, where will the new data be added?",
          options: [
            "A) At the beginning of the file",
            "B) At the end of the file",
            "C) In the middle of the file",
            "D) It will overwrite the file"
          ],
          correctAnswer: "B) At the end of the file",
        },
        {
          id: 11,
          question: "Which mode is used to open a file for both reading and writing, and if the file doesn't exist, it creates one?",
          options: [
            "A) \"w+\"",
            "B) \"a+\"",
            "C) \"r+\"",
            "D) \"rb+\""
          ],
          correctAnswer: "C) \"r+\"",
        },
        {
          id: 12,
          question: "In which mode can you read and write without truncating the file, and create the file if it doesn't exist?",
          options: [
            "A) \"w+\"",
            "B) \"a+\"",
            "C) \"r+\"",
            "D) \"rb+\""
          ],
          correctAnswer: "A) \"w+\"",
        },
        {
          id: 13,
          question: "If you try to open a non-existent file in \"a\" mode, what will happen?",
          options: [
            "A) It will create a new file",
            "B) It will return an error",
            "C) It will append to an existing file",
            "D) It will open an empty file"
          ],
          correctAnswer: "A) It will create a new file",
        },
        {
          id: 14,
          question: "Which mode is used to open a file for both reading and appending in binary mode?",
          options: [
            "A) \"ra+\"",
            "B) \"rw+\"",
            "C) \"ab+\"",
            "D) \"r+b\""
          ],
          correctAnswer: "D) \"r+b\"",
        },
        {
          id: 15,
          question: "What happens if you open a file in \"w\" mode and write to it, but the file already exists?",
          options: [
            "A) It appends the data to the end of the file",
            "B) It overwrites the existing file",
            "C) It creates a new file with the same name",
            "D) It returns an error"
          ],
          correctAnswer: "B) It overwrites the existing file",
        },
        {
          id: 16,
          question: "Which mode is used to open a file for both reading and writing, and if the file doesn't exist, it creates one, in binary mode?",
          options: [
            "A) \"w+b\"",
            "B) \"a+b\"",
            "C) \"r+b\"",
            "D) \"rb+\""
          ],
          correctAnswer: "C) \"r+b\"",
        },
        {
          id: 17,
          question: "If you open a file in \"a+\" mode and write to it, where will the new data be added?",
          options: [
            "A) At the beginning of the file",
            "B) At the end of the file",
            "C) In the middle of the file",
            "D) It will overwrite the file"
          ],
          correctAnswer: "B) At the end of the file",
        },
        {
          id: 18,
          question: "Which mode is used to open a file for both reading and writing, and if the file doesn't exist, it creates one, in binary mode?",
          options: [
            "A) \"w+b\"",
            "B) \"a+b\"",
            "C) \"r+b\"",
            "D) \"rb+\""
          ],
          correctAnswer: "A) \"w+b\"",
        },
        {
          id: 19,
          question: "In binary mode, what is the difference between \"r+b\" and \"rb+\"?",
          options: [
            "A) \"r+b\" opens for reading, \"rb+\" opens for writing",
            "B) \"r+b\" opens for writing, \"rb+\" opens for reading",
            "C) \"r+b\" and \"rb+\" are equivalent",
            "D) There is no difference"
          ],
          correctAnswer: "C) \"r+b\" and \"rb+\" are equivalent",
        },
        {
          id: 20,
          question: "Which mode is used to open a file for both reading and writing, without truncating the file if it already exists, in binary mode?",
          options: [
            "A) \"w+b\"",
            "B) \"a+b\"",
            "C) \"r+b\"",
            "D) \"rb+\""
          ],
          correctAnswer: "D) \"rb+\"",
        },
        {
          id: 21,
          question: "What happens if you try to open a non-existent file in \"r+\" mode?",
          options: [
            "A) It creates a new file",
            "B) It returns an error",
            "C) It opens an empty file",
            "D) It appends to an existing file"
          ],
          correctAnswer: "B) It returns an error",
        },
        {
          id: 22,
          question: "Which mode is used to create a new file for writing, but if the file already exists, its contents are preserved, in binary mode?",
          options: [
            "A) \"w+b\"",
            "B) \"a+b\"",
            "C) \"wb+\"",
            "D) \"ab+\""
          ],
          correctAnswer: "A) \"w+b\"",
        },
        {
          id: 23,
          question: "In binary mode, which mode is used to open a file for both reading and appending?",
          options: [
            "A) \"ra+b\"",
            "B) \"rw+b\"",
            "C) \"ab+\"",
            "D) \"r+b\""
          ],
          correctAnswer: "C) \"ab+\"",
        },
        {
          id: 24,
          question: "What happens if you try to open a non-existent file in \"w+\" mode?",
          options: [
            "A) It creates a new file",
            "B) It returns an error",
            "C) It opens an empty file",
            "D) It appends to an existing file"
          ],
          correctAnswer: "A) It creates a new file",
        },
        {
          id: 25,
          question: "Which mode is used to open a file for both reading and writing in binary mode, without truncating the file if it already exists?",
          options: [
            "A) \"w+b\"",
            "B) \"a+b\"",
            "C) \"r+b\"",
            "D) \"rb+\""
          ],
          correctAnswer: "D) \"rb+\"",
        },
        {
          id: 26,
          question: "In which mode can you read and write without truncating the file, and create the file if it doesn't exist, in binary mode?",
          options: [
            "A) \"w+b\"",
            "B) \"a+b\"",
            "C) \"r+b\"",
            "D) \"rb+\""
          ],
          correctAnswer: "A) \"w+b\"",
        },
        {
          id: 27,
          question: "What happens if you try to open a non-existent file in \"a+\" mode?",
          options: [
            "A) It creates a new file",
            "B) It returns an error",
            "C) It opens an empty file",
            "D) It appends to an existing file"
          ],
          correctAnswer: "A) It creates a new file",
        },
        {
          id: 28,
          question: "Which mode is used to open a file for both reading and appending in binary mode?",
          options: [
            "A) \"ra+b\"",
            "B) \"rw+b\"",
            "C) \"ab+\"",
            "D) \"r+b\""
          ],
          correctAnswer: "C) \"ab+\"",
        },
        {
          id: 29,
          question: "What happens if you open a file in \"a\" mode and write to it, but the file already exists?",
          options: [
            "A) It appends the data to the end of the file",
            "B) It overwrites the existing file",
            "C) It creates a new file with the same name",
            "D) It returns an error"
          ],
          correctAnswer: "A) It appends the data to the end of the file",
        },
        {
          id: 30,
          question: "In binary mode, what is the difference between \"wb+\" and \"w+b\"?",
          options: [
            "A) \"wb+\" opens for reading, \"w+b\" opens for writing",
            "B) \"wb+\" opens for writing, \"w+b\" opens for reading",
            "C) \"wb+\" and \"w+b\" are equivalent",
            "D) There is no difference"
          ],
          correctAnswer: "B) \"wb+\" opens for writing, \"w+b\" opens for reading",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },


    //chapter 9 ended
  },
  //subject 1 ended
































  2: {
    // Module 2
    1: {
      // Chapter 1
      "1.1": [
        {
          id: 1,
          question: "What is JavaScript primarily used for?",
          options: [
            "A) Server-side scripting",
            "B) Client-side scripting",
            "C) Database management",
            "D) Game development",
          ],
          correctAnswer: "B) Client-side scripting",
        },
        {
          id: 2,
          question: "Who developed JavaScript?",
          options: [
            "A) Microsoft",
            "B) Sun Microsystems",
            "C) Netscape",
            "D) Oracle",
          ],
          correctAnswer: "C) Netscape",
        },
        {
          id: 3,
          question: "In which year was JavaScript first introduced?",
          options: [
            "A) 1995",
            "B) 2000",
            "C) 1989",
            "D) 2005",
          ],
          correctAnswer: "A) 1995",
        },
        {
          id: 4,
          question: "What was JavaScript originally called?",
          options: [
            "A) JScript",
            "B) LiveScript",
            "C) Java++",
            "D) ScriptMaster",
          ],
          correctAnswer: "B) LiveScript",
        },
        {
          id: 5,
          question: "Which of the following is not a data type in JavaScript?",
          options: [
            "A) Number",
            "B) String",
            "C) Boolean",
            "D) Float",
          ],
          correctAnswer: "D) Float",
        },
        {
          id: 6,
          question: "What is a closure in JavaScript?",
          options: [
            "A) A way to prevent code from executing",
            "B) A way to access outer function's scope from an inner function",
            "C) A way to declare variables in JavaScript",
            "D) A way to define global variables",
          ],
          correctAnswer: "B) A way to access outer function's scope from an inner function",
        },
        {
          id: 7,
          question: "Which keyword is used to declare variables in JavaScript?",
          options: [
            "A) var",
            "B) int",
            "C) declare",
            "D) variable",
          ],
          correctAnswer: "A) var",
        },
        {
          id: 8,
          question: "What does DOM stand for in the context of JavaScript?",
          options: [
            "A) Document Object Model",
            "B) Data Object Model",
            "C) Document Oriented Model",
            "D) Dynamic Object Model",
          ],
          correctAnswer: "A) Document Object Model",
        },
        {
          id: 9,
          question: "Which function is used to print output in the console in JavaScript?",
          options: [
            "A) console.log()",
            "B) print()",
            "C) echo()",
            "D) display()",
          ],
          correctAnswer: "A) console.log()",
        },
        {
          id: 10,
          question: "What is the purpose of the typeof operator in JavaScript?",
          options: [
            "A) To check the type of a variable",
            "B) To perform arithmetic operations",
            "C) To compare two values",
            "D) To concatenate strings",
          ],
          correctAnswer: "A) To check the type of a variable",
        },
        {
          id: 11,
          question: "Which of the following is a falsy value in JavaScript?",
          options: [
            "A) 0",
            "B) \" \"",
            "C) NaN",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 12,
          question: "What does AJAX stand for in JavaScript?",
          options: [
            "A) Asynchronous JavaScript and XML",
            "B) Advanced JavaScript and XML",
            "C) Asynchronous JavaScript and XHTML",
            "D) Automated JavaScript and XML",
          ],
          correctAnswer: "A) Asynchronous JavaScript and XML",
        },
        {
          id: 13,
          question: "Which of the following is a valid way to define a function in JavaScript?",
          options: [
            "A) function myFunction() {}",
            "B) var myFunction = function() {}",
            "C) both a and b",
            "D) None of the above",
          ],
          correctAnswer: "C) both a and b",
        },
        {
          id: 14,
          question: "What is a callback function in JavaScript?",
          options: [
            "A) A function that is called after another function has completed",
            "B) A function that is called before another function",
            "C) A function that is called simultaneously with another function",
            "D) A function that is called by default in JavaScript",
          ],
          correctAnswer: "A) A function that is called after another function has completed",
        },
        {
          id: 15,
          question: "Which keyword is used to prevent a variable from being re-declared in JavaScript?",
          options: [
            "A) const",
            "B) let",
            "C) var",
            "D) protect",
          ],
          correctAnswer: "A) const",
        },
        {
          id: 16,
          question: "What is the purpose of the break statement in JavaScript?",
          options: [
            "A) To exit a loop or switch statement",
            "B) To continue to the next iteration of a loop",
            "C) To return a value from a function",
            "D) To pause the execution of a program",
          ],
          correctAnswer: "A) To exit a loop or switch statement",
        },
        {
          id: 17,
          question: "What is the difference between null and undefined in JavaScript?",
          options: [
            "A) They are the same",
            "B) null represents the absence of a value, while undefined is a variable that has been declared but not assigned a value",
            "C) undefined represents the absence of a value, while null is a variable that has been declared but not assigned a value",
            "D) null is a keyword, while undefined is a built-in function",
          ],
          correctAnswer: "B) null represents the absence of a value, while undefined is a variable that has been declared but not assigned a value",
        },
        {
          id: 18,
          question: "Which of the following is a valid way to comment out a single line of code in JavaScript?",
          options: [
            "A) // This is a comment",
            "B) <!-- This is a comment -->",
            "C) /* This is a comment */",
            "D) ''' This is a comment '''",
          ],
          correctAnswer: "A) // This is a comment",
        },
        {
          id: 19,
          question: "What is a higher-order function in JavaScript?",
          options: [
            "A) A function that operates on another function",
            "B) A function that returns a boolean value",
            "C) A function that is called before another function",
            "D) A function that takes an argument of type 'function'",
          ],
          correctAnswer: "A) A function that operates on another function",
        },
        {
          id: 20,
          question: "Which method is used to add an element to the end of an array in JavaScript?",
          options: [
            "A) push()",
            "B) append()",
            "C) addToEnd()",
            "D) insertEnd()",
          ],
          correctAnswer: "A) push()",
        },
        {
          id: 21,
          question: "What is the difference between == and === in JavaScript?",
          options: [
            "A) == checks for equality in value, === checks for equality in value and type",
            "B) == is used for assignment, === is used for comparison",
            "C) == is used for comparison, === is used for assignment",
            "D) There is no difference between them",
          ],
          correctAnswer: "A) == checks for equality in value, === checks for equality in value and type",
        },
        {
          id: 22,
          question: "What is an IIFE in JavaScript?",
          options: [
            "A) Immediately Invoked Function Expression",
            "B) Internal Interface Function Execution",
            "C) Integrated Input Function Expression",
            "D) Inline Invoked Function Entity",
          ],
          correctAnswer: "A) Immediately Invoked Function Expression",
        },
        {
          id: 23,
          question: "Which of the following is not a loop in JavaScript?",
          options: [
            "A) for",
            "B) while",
            "C) until",
            "D) do...while",
          ],
          correctAnswer: "C) until",
        },
        {
          id: 24,
          question: "How can you check if a variable is an array in JavaScript?",
          options: [
            "A) typeof arr === \"array\"",
            "B) Array.isArray(arr)",
            "C) isarray(arr)",
            "D) arr.is_array()",
          ],
          correctAnswer: "B) Array.isArray(arr)",
        },
        {
          id: 25,
          question: "Which method is used to remove the last element from an array in JavaScript?",
          options: [
            "A) pop()",
            "B) removeLast()",
            "C) deleteLast()",
            "D) splice()",
          ],
          correctAnswer: "A) pop()",
        },
        {
          id: 26,
          question: "What is the purpose of the try...catch statement in JavaScript?",
          options: [
            "A) To handle exceptions and errors",
            "B) To define a new variable",
            "C) To declare a function",
            "D) To create a loop",
          ],
          correctAnswer: "A) To handle exceptions and errors",
        },
        {
          id: 27,
          question: "Which of the following is a primitive data type in JavaScript?",
          options: [
            "A) Object",
            "B) Function",
            "C) String",
            "D) Array",
          ],
          correctAnswer: "C) String",
        },
        {
          id: 28,
          question: "What is a prototype in JavaScript?",
          options: [
            "A) A template object for creating other objects",
            "B) A built-in function",
            "C) A variable with global scope",
            "D) A special type of loop",
          ],
          correctAnswer: "A) A template object for creating other objects",
        },
        {
          id: 29,
          question: "What does the this keyword refer to in JavaScript?",
          options: [
            "A) The current object",
            "B) The previous object",
            "C) The parent object",
            "D) The global object",
          ],
          correctAnswer: "A) The current object",
        },
        {
          id: 30,
          question: "Which of the following statements is true about JavaScript and Java?",
          options: [
            "A) JavaScript is a scripting language primarily used for client-side development, while Java is a general-purpose programming language.",
            "B) JavaScript and Java are the same language with different names.",
            "C) JavaScript is a general-purpose programming language, while Java is primarily used for client-side development.",
            "D) JavaScript is a subset of Java.",
          ],
          correctAnswer: "A) JavaScript is a scripting language primarily used for client-side development, while Java is a general-purpose programming language.",
        },
        // Add more questions for subchapter 1.1 as needed
      ],

      "1.2": [
        {
          id: 1,
          question: "What does IDE stand for?",
          options: [
            "A) Integrated Development Environment",
            "B) Interactive Design Environment",
            "C) Integrated Debugging Environment",
            "D) Interface Development Environment",
          ],
          correctAnswer: "A) Integrated Development Environment",
        },
        {
          id: 2,
          question: "Which of the following is NOT an example of an IDE?",
          options: [
            "A) Visual Studio Code",
            "B) Sublime Text",
            "C) Google Chrome",
            "D) Atom",
          ],
          correctAnswer: "C) Google Chrome",
        },
        {
          id: 3,
          question: "What is the primary purpose of Browser Developer Tools?",
          options: [
            "A) To write JavaScript code",
            "B) To debug JavaScript code",
            "C) To create web pages",
            "D) To browse the internet",
          ],
          correctAnswer: "B) To debug JavaScript code",
        },
        {
          id: 4,
          question: "Which panel in Browser Developer Tools allows you to inspect and modify the HTML and CSS of a webpage?",
          options: [
            "A) Elements",
            "B) Console",
            "C) Sources",
            "D) Network",
          ],
          correctAnswer: "A) Elements",
        },
        {
          id: 5,
          question: "In JavaScript, how do you declare a variable?",
          options: [
            "A) var",
            "B) let",
            "C) const",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 6,
          question: "What will be the output of the following JavaScript code?\n\nconsole.log(2 + \"2\");",
          options: [
            "A) 4",
            "B) \"22\"",
            "C) 22",
            "D) Error",
          ],
          correctAnswer: "B) \"22\"",
        },
        {
          id: 7,
          question: "Which keyword is used to define a constant in JavaScript?",
          options: [
            "A) var",
            "B) let",
            "C) const",
            "D) constant",
          ],
          correctAnswer: "C) const",
        },
        {
          id: 8,
          question: "Which method is used to convert a string to an integer in JavaScript?",
          options: [
            "A) parseInt()",
            "B) toInt()",
            "C) stringToNumber()",
            "D) convertToInteger()",
          ],
          correctAnswer: "A) parseInt()",
        },
        {
          id: 9,
          question: "What is the result of typeof null in JavaScript?",
          options: [
            "A) \"object\"",
            "B) \"null\"",
            "C) \"undefined\"",
            "D) \"number\"",
          ],
          correctAnswer: "A) \"object\"",
        },
        {
          id: 10,
          question: "In JavaScript, which loop is best suited for iterating over arrays?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) for...of loop",
          ],
          correctAnswer: "D) for...of loop",
        },
        {
          id: 11,
          question: "What is the correct way to comment out a single line in JavaScript?",
          options: [
            "A) /* This is a comment */",
            "B) // This is a comment",
            "C) <!-- This is a comment -->",
            "D) ' This is a comment '",
          ],
          correctAnswer: "B) // This is a comment",
        },
        {
          id: 12,
          question: "Which function is used to return the length of an array in JavaScript?",
          options: [
            "A) arraySize()",
            "B) lengthOf()",
            "C) arr.length",
            "D) getSize()",
          ],
          correctAnswer: "C) arr.length",
        },
        {
          id: 13,
          question: "Which event is triggered when a user clicks on an HTML element?",
          options: [
            "A) onclick",
            "B) onmouseover",
            "C) onkeydown",
            "D) onsubmit",
          ],
          correctAnswer: "A) onclick",
        },
        {
          id: 14,
          question: "What is the purpose of the addEventListener method in JavaScript?",
          options: [
            "A) It adds an event listener to an HTML element.",
            "B) It removes an event listener from an HTML element.",
            "C) It changes the style of an HTML element.",
            "D) It creates a new HTML element.",
          ],
          correctAnswer: "A) It adds an event listener to an HTML element.",
        },
        {
          id: 15,
          question: "Which method is used to send an HTTP request in JavaScript?",
          options: [
            "A) fetch()",
            "B) sendRequest()",
            "C) httpRequest()",
            "D) request()",
          ],
          correctAnswer: "A) fetch()",
        },
        {
          id: 16,
          question: "What is the correct syntax for a function declaration in JavaScript?",
          options: [
            "A) function myFunction() {}",
            "B) var myFunction = function() {}",
            "C) let myFunction = () => {}",
            "D) def myFunction() {}",
          ],
          correctAnswer: "A) function myFunction() {}",
        },
        {
          id: 17,
          question: "Which keyword is used to exit a loop prematurely in JavaScript?",
          options: [
            "A) exit",
            "B) continue",
            "C) break",
            "D) return",
          ],
          correctAnswer: "C) break",
        },
        {
          id: 18,
          question: "What is the purpose of the localStorage object in JavaScript?",
          options: [
            "A) It is used to store data that persists across browser sessions.",
            "B) It is used to retrieve the current date and time.",
            "C) It is used to fetch data from an external API.",
            "D) It is used to create animations.",
          ],
          correctAnswer: "A) It is used to store data that persists across browser sessions.",
        },
        {
          id: 19,
          question: "Which method is used to convert a string to uppercase in JavaScript?",
          options: [
            "A) toUpperCase()",
            "B) upperCase()",
            "C) makeUpperCase()",
            "D) convertToUpperCase()",
          ],
          correctAnswer: "A) toUpperCase()",
        },
        {
          id: 20,
          question: "In JavaScript, what does the NaN value represent?",
          options: [
            "A) Not a Number",
            "B) Negative Absolute Number",
            "C) No Action Necessary",
            "D) Non-Alphanumeric Name",
          ],
          correctAnswer: "A) Not a Number",
        },
        {
          id: 21,
          question: "Which function is used to round a number down to the nearest integer in JavaScript?",
          options: [
            "A) Math.round()",
            "B) Math.floor()",
            "C) Math.ceil()",
            "D) Math.trunc()",
          ],
          correctAnswer: "B) Math.floor()",
        },
        {
          id: 22,
          question: "What is the correct way to include an external JavaScript file in an HTML document?",
          options: [
            '<script src="script.js"></script>',
            '<js src="script.js"></js>',
            '<link rel="javascript" href="script.js">',
            '<script href="script.js"></script>',
          ],
          correctAnswer: '<script src="script.js"></script>',
        },
        {
          id: 23,
          question: "Which method is used to remove the last element from an array in JavaScript?",
          options: [
            "A) pop()",
            "B) shift()",
            "C) slice()",
            "D) splice()",
          ],
          correctAnswer: "A) pop()",
        },
        {
          id: 24,
          question: "What will be the output of the following JavaScript code?\n\nconsole.log(typeof [1, 2, 3]);",
          options: [
            'A) "array"',
            'B) "object"',
            'C) "list"',
            'D) "number"',
          ],
          correctAnswer: 'B) "object"',
        },
        {
          id: 25,
          question: "Which operator is used to concatenate two strings in JavaScript?",
          options: [
            "A) +",
            "B) *",
            "C) -",
            "D) /",
          ],
          correctAnswer: "A) +",
        },
        {
          id: 26,
          question: "In JavaScript, what is the purpose of the this keyword?",
          options: [
            "A) It refers to the current function.",
            "B) It refers to the global object.",
            "C) It refers to the current object.",
            "D) It refers to a specific DOM element.",
          ],
          correctAnswer: "C) It refers to the current object.",
        },
        {
          id: 27,
          question: "Which function is used to convert a number to a string in JavaScript?",
          options: [
            "A) String()",
            "B) toString()",
            "C) str()",
            "D) numToStr()",
          ],
          correctAnswer: "B) toString()",
        },
        {
          id: 28,
          question: "What is the result of 3 === '3' in JavaScript?",
          options: [
            "A) true",
            "B) false",
            "C) Error",
            "D) Undefined",
          ],
          correctAnswer: "B) false",
        },
        {
          id: 29,
          question: "Which method is used to add an element to the end of an array in JavaScript?",
          options: [
            "A) push()",
            "B) unshift()",
            "C) concat()",
            "D) add()",
          ],
          correctAnswer: "A) push()",
        },
        {
          id: 30,
          question: "What is the correct way to declare and initialize a constant in JavaScript?",
          options: [
            "A) const PI = 3.14;",
            "B) let PI = 3.14;",
            "C) var PI = 3.14;",
            "D) PI = 3.14;",
          ],
          correctAnswer: "A) const PI = 3.14;",
        },
        // Add more questions for subchapter 1.2 as needed
      ],

      "1.3": [
        {
          id: 1,
          question: "What is the keyword used to declare a constant variable in C++?",
          options: ["A) var", "B) let", "C) const", "D) constant",],
          correctAnswer: "C) const",
        },
        {
          id: 2,
          question: "Which of the following is a valid data type in C++?",
          options: ["A) Float", "B) Char", "C) String", "D) Boolean",],
          correctAnswer: "B) Char",
        },
        {
          id: 3,
          question: "What is the maximum value that can be stored in an unsigned integer in C++?",
          options: ["A) 32767", "B) 65535", "C) 2147483647", "D) 4294967295",],
          correctAnswer: "D) 4294967295",
        },
        {
          id: 4,
          question: "Which of the following is not a valid variable name in C++?",
          options: ["A) myVariable", "B) 2ndVariable", "C) _variable", "D) camelCaseVariable",],
          correctAnswer: "B) 2ndVariable",
        },
        {
          id: 5,
          question: "What will be the output of the following code?\n\nint x = 5;\ncout << x / 2;",
          options: ["A) 2.5", "B) 2", "C) 2.0", "D) 2.0f",],
          correctAnswer: "B) 2",
        },
        {
          id: 6,
          question: "Which of the following is a valid way to convert a float to an integer in C++?",
          options: ["A) static_cast<int>(x)", "B) int(x)", "C) (int)x", "D) Both A) and B)",],
          correctAnswer: "D) Both A) and B)",
        },
        {
          id: 7,
          question: "What is the result of the expression: 5 + \"3\" in C++?",
          options: ["A) 8", "B) 53", "C) Compilation Error", "D) Runtime Error",],
          correctAnswer: "B) 53",
        },
        {
          id: 8,
          question: "Which of the following is the correct way to declare a string variable in C++?",
          options: ["A) string myString = \"Hello\";", "B) string myString(\"Hello\");", "C) Both A) and B)", "D) None of the above",],
          correctAnswer: "C) Both A) and B)",
        },
        {
          id: 9,
          question: "What is the output of the following code?\n\nbool isTrue = true;\ncout << std::boolalpha << isTrue;",
          options: ["A) 1", "B) true", "C) True", "D) Compilation Error",],
          correctAnswer: "B) true",
        },
        {
          id: 10,
          question: "Which of the following statements is true about arrays in C++?",
          options: ["A) Elements of an array must be of the same data type.", "B) Arrays can have a variable number of elements.", "C) Arrays are not supported in C++.", "D) Arrays can only store integers.",],
          correctAnswer: "A) Elements of an array must be of the same data type.",
        },
        {
          id: 11,
          question: "What is the output of the following code?\n\nint x = 10;\nfloat y = 5.5;\ncout << x / y;",
          options: ["A) 2.0", "B) 1.81818", "C) 1.82", "D) Compilation Error",],
          correctAnswer: "A) 2.0",
        },
        {
          id: 12,
          question: "Which of the following is a valid way to declare a constant pointer in C++?",
          options: ["A) int* const ptr = &x;", "B) const int* ptr = &x;", "C) const int* const ptr = &x;", "D) Both A) and C)",],
          correctAnswer: "D) Both A) and C)",
        },
        {
          id: 13,
          question: "What is the output of the following code?\n\nint x = 5;\nx = x + 1;\ncout << x;",
          options: ["A) 5", "B) 6", "C) 7", "D) Compilation Error",],
          correctAnswer: "B) 6",
        },
        {
          id: 14,
          question: "Which of the following is true about the 'sizeof' operator in C++?",
          options: ["A) It returns the size of the variable in bytes.", "B) It returns the size of the variable in bits.", "C) It is used to determine the number of elements in an array.", "D) It is not a valid operator in C++.",],
          correctAnswer: "A) It returns the size of the variable in bytes.",
        },
        {
          id: 15,
          question: "What is the output of the following code?\n\nstring greeting = \"Hello\";\ncout << greeting.length();",
          options: ["A) 5", "B) 6", "C) Compilation Error", "D) Runtime Error",],
          correctAnswer: "A) 5",
        },
        {
          id: 16,
          question: "Which of the following is a valid way to concatenate two strings in C++?",
          options: ["A) str1 + str2", "B) str1 . str2", "C) str1 + \" \" + str2", "D) Both A) and B)",],
          correctAnswer: "A) str1 + str2",
        },
        {
          id: 17,
          question: "What is the output of the following code?\n\nint x = 5;\nx += 3;\ncout << x;",
          options: ["A) 8", "B) 15", "C) 53", "D) Compilation Error",],
          correctAnswer: "A) 8",
        },
        {
          id: 18,
          question: "Which of the following is the correct syntax for a multi-line comment in C++?",
          options: ["A) /* This is a comment */", "B) // This is a comment //", "C) / This is a comment /", "D) ** This is a comment **",],
          correctAnswer: "A) /* This is a comment */",
        },
        {
          id: 19,
          question: "What is the output of the following code?\n\nint x = 5;\nint y = 2;\ncout << x % y;",
          options: ["A) 2", "B) 1", "C) 0.4", "D) Compilation Error",],
          correctAnswer: "B) 1",
        },
        {
          id: 20,
          question: "Which of the following is a valid way to declare a 2D array in C++?",
          options: ["A) int arr[2][3];", "B) int arr[2, 3];", "C) int arr[2][3, 4];", "D) int arr[2][3][4];",],
          correctAnswer: "A) int arr[2][3];",
        },
        {
          id: 21,
          question: "What is the output of the following code?\n\nbool isTrue = false;\ncout << std::boolalpha << isTrue;",
          options: ["A) 0", "B) false", "C) False", "D) Compilation Error",],
          correctAnswer: "B) false",
        },
        {
          id: 22,
          question: "Which of the following is the correct way to declare a constant member variable in a class in C++?",
          options: ["A) const int myVar;", "B) int const myVar;", "C) static const int myVar;", "D) Both A) and B)",],
          correctAnswer: "D) Both A) and B)",
        },
        {
          id: 23,
          question: "What is the output of the following code?\n\nstring greeting = \"Hello\";\ncout << greeting[1];",
          options: ["A) H", "B) e", "C) l", "D) o",],
          correctAnswer: "B) e",
        },
        {
          id: 24,
          question: "What is the output of the following code?\n\nint x = 5;\ncout << \"The value of x is: \" << x;",
          options: ["A) The value of x is: 5", "B) The value of x is: 10", "C) 5", "D) Compilation Error",],
          correctAnswer: "A) The value of x is: 5",
        },
        {
          id: 25,
          question: "Which of the following is the correct way to declare a global variable in C++?",
          options: ["A) int globalVar;", "B) global int globalVar;", "C) globalVar = int;", "D) Both A) and B)",],
          correctAnswer: "A) int globalVar;",
        },
        {
          id: 26,
          question: "What is the output of the following code?\n\nint x = 5;\nint y = 2;\ncout << x / y;",
          options: ["A) 2", "B) 2.5", "C) 2.0", "D) Compilation Error",],
          correctAnswer: "A) 2",
        },
        {
          id: 27,
          question: "Which of the following is not a valid way to initialize a variable in C++?",
          options: ["A) int x = 5;", "B) int y(6);", "C) int z; z = 7;", "D) int w{8};",],
          correctAnswer: "C) int z; z = 7;",
        },
        {
          id: 28,
          question: "What is the output of the following code?\n\nint x = 5;\nx++; cout << x;",
          options: ["A) 4", "B) 5", "C) 6", "D) Compilation Error",],
          correctAnswer: "C) 6",
        },
        {
          id: 29,
          question: "Which of the following is true about type conversion in C++?",
          options: ["A) Implicit type conversion is also known as explicit type casting.", "B) Explicit type conversion is also known as implicit type casting.", "C) Implicit type conversion is done automatically by the compiler.", "D) Explicit type conversion is done without the use of casting operators.",],
          correctAnswer: "C) Implicit type conversion is done automatically by the compiler.",
        },
        {
          id: 30,
          question: "What is the output of the following code?\n\nint x = 5;\nint y = 2;\ncout << static_cast<float>(x) / y;",
          options: ["A) 2.5", "B) 2", "C) 2.0", "D) Compilation Error",],
          correctAnswer: "A) 2.5",
        },
        // Add more questions for subchapter 1.1 as needed
      ],

      "1.4": [
        {
          id: 1,
          question: "What will be the value of x after the following operation?",
          options: [
            "A) 5",
            "B) 8",
            "C) 3",
            "D) 15",
          ],
          correctAnswer: "B) 8",
        },
        {
          id: 2,
          question: "Which of the following is a comparison operator in C++?",
          options: [
            "A) +",
            "B) ==",
            "C) &&",
            "D) %",
          ],
          correctAnswer: "B) ==",
        },
        {
          id: 3,
          question: "What is the result of the following expression?",
          options: [
            "A) 10",
            "B) 7",
            "C) 10.0",
            "D) 5",
          ],
          correctAnswer: "A) 10",
        },
        {
          id: 4,
          question: "Which operator is used to find the remainder of a division operation in C++?",
          options: [
            "A) %",
            "B) *",
            "C) /",
            "D) //",
          ],
          correctAnswer: "A) %",
        },
        {
          id: 5,
          question: "What is the output of the following code?",
          options: [
            "A) True",
            "B) False",
            "C) Error",
            "D) 8",
          ],
          correctAnswer: "A) True",
        },
        {
          id: 6,
          question: "Identify the error in the following code:",
          options: [
            "A) No error",
            "B) Type mismatch",
            "C) Missing header file",
            "D) Division by zero",
          ],
          correctAnswer: "B) Type mismatch",
        },
        {
          id: 7,
          question: "Which logical operator is used to perform a logical AND operation in C++?",
          options: [
            "A) &&",
            "B) ||",
            "C) !",
            "D) &",
          ],
          correctAnswer: "A) &&",
        },
        {
          id: 8,
          question: "What is the value of z after the following operation?",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "A) 1",
        },
        {
          id: 9,
          question: "Which of the following is a valid C++ expression?",
          options: [
            "A) 5 + \"Hello\"",
            "B) 5 / 0",
            "C) 3.14 * 'A'",
            "D) 2 + 2.5",
          ],
          correctAnswer: "D) 2 + 2.5",
        },
        {
          id: 10,
          question: "What will be the output of the following code?",
          options: [
            "A) False",
            "B) True",
            "C) Error",
            "D) 8",
          ],
          correctAnswer: "B) True",
        },
        {
          id: 11,
          question: "Identify the error in the following code:",
          options: [
            "A) No error",
            "B) Missing semicolon",
            "C) Undefined variable",
            "D) Increment operator cannot be used with variables",
          ],
          correctAnswer: "A) No error",
        },
        {
          id: 12,
          question: "Which operator is used to access the value at a memory address in C++?",
          options: [
            "A) *",
            "B) &",
            "C) %",
            "D) !",
          ],
          correctAnswer: "A) *",
        },
        {
          id: 13,
          question: "What is the result of the following expression?",
          options: [
            "A) 3",
            "B) 3.3",
            "C) 3.0",
            "D) 2",
          ],
          correctAnswer: "C) 3.0",
        },
        {
          id: 14,
          question: "What will be the output of the following code?",
          options: [
            "A) False",
            "B) True",
            "C) Error",
            "D) 8",
          ],
          correctAnswer: "B) False",
        },
        {
          id: 15,
          question: "Identify the error in the following code:",
          options: [
            "A) No error",
            "B) Division by zero",
            "C) Missing header file",
            "D) Variable y is not declared",
          ],
          correctAnswer: "B) Division by zero",
        },
        {
          id: 16,
          question: "Which operator is used to perform a logical OR operation in C++?",
          options: [
            "A) &&",
            "B) ||",
            "C) !",
            "D) |",
          ],
          correctAnswer: "B) ||",
        },
        {
          id: 17,
          question: "What is the value of z after the following operation?",
          options: [
            "A) 2",
            "B) 3",
            "C) 4",
            "D) 5",
          ],
          correctAnswer: "A) 2",
        },
        {
          id: 18,
          question: "Which of the following is a valid C++ expression?",
          options: [
            "A) 'A' + 1",
            "B) true - false",
            "C) \"Hello\" + \"World\"",
            "D) 5 % 2.0",
          ],
          correctAnswer: "A) 'A' + 1",
        },
        {
          id: 19,
          question: "What will be the output of the following code?",
          options: [
            "A) False",
            "B) True",
            "C) Error",
            "D) 10",
          ],
          correctAnswer: "B) False",
        },
        {
          id: 20,
          question: "Identify the error in the following code:",
          options: [
            "A) No error",
            "B) Missing semicolon",
            "C) Undefined variable",
            "D) Decrement operator cannot be used with variables",
          ],
          correctAnswer: "A) No error",
        },
        {
          id: 21,
          question: "Which operator is used to find the memory address of a variable in C++?",
          options: [
            "A) *",
            "B) &",
            "C) %",
            "D) !",
          ],
          correctAnswer: "B) &",
        },
        {
          id: 22,
          question: "What is the result of the following expression?",
          options: [
            "A) 3",
            "B) 3.3",
            "C) 3.0",
            "D) 2",
          ],
          correctAnswer: "C) 3.0",
        },
        {
          id: 23,
          question: "What will be the output of the following code?",
          options: [
            "A) True",
            "B) False",
            "C) Error",
            "D) 8",
          ],
          correctAnswer: "A) True",
        },
        {
          id: 24,
          question: "Identify the error in the following code:",
          options: [
            "A) No error",
            "B) Type mismatch",
            "C) Missing header file",
            "D) Division by zero",
          ],
          correctAnswer: "A) No error",
        },
        {
          id: 25,
          question: "Which logical operator is used to perform a logical NOT operation in C++?",
          options: [
            "A) &&",
            "B) ||",
            "C) !",
            "D) &",
          ],
          correctAnswer: "C) !",
        },
        {
          id: 26,
          question: "What is the value of z after the following operation?",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "A) 1",
        },
        {
          id: 27,
          question: "Which of the following is a valid C++ expression?",
          options: [
            "A) 'A' + 1",
            "B) true - false",
            "C) \"Hello\" + \"World\"",
            "D) 5 % 2.0",
          ],
          correctAnswer: "A) 'A' + 1",
        },
        {
          id: 28,
          question: "What will be the output of the following code?",
          options: [
            "A) False",
            "B) True",
            "C) Error",
            "D) 8",
          ],
          correctAnswer: "B) True",
        },
        {
          id: 29,
          question: "Identify the error in the following code:",
          options: [
            "A) No error",
            "B) Division by zero",
            "C) Missing header file",
            "D) Variable y is not declared",
          ],
          correctAnswer: "B) Division by zero",
        },
        {
          id: 30,
          question: "Which of the following is a valid C++ expression?",
          options: [
            "A) 5 + \"5\"",
            "B) 7 / 0",
            "C) 3.14 * 'A'",
            "D) 2 - 2.5",
          ],
          correctAnswer: "D) 2 - 2.5",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 1 ended





    2: {
      // Chapter 2
      "2.1": [
        {
          id: 1,
          question: "What is the syntax for an if statement in C++?",
          options: [
            "A) if(condition) { statements; }",
            "B) if(condition) then { statements; }",
            "C) if(condition) => { statements; }",
            "D) (condition) if { statements; }",
          ],
          correctAnswer: "A) if(condition) { statements; }",
        },
        {
          id: 2,
          question: "In C++, can an if statement be followed by an else if statement without an intervening else statement?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 3,
          question: "What is the purpose of the else if statement in C++?",
          options: [
            "A) It provides an alternative set of statements if the initial if condition is false.",
            "B) It terminates the program if the initial if condition is false.",
            "C) It reverses the condition specified in the initial if statement.",
            "D) It has no specific purpose.",
          ],
          correctAnswer: "A) It provides an alternative set of statements if the initial if condition is false.",
        },
        {
          id: 4,
          question: "Which keyword is used to define a switch statement in C++?",
          options: [
            "A) switch",
            "B) case",
            "C) select",
            "D) choose",
          ],
          correctAnswer: "A) switch",
        },
        {
          id: 5,
          question: "In a switch statement, what happens if none of the cases match the switch expression?",
          options: [
            "A) The program executes the default case (if provided).",
            "B) The program terminates abruptly.",
            "C) An error is thrown.",
            "D) It goes to the next iteration of the loop.",
          ],
          correctAnswer: "A) The program executes the default case (if provided).",
        },
        {
          id: 6,
          question: "In a switch statement, what is the purpose of the break statement?",
          options: [
            "A) It exits the switch statement and continues with the next statement after the switch.",
            "B) It restarts the switch statement from the beginning.",
            "C) It skips the current case and moves to the next one.",
            "D) It terminates the program.",
          ],
          correctAnswer: "A) It exits the switch statement and continues with the next statement after the switch.",
        },
        {
          id: 7,
          question: "Which of the following is a valid if-else statement in C++?",
          options: [
            "A) if(condition) { statements; } else(condition) { statements; }",
            "B) if(condition) { statements; } else { statements; }",
            "C) if(condition) { statements; } if { statements; }",
            "D) if(condition) { statements; } elseif { statements; }",
          ],
          correctAnswer: "B) if(condition) { statements; } else { statements; }",
        },
        {
          id: 8,
          question: "What happens if there is no default case in a switch statement?",
          options: [
            "A) The program throws an error.",
            "B) The program continues executing the statements after the switch.",
            "C) It is mandatory to have a default case.",
            "D) The program terminates abruptly.",
          ],
          correctAnswer: "B) The program continues executing the statements after the switch.",
        },
        {
          id: 9,
          question: "In C++, can a switch statement work with characters as cases?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 10,
          question: "Which of the following is the correct way to write a nested if-else statement in C++?",
          options: [
            "A) if(condition1) { statements; } else if(condition2) { statements; } else { statements; }",
            "B) if(condition1) { statements; } elseif(condition2) { statements; } else { statements; }",
            "C) if(condition1) { statements; } if(condition2) { statements; } else { statements; }",
            "D) if(condition1) { statements; } else(condition2) { statements; } else { statements; }",
          ],
          correctAnswer: "A) if(condition1) { statements; } else if(condition2) { statements; } else { statements; }",
        },
        {
          id: 11,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint x = 5;\nswitch(x) {\n    case 1:\n        cout << \"One\";\n    case 5:\n        cout << \"Five\";\n    case 10:\n        cout << \"Ten\";\n}\n```\na) One Five Ten\nb) Five\nc) Five Ten\nd) One",
          options: [
            "A) One Five Ten",
            "B) Five",
            "C) Five Ten",
            "D) One",
          ],
          correctAnswer: "A) One Five Ten",
        },
        {
          id: 12,
          question: "In a switch statement, can two case labels have the same value?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 13,
          question: "What is the purpose of using curly braces ({}) in if-else statements in C++?",
          options: [
            "A) They define a block of statements to be executed if the condition is true.",
            "B) They define the condition to be checked.",
            "C) They define a loop.",
            "D) They are optional and can be omitted.",
          ],
          correctAnswer: "A) They define a block of statements to be executed if the condition is true.",
        },
        {
          id: 14,
          question: "Which of the following is a valid syntax for a switch statement in C++?",
          options: [
            "A) switch(expression) { case 1: statements; }",
            "B) switch(expression): case 1: statements;",
            "C) switch(expression) - case 1: statements;",
            "D) switch(expression): case 1: statements; endswitch;",
          ],
          correctAnswer: "A) switch(expression) { case 1: statements; }",
        },
        {
          id: 15,
          question: "In a switch statement, can you use a floating-point number as a case label?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 16,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint num = 3;\nswitch(num) {\n    case 1:\n        cout << \"One\";\n        break;\n    case 2:\n        cout << \"Two\";\n        break;\n    default:\n        cout << \"Default\";\n}\n```\na) One\nb) Two\nc) Default\nd) No output",
          options: [
            "A) One",
            "B) Two",
            "C) Default",
            "D) No output",
          ],
          correctAnswer: "C) Default",
        },
        {
          id: 17,
          question: "In a switch statement, can you have a case label without any statements following it?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 18,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint x = 5;\nif(x > 10) {\n    cout << \"Greater than 10\";\n}\nelse if(x > 5) {\n    cout << \"Greater than 5\";\n}\nelse {\n    cout << \"Less than or equal to 5\";\n}\n```\na) Greater than 10\nb) Greater than 5\nc) Less than or equal to 5\nd) No output",
          options: [
            "A) Greater than 10",
            "B) Greater than 5",
            "C) Less than or equal to 5",
            "D) No output",
          ],
          correctAnswer: "C) Less than or equal to 5",
        },
        {
          id: 19,
          question: "Which of the following statements is true about the else statement in C++?",
          options: [
            "A) It can be used without an if statement.",
            "B) It is mandatory to have an if statement before an else statement.",
            "C) It provides an alternative set of statements if the preceding if condition is false.",
            "D) It is used to terminate the program.",
          ],
          correctAnswer: "C) It provides an alternative set of statements if the preceding if condition is false.",
        },
        {
          id: 20,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint num = 7;\nswitch(num) {\n    case 5:\n        cout << \"Five\";\n        break;\n    case 7:\n        cout << \"Seven\";\n        break;\n    default:\n        cout << \"Default\";\n}\n```\na) Five\nb) Seven\nc) Default\nd) No output",
          options: [
            "A) Five",
            "B) Seven",
            "C) Default",
            "D) No output",
          ],
          correctAnswer: "B) Seven",
        },
        {
          id: 21,
          question: "Which of the following is a valid way to compare two integers in an if condition?",
          options: [
            "A) if(x = y)",
            "B) if(x == y)",
            "C) if(x => y)",
            "D) if(x != y)",
          ],
          correctAnswer: "B) if(x == y)",
        },
        {
          id: 22,
          question: "In a switch statement, can you have multiple case labels for a single set of statements?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 23,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint x = 10;\nswitch(x) {\n    case 5:\n        cout << \"Five\";\n        break;\n    case 10:\n        cout << \"Ten\";\n        break;\n    default:\n        cout << \"Default\";\n}\n```\na) Five\nb) Ten\nc) Default\nd) No output",
          options: [
            "A) Five",
            "B) Ten",
            "C) Default",
            "D) No output",
          ],
          correctAnswer: "B) Ten",
        },
        {
          id: 24,
          question: "Which of the following is a valid use of an if-else statement?",
          options: [
            "A) if(5 + 5) { statements; }",
            "B) if(true) { statements; }",
            "C) if(x = 10) { statements; }",
            "D) if(x != y) { statements; }",
          ],
          correctAnswer: "D) if(x != y) { statements; }",
        },
        {
          id: 25,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint num = 2;\nswitch(num) {\n    case 1:\n        cout << \"One\";\n        break;\n    case 2:\n        cout << \"Two\";\n}\n```\na) One\nb) Two\nc) No output\nd) An error occurs",
          options: [
            "A) One",
            "B) Two",
            "C) No output",
            "D) An error occurs",
          ],
          correctAnswer: "B) Two",
        },
        {
          id: 26,
          question: "In a switch statement, can you use a variable of type char as the switch expression?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 27,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint x = 3;\nif(x < 5)\n    cout << \"Less than 5\";\nelse if(x < 10)\n    cout << \"Less than 10\";\nelse\n    cout << \"Greater than or equal to 10\";\n```\na) Less than 5\nb) Less than 10\nc) Greater than or equal to 10\nd) No output",
          options: [
            "A) Less than 5",
            "B) Less than 10",
            "C) Greater than or equal to 10",
            "D) No output",
          ],
          correctAnswer: "A) Less than 5",
        },
        {
          id: 28,
          question: "In a switch statement, can the switch expression be of type float?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 29,
          question: "What is the output of the following C++ code snippet?\n\n```cpp\nint num = 2;\nswitch(num) {\n    case 1:\n        cout << \"One\";\n        break;\n    case 2:\n        cout << \"Two\";\n}\n```\na) One\nb) Two\nc) No output\nd) An error occurs",
          options: [
            "A) One",
            "B) Two",
            "C) No output",
            "D) An error occurs",
          ],
          correctAnswer: "B) Two",
        },
        {
          id: 30,
          question: "Which of the following is a valid syntax for a switch statement in C++?",
          options: [
            "A) switch(expression) { case 1: statements; }",
            "B) switch(expression): case 1: statements;",
            "C) switch(expression) - case 1: statements;",
            "D) switch(expression): case 1: statements; endswitch;",
          ],
          correctAnswer: "A) switch(expression) { case 1: statements; }",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "2.2": [
        {
          id: 1,
          question: "What is the purpose of a loop in programming?",
          options: [
            "A) To execute a block of code multiple times",
            "B) To terminate the program",
            "C) To declare variables",
            "D) To print output",
          ],
          correctAnswer: "A) To execute a block of code multiple times",
        },
        {
          id: 2,
          question: "Which loop is best suited when you know the exact number of iterations needed?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) break loop",
          ],
          correctAnswer: "A) for loop",
        },
        {
          id: 3,
          question: "In a for loop, how many expressions are present inside the parentheses?",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "C) 3",
        },
        {
          id: 4,
          question: "Which loop will always execute the code block at least once?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) break loop",
          ],
          correctAnswer: "C) do-while loop",
        },
        {
          id: 5,
          question: "When would you use a do-while loop instead of a while loop?",
          options: [
            "A) When you want the loop to run at least once",
            "B) When you know the exact number of iterations",
            "C) When you want to skip the loop entirely",
            "D) When you want to break out of the loop",
          ],
          correctAnswer: "A) When you want the loop to run at least once",
        },
        {
          id: 6,
          question: "What is the purpose of the break statement in a loop?",
          options: [
            "A) To exit the loop prematurely",
            "B) To skip the current iteration",
            "C) To continue to the next iteration",
            "D) To print a message",
          ],
          correctAnswer: "A) To exit the loop prematurely",
        },
        {
          id: 7,
          question: "In a for loop, where is the initialization expression typically placed?",
          options: [
            "A) Before the loop starts",
            "B) In the middle of the loop body",
            "C) After the loop body",
            "D) It can be placed anywhere",
          ],
          correctAnswer: "A) Before the loop starts",
        },
        {
          id: 8,
          question: "Which loop control statement is used to skip the rest of the current iteration and start the next one?",
          options: [
            "A) continue",
            "B) break",
            "C) return",
            "D) skip",
          ],
          correctAnswer: "A) continue",
        },
        {
          id: 9,
          question: "What is an infinite loop?",
          options: [
            "A) A loop that never terminates",
            "B) A loop that executes only once",
            "C) A loop that has a very large number of iterations",
            "D) A loop that prints infinitely",
          ],
          correctAnswer: "A) A loop that never terminates",
        },
        {
          id: 10,
          question: "When would you use a while loop instead of a for loop?",
          options: [
            "A) When you know the exact number of iterations",
            "B) When you want to loop through an array",
            "C) When you want to execute a block of code multiple times",
            "D) When you want to print output",
          ],
          correctAnswer: "B) When you want to loop through an array",
        },
        {
          id: 11,
          question: "What is the syntax for a do-while loop in C++?",
          options: [
            "A) do { /* code */ } while (condition);",
            "B) while (condition) { /* code */ } do;",
            "C) for (int i = 0; i < 10; i++) { /* code */ }",
            "D) do while (condition) { /* code */ };",
          ],
          correctAnswer: "A) do { /* code */ } while (condition);",
        },
        {
          id: 12,
          question: "In a do-while loop, when is the condition checked?",
          options: [
            "A) Before executing the code block",
            "B) After executing the code block",
            "C) In the middle of the loop body",
            "D) It is not checked",
          ],
          correctAnswer: "B) After executing the code block",
        },
        {
          id: 13,
          question: "Which loop is more suitable for situations where you want to iterate through a container like an array or a list?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) break loop",
          ],
          correctAnswer: "A) for loop",
        },
        {
          id: 14,
          question: "What is the output of the following code snippet?\n\nint i = 0;\nwhile (i < 5) {\n    cout << i << ' ';\n    i++;\n}",
          options: [
            "A) 0 1 2 3 4",
            "B) 1 2 3 4 5",
            "C) 0 1 2 3 4 5",
            "D) Error",
          ],
          correctAnswer: "A) 0 1 2 3 4",
        },
        {
          id: 15,
          question: "Which loop control statement is used to terminate the entire loop prematurely?",
          options: [
            "A) break",
            "B) continue",
            "C) return",
            "D) exit",
          ],
          correctAnswer: "A) break",
        },
        {
          id: 16,
          question: "When is the loop control expression in a for loop evaluated?",
          options: [
            "A) Before each iteration",
            "B) After each iteration",
            "C) In the middle of the loop body",
            "D) It is not evaluated",
          ],
          correctAnswer: "A) Before each iteration",
        },
        {
          id: 17,
          question: "What is the output of the following code snippet?\n\nfor (int i = 0; i < 5; i++) {\n    if (i == 2)\n        break;\n    cout << i << ' ';\n}",
          options: [
            "A) 0 1",
            "B) 0 1 2",
            "C) 0 1 3 4",
            "D) 0 1 3",
          ],
          correctAnswer: "A) 0 1",
        },
        {
          id: 18,
          question: "Which loop control statement is used to skip the current iteration and continue with the next one?",
          options: [
            "A) break",
            "B) continue",
            "C) skip",
            "D) return",
          ],
          correctAnswer: "B) continue",
        },
        {
          id: 19,
          question: "In a do-while loop, the code block is guaranteed to execute at least how many times?",
          options: [
            "A) 0",
            "B) 1",
            "C) 2",
            "D) Infinite times",
          ],
          correctAnswer: "B) 1",
        },
        {
          id: 20,
          question: "What is the output of the following code snippet?\n\nint i = 0;\ndo {\n    cout << i << ' ';\n    i++;\n} while (i < 5);",
          options: [
            "A) 0 1 2 3 4",
            "B) 1 2 3 4 5",
            "C) 0 1 2 3 4 5",
            "D) Error",
          ],
          correctAnswer: "A) 0 1 2 3 4",
        },
        {
          id: 21,
          question: "Which loop control statement is used to exit multiple nested loops?",
          options: [
            "A) break",
            "B) continue",
            "C) exit",
            "D) return",
          ],
          correctAnswer: "A) break",
        },
        {
          id: 22,
          question: "In a while loop, when is the condition checked?",
          options: [
            "A) Before executing the code block",
            "B) After executing the code block",
            "C) In the middle of the loop body",
            "D) It is not checked",
          ],
          correctAnswer: "A) Before executing the code block",
        },
        {
          id: 23,
          question: "What is the output of the following code snippet?\n\nfor (int i = 0; i < 5; i++) {\n    if (i % 2 == 0)\n        continue;\n    cout << i << ' ';\n}",
          options: [
            "A) 1 3",
            "B) 0 2 4",
            "C) 1 3 5",
            "D) 0 1 2 3 4",
          ],
          correctAnswer: "A) 1 3",
        },
        {
          id: 24,
          question: "Which loop is used when you want to execute a block of code based on a condition and then re-evaluate the condition?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) break loop",
          ],
          correctAnswer: "B) while loop",
        },
        {
          id: 25,
          question: "What is the output of the following code snippet?\n\nint i = 5;\nwhile (i > 0) {\n    cout << i << ' ';\n    i--;\n}",
          options: [
            "A) 5 4 3 2 1",
            "B) 1 2 3 4 5",
            "C) 0 1 2 3 4",
            "D) Error",
          ],
          correctAnswer: "A) 5 4 3 2 1",
        },
        {
          id: 26,
          question: "In a do-while loop, when is the condition checked?",
          options: [
            "A) Before executing the code block",
            "B) After executing the code block",
            "C) In the middle of the loop body",
            "D) It is not checked",
          ],
          correctAnswer: "B) After executing the code block",
        },
        {
          id: 27,
          question: "What is the output of the following code snippet?\n\nint i = 0;\ndo {\n    cout << i << ' ';\n    i++;\n} while (i > 5);",
          options: [
            "A) 0",
            "B) 0 1 2 3 4",
            "C) 1 2 3 4 5",
            "D) Error",
          ],
          correctAnswer: "A) 0",
        },
        {
          id: 28,
          question: "Which loop control statement is used to exit the program prematurely?",
          options: [
            "A) break",
            "B) continue",
            "C) exit",
            "D) return",
          ],
          correctAnswer: "C) exit",
        },
        {
          id: 29,
          question: "What is the output of the following code snippet?\n\nfor (int i = 0; i < 5; i++) {\n    for (int j = 0; j < 3; j++) {\n        if (j == 1)\n            break;\n        cout << i << ' ' << j << ' ';\n    }\n}",
          options: [
            "A) 0 0 1 0 2 0 3 0 4 0",
            "B) 0 0 1 0 2 0 3 0 4 0 1 0 2 0 3 0 4 0",
            "C) 0 0 1 0 2 0 3 0 4 0 1 1 2 1 3 1 4 1",
            "D) 0 0 1 1 2 1 3 1 4 1",
          ],
          correctAnswer: "A) 0 0 1 0 2 0 3 0 4 0",
        },
        {
          id: 30,
          question: "Which loop is best suited for situations where you want to perform a task until a certain condition is met, but you're not sure how many iterations are needed?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) break loop",
          ],
          correctAnswer: "B) while loop",
        },
        // Add more questions for subchapter 1.2 as needed
      ],
      "2.3": [
        {
          id: 1,
          question: "What is the purpose of defining functions in C++?",
          options: [
            "A) To store data",
            "B) To organize code and perform tasks",
            "C) To declare variables",
            "D) To print output",
          ],
          correctAnswer: "B) To organize code and perform tasks",
        },
        {
          id: 2,
          question: "In C++, a function can be defined by specifying its:",
          options: [
            "A) Input type",
            "B) Output type",
            "C) Name and Input type",
            "D) Name and Output type",
          ],
          correctAnswer: "D) Name and Output type",
        },
        {
          id: 3,
          question: "What are the two main components of a function declaration in C++?",
          options: [
            "A) Return type and function name",
            "B) Parameters and function body",
            "C) Input type and Output type",
            "D) Data type and function name",
          ],
          correctAnswer: "A) Return type and function name",
        },
        {
          id: 4,
          question: "In a function declaration, what does the return type indicate?",
          options: [
            "A) The type of data the function accepts",
            "B) The type of data the function returns",
            "C) The number of parameters the function has",
            "D) The function's name",
          ],
          correctAnswer: "B) The type of data the function returns",
        },
        {
          id: 5,
          question: "What is a parameter in a function?",
          options: [
            "A) A variable used inside a function",
            "B) A value passed to a function when it's called",
            "C) A type of function",
            "D) A data type in C++",
          ],
          correctAnswer: "B) A value passed to a function when it's called",
        },
        {
          id: 6,
          question: "In a function declaration, where are the parameters specified?",
          options: [
            "A) In the function body",
            "B) In the return statement",
            "C) In the parentheses following the function name",
            "D) In the header file",
          ],
          correctAnswer: "C) In the parentheses following the function name",
        },
        {
          id: 7,
          question: "What happens if a function is called with fewer arguments than specified in its declaration?",
          options: [
            "A) It will cause a compilation error",
            "B) It will automatically generate default values for missing arguments",
            "C) It will ignore the missing arguments",
            "D) It will return an error message",
          ],
          correctAnswer: "A) It will cause a compilation error",
        },
        {
          id: 8,
          question: "In C++, can a function return more than one value?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a member function",
            "D) Only if it's a friend function",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 9,
          question: "What is the purpose of a return statement in a function?",
          options: [
            "A) It specifies the data type of the function",
            "B) It ends the function and optionally returns a value",
            "C) It defines the function's scope",
            "D) It prints a message to the console",
          ],
          correctAnswer: "B) It ends the function and optionally returns a value",
        },
        {
          id: 10,
          question: "What is function scope in C++?",
          options: [
            "A) It refers to the area of code where a function is defined",
            "B) It refers to the area of code where a variable can be accessed",
            "C) It refers to the lifetime of a function",
            "D) It refers to the visibility of a function to other files",
          ],
          correctAnswer: "A) It refers to the area of code where a function is defined",
        },
        {
          id: 11,
          question: "Which of the following is an example of a function prototype?",
          options: [
            "A) int add(int a, int b);",
            "B) int add(int, int);",
            "C) int add(a, b);",
            "D) add(int a, int b);",
          ],
          correctAnswer: "B) int add(int, int);",
        },
        {
          id: 12,
          question: "What is the purpose of a function prototype in C++?",
          options: [
            "A) It defines the function's implementation",
            "B) It declares the function's existence and specifies its signature",
            "C) It specifies the return type of the function",
            "D) It is used for recursion",
          ],
          correctAnswer: "B) It declares the function's existence and specifies its signature",
        },
        {
          id: 13,
          question: "Which keyword is used to indicate that a function does not return any value?",
          options: [
            "A) void",
            "B) null",
            "C) none",
            "D) empty",
          ],
          correctAnswer: "A) void",
        },
        {
          id: 14,
          question: "What is the output of the following function?",
          code: `
  int multiply(int x, int y) {
      return x * y;
  }
  
  int main() {
      int result = multiply(3, 4);
      cout << result;
      return 0;
  }`,
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) 0",
          ],
          correctAnswer: "B) 12",
        },
        {
          id: 15,
          question: "In C++, can a function call itself?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a member function",
            "D) Only if it's a friend function",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 16,
          question: "What is the output of the following code?",
          code: `
  int num = 10;
  
  void printNum() {
      int num = 5;
      cout << num;
  }
  
  int main() {
      printNum();
      return 0;
  }`,
          options: [
            "A) 5",
            "B) 10",
            "C) Compilation error",
            "D) Runtime error",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 17,
          question: "What is the correct way to declare a function that takes no arguments and returns an integer?",
          options: [
            "A) int func();",
            "B) int func(void);",
            "C) void func(int);",
            "D) void func();",
          ],
          correctAnswer: "A) int func();",
        },
        {
          id: 18,
          question: "What is the output of the following code?",
          code: `
  int square(int x) {
      return x * x;
  }
  
  int main() {
      int result = square(2);
      cout << result;
      return 0;
  }`,
          options: [
            "A) 2",
            "B) 4",
            "C) 8",
            "D) 16",
          ],
          correctAnswer: "B) 4",
        },
        {
          id: 19,
          question: "What does the following code demonstrate?",
          code: `
  int globalVar = 10;
  
  void myFunction() {
      int localVar = 5;
      cout << globalVar << " " << localVar;
  }
  
  int main() {
      myFunction();
      return 0;
  }`,
          options: [
            "A) An error will occur due to conflicting variable names",
            "B) It will print '10 5'",
            "C) It will print '5 10'",
            "D) It will print '0 0'",
          ],
          correctAnswer: "B) It will print '10 5'",
        },
        {
          id: 20,
          question: "What is the purpose of the static keyword in a function declaration?",
          options: [
            "A) It indicates that the function is a member of a class",
            "B) It restricts the function's access to the current file",
            "C) It specifies that the function cannot be called by other functions",
            "D) It allows the function to retain its value between calls",
          ],
          correctAnswer: "D) It allows the function to retain its value between calls",
        },
        {
          id: 21,
          question: "What is the output of the following code?",
          code: `
  int add(int a, int b) {
      return a + b;
  }
  
  int main() {
      int result = add(3, 4);
      cout << result;
      return 0;
  }`,
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) 0",
          ],
          correctAnswer: "A) 7",
        },
        {
          id: 22,
          question: "In C++, can two functions have the same name if they have different parameter lists?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if they are in different files",
            "D) Only if they have different return types",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 23,
          question: "What is the purpose of the inline keyword in a function declaration?",
          options: [
            "A) It indicates that the function should be executed only once",
            "B) It suggests the compiler to replace the function call with the function's code",
            "C) It specifies that the function cannot be called recursively",
            "D) It restricts the function's access to the current file",
          ],
          correctAnswer: "B) It suggests the compiler to replace the function call with the function's code",
        },
        {
          id: 24,
          question: "What is the output of the following code?",
          code: `
  int x = 5;
  
  void myFunction(int x) {
      cout << x;
  }
  
  int main() {
      myFunction(10);
      return 0;
  }`,
          options: [
            "A) 5",
            "B) 10",
            "C) Compilation error",
            "D) Runtime error",
          ],
          correctAnswer: "B) 10",
        },
        {
          id: 25,
          question: "What does the const keyword indicate in a function declaration?",
          options: [
            "A) It specifies that the function cannot be modified",
            "B) It indicates that the function is a constant",
            "C) It specifies that the function has a constant return value",
            "D) It prevents the function from having parameters",
          ],
          correctAnswer: "A) It specifies that the function cannot be modified",
        },
        {
          id: 26,
          question: "What is the purpose of a default argument in a function?",
          options: [
            "A) It is a value that is used when no argument is provided",
            "B) It is an argument that has a default value of 0",
            "C) It is a value that is assigned to the return statement",
            "D) It is a value that is used to define the function's scope",
          ],
          correctAnswer: "A) It is a value that is used when no argument is provided",
        },
        {
          id: 27,
          question: "What is the output of the following code?",
          code: `
  int divide(int a, int b = 2) {
      return a / b;
  }
  
  int main() {
      int result = divide(10);
      cout << result;
      return 0;
  }`,
          options: [
            "A) 2",
            "B) 5",
            "C) 10",
            "D) Compilation error",
          ],
          correctAnswer: "B) 5",
        },
        {
          id: 28,
          question: "Which of the following is an example of a recursive function?",
          options: [
            "A) void print(int n)",
            "B) int factorial(int n)",
            "C) float multiply(float a, float b)",
            "D) string reverse(string s)",
          ],
          correctAnswer: "B) int factorial(int n)",
        },
        {
          id: 29,
          question: "What is the purpose of a forward declaration in C++?",
          options: [
            "A) It specifies the return type of a function",
            "B) It declares the existence of a function before it is defined",
            "C) It indicates that a function can call other functions",
            "D) It is used to declare member functions in a class",
          ],
          correctAnswer: "B) It declares the existence of a function before it is defined",
        },
        {
          id: 30,
          question: "What is the output of the following code?",
          code: `
  int num = 10;
  
  void changeNum(int &x) {
      x = 20;
  }
  
  int main() {
      changeNum(num);
      cout << num;
      return 0;
  }`,
          options: [
            "A) 10",
            "B) 20",
            "C) Compilation error",
            "D) Runtime error",
          ],
          correctAnswer: "B) 20",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "2.4": [
        {
          id: 1,
          question: "What is the syntax for an arrow function in JavaScript?",
          options: [
            "A) function() => {}",
            "B) () => {}",
            "C) =>() {}",
            "D) => {}",
          ],
          correctAnswer: "B) () => {}",
        },
        {
          id: 2,
          question: "Arrow functions do not have their own this value. Instead, they inherit it from the ________.",
          options: [
            "A) Parent function",
            "B) Global context",
            "C) Lexical context",
            "D) None of the above",
          ],
          correctAnswer: "C) Lexical context",
        },
        {
          id: 3,
          question: "Which of the following is a valid arrow function that takes two parameters and returns their sum?",
          options: [
            "A) (a, b) => { return a + b; }",
            "B) a, b => a + b",
            "C) function(a, b) { return a + b; }",
            "D) a + b => return;",
          ],
          correctAnswer: "B) a, b => a + b",
        },
        {
          id: 4,
          question: "In an arrow function, if there is only one parameter, you can omit the ________.",
          options: [
            "A) Parentheses",
            "B) Curly braces",
            "C) Arrow (=>) symbol",
            "D) All of the above",
          ],
          correctAnswer: "A) Parentheses",
        },
        {
          id: 5,
          question: "Arrow functions are best suited for ________.",
          options: [
            "A) Methods in objects",
            "B) Callback functions",
            "C) Constructor functions",
            "D) All of the above",
          ],
          correctAnswer: "B) Callback functions",
        },
        {
          id: 6,
          question: "What will be the output of the following code?\n\n```javascript\nconst double = x => x * 2;\nconsole.log(double(5));",
          options: [
            "A) 10",
            "B) 5",
            "C) 25",
            "D) Error",
          ],
          correctAnswer: "A) 10",
        },
        {
          id: 7,
          question: "Which of the following is a key difference between arrow functions and traditional functions in JavaScript?",
          options: [
            "A) Arrow functions have a shorter syntax",
            "B) Arrow functions do not have their own this value",
            "C) Arrow functions cannot be used as constructors",
            "D) All of the above",
          ],
          correctAnswer: "B) Arrow functions do not have their own this value",
        },
        {
          id: 8,
          question: "When should you avoid using arrow functions?",
          options: [
            "A) When you need a constructor function",
            "B) When you need to access arguments",
            "C) When you need a method in an object with its own this context",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 9,
          question: "What will be the output of the following code?\n\n```javascript\nconst obj = {\n  value: 42,\n  getValue: () => this.value\n};\nconsole.log(obj.getValue());",
          options: [
            "A) 42",
            "B) undefined",
            "C) Error",
            "D) 0",
          ],
          correctAnswer: "B) undefined",
        },
        {
          id: 10,
          question: "Which of the following is a valid anonymous function in JavaScript?",
          options: [
            "A) function() { return 1; }",
            "B) () => { return 1; }",
            "C) (function() { return 1; })()",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 11,
          question: "Anonymous functions are also known as ________.",
          options: [
            "A) Arrow functions",
            "B) Named functions",
            "C) Function expressions",
            "D) Function declarations",
          ],
          correctAnswer: "C) Function expressions",
        },
        {
          id: 12,
          question: "Which of the following is true about anonymous functions in JavaScript?",
          options: [
            "A) They can be hoisted",
            "B) They do not have a name",
            "C) They cannot be assigned to variables",
            "D) They cannot be used as callbacks",
          ],
          correctAnswer: "B) They do not have a name",
        },
        {
          id: 13,
          question: "What will be the output of the following code?\n\n```javascript\nconst add = function(x, y) {\n  return x + y;\n};\nconsole.log(add(3, 4));",
          options: [
            "A) 7",
            "B) 12",
            "C) Error",
            "D) undefined",
          ],
          correctAnswer: "A) 7",
        },
        {
          id: 14,
          question: "Which of the following is an example of an anonymous function being immediately invoked?",
          options: [
            "A) (function() {})()",
            "B) (() => {})()",
            "C) (function() {})",
            "D) (() => {})",
          ],
          correctAnswer: "A) (function() {})()",
        },
        {
          id: 15,
          question: "Anonymous functions are commonly used in scenarios where you need a ________.",
          options: [
            "A) Function with no parameters",
            "B) One-time use function",
            "C) Function with a name",
            "D) Recursive function",
          ],
          correctAnswer: "B) One-time use function",
        },
        {
          id: 16,
          question: "What is the purpose of using arrow functions in JavaScript?",
          options: [
            "A) To simplify the syntax for writing functions",
            "B) To have better performance than traditional functions",
            "C) To allow for named functions",
            "D) To create asynchronous functions",
          ],
          correctAnswer: "A) To simplify the syntax for writing functions",
        },
        {
          id: 17,
          question: "Which of the following is a valid use case for an anonymous function?",
          options: [
            "A) Event handlers",
            "B) Object methods",
            "C) Constructor functions",
            "D) All of the above",
          ],
          correctAnswer: "A) Event handlers",
        },
        {
          id: 18,
          question: "What will be the output of the following code?\n\n```javascript\nconst numbers = [1, 2, 3];\nconst doubled = numbers.map(num => num * 2);\nconsole.log(doubled);",
          options: [
            "A) [1, 2, 3]",
            "B) [2, 4, 6]",
            "C) [2, 4, 6, 8]",
            "D) [1, 4, 9]",
          ],
          correctAnswer: "B) [2, 4, 6]",
        },
        {
          id: 19,
          question: "Which of the following statements is true about arrow functions?",
          options: [
            "A) They cannot have a return statement",
            "B) They cannot be used as callback functions",
            "C) They cannot be used as methods in objects",
            "D) They do not have their own this value",
          ],
          correctAnswer: "D) They do not have their own this value",
        },
        {
          id: 20,
          question: "Which of the following is an advantage of using arrow functions?",
          options: [
            "A) They are faster than traditional functions",
            "B) They have a shorter syntax",
            "C) They have access to the arguments object",
            "D) They can be used as constructors",
          ],
          correctAnswer: "B) They have a shorter syntax",
        },
        {
          id: 21,
          question: "What will be the output of the following code?\n\n```javascript\nconst greet = () => {\n  console.log('Hello!');\n};\ngreet();",
          options: [
            "A) 'Hello!'",
            "B) undefined",
            "C) Error",
            "D) null",
          ],
          correctAnswer: "A) 'Hello!'",
        },
        {
          id: 22,
          question: "Which of the following is a key difference between arrow functions and traditional functions in terms of the arguments object?",
          options: [
            "A) Arrow functions do not have access to the arguments object",
            "B) Traditional functions do not have access to the arguments object",
            "C) Both arrow functions and traditional functions have access to the arguments object",
            "D) arguments object is deprecated in arrow functions",
          ],
          correctAnswer: "A) Arrow functions do not have access to the arguments object",
        },
        {
          id: 23,
          question: "What will be the output of the following code?\n\n```javascript\nconst square = (x) => x * x;\nconsole.log(square(3));",
          options: [
            "A) 6",
            "B) 9",
            "C) 12",
            "D) 18",
          ],
          correctAnswer: "B) 9",
        },
        {
          id: 24,
          question: "When should you use a traditional function instead of an arrow function?",
          options: [
            "A) When you need to create a method in an object",
            "B) When you need to define a constructor function",
            "C) When you need to access the arguments object",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 25,
          question: "Which of the following is true about arrow functions and the arguments object?",
          options: [
            "A) Arrow functions do not have an arguments object",
            "B) Arrow functions have access to the arguments object of their parent function",
            "C) Arrow functions have their own arguments object",
            "D) Arrow functions can only use the arguments object if explicitly passed as a parameter",
          ],
          correctAnswer: "A) Arrow functions do not have an arguments object",
        },
        {
          id: 26,
          question: "What will be the output of the following code?\n\n```javascript\nconst numbers = [1, 2, 3];\nconst sum = numbers.reduce((acc, num) => acc + num, 0);\nconsole.log(sum);",
          options: [
            "A) 6",
            "B) 9",
            "C) 10",
            "D) 12",
          ],
          correctAnswer: "A) 6",
        },
        {
          id: 27,
          question: "Which of the following is true about arrow functions and their binding of this?",
          options: [
            "A) Arrow functions have their own this value",
            "B) Arrow functions inherit their this value from the surrounding lexical context",
            "C) Arrow functions always refer to the global this",
            "D) Arrow functions cannot use this",
          ],
          correctAnswer: "B) Arrow functions inherit their this value from the surrounding lexical context",
        },
        {
          id: 28,
          question: "What will be the output of the following code?\n\n```javascript\nconst obj = {\n  value: 42,\n  getValue: function() {\n    return this.value;\n  }\n};\nconsole.log(obj.getValue());",
          options: [
            "A) 42",
            "B) undefined",
            "C) Error",
            "D) 0",
          ],
          correctAnswer: "A) 42",
        },
        {
          id: 29,
          question: "Which of the following scenarios is a valid use case for an arrow function?",
          options: [
            "A) Creating a method in an object",
            "B) Defining a constructor function",
            "C) Using as a callback function inside an event handler",
            "D) All of the above",
          ],
          correctAnswer: "C) Using as a callback function inside an event handler",
        },
        {
          id: 30,
          question: "What will be the output of the following code?\n\n```javascript\nconst greet = (name) => `Hello, ${name}!`;\nconsole.log(greet('John'));",
          options: [
            "A) 'Hello, John!'",
            "B) 'Hello, undefined!'",
            "C) 'Hello, null!'",
            "D) Error",
          ],
          correctAnswer: "A) 'Hello, John!'",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      // Add more subchapters for Chapter 1 as needed
    },
    //chapter 2 ended




    3: {
      // Chapter 2
      "3.1": [
        {
          id: 1,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3];\narr.push(4);\nconsole.log(arr);",
          options: [
            "A) [1, 2, 3, 4]",
            "B) [1, 2, 3]",
            "C) [1, 2, 3, [4]]",
            "D) Error",
          ],
          correctAnswer: "A) [1, 2, 3, 4]",
        },
        {
          id: 2,
          question: "Which method is used to remove the last element from an array?",
          options: [
            "A) shift()",
            "B) pop()",
            "C) slice()",
            "D) splice()",
          ],
          correctAnswer: "B) pop()",
        },
        {
          id: 3,
          question: "What does the slice() method do?",
          options: [
            "A) Adds an element to the end of an array",
            "B) Removes an element from the beginning of an array",
            "C) Creates a new array from a portion of an existing array",
            "D) Sorts the elements of an array",
          ],
          correctAnswer: "C) Creates a new array from a portion of an existing array",
        },
        {
          id: 4,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3];\nlet newArr = arr.slice(1);\nconsole.log(newArr);",
          options: [
            "A) [2, 3]",
            "B) [1, 2]",
            "C) [1, 2, 3]",
            "D) [1]",
          ],
          correctAnswer: "A) [2, 3]",
        },
        {
          id: 5,
          question: "Which method is used to add elements to the beginning of an array?",
          options: [
            "A) push()",
            "B) unshift()",
            "C) shift()",
            "D) add()",
          ],
          correctAnswer: "B) unshift()",
        },
        {
          id: 6,
          question: "What does the splice() method do?",
          options: [
            "A) Removes elements from an array and/or adds new elements",
            "B) Reverses the order of elements in an array",
            "C) Returns the first element that matches a condition",
            "D) Concatenates two arrays",
          ],
          correctAnswer: "A) Removes elements from an array and/or adds new elements",
        },
        {
          id: 7,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3, 4, 5];\narr.splice(2, 2);\nconsole.log(arr);",
          options: [
            "A) [1, 2]",
            "B) [1, 2, 5]",
            "C) [1, 2, 4, 5]",
            "D) [1, 2, 3, 5]",
          ],
          correctAnswer: "C) [1, 2, 4, 5]",
        },
        {
          id: 8,
          question: "How do you access the element at index 3 in an array?",
          options: [
            "A) arr[3]",
            "B) arr(3)",
            "C) arr.getElement(3)",
            "D) arr.getElementAtIndex(3)",
          ],
          correctAnswer: "A) arr[3]",
        },
        {
          id: 9,
          question: "What does the concat() method do?",
          options: [
            "A) Joins two or more arrays and returns a new array",
            "B) Concatenates strings",
            "C) Adds an element to the end of an array",
            "D) Removes the last element from an array",
          ],
          correctAnswer: "A) Joins two or more arrays and returns a new array",
        },
        {
          id: 10,
          question: "Which method is used to iterate over the elements of an array?",
          options: [
            "A) for loop",
            "B) forEach()",
            "C) while loop",
            "D) iterate()",
          ],
          correctAnswer: "B) forEach()",
        },
        {
          id: 11,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3];\narr.forEach((element) => console.log(element * 2));",
          options: [
            "A) 2, 4, 6",
            "B) 1, 2, 3",
            "C) 1, 4, 9",
            "D) 1, 2, 3, 2, 4, 6",
          ],
          correctAnswer: "A) 2, 4, 6",
        },
        {
          id: 12,
          question: "What is the correct way to check if a variable arr is an array?",
          options: [
            "A) if (arr.isArray())",
            "B) if (typeof arr === 'array')",
            "C) if (Array.isArray(arr))",
            "D) if (arr.typeOf('array'))",
          ],
          correctAnswer: "C) if (Array.isArray(arr))",
        },
        {
          id: 13,
          question: "What is the output of the following code?\n\nlet arr1 = [1, 2, 3];\nlet arr2 = arr1;\narr2.push(4);\nconsole.log(arr1);",
          options: [
            "A) [1, 2, 3]",
            "B) [1, 2, 3, 4]",
            "C) [1, 2, 3, [4]]",
            "D) Error",
          ],
          correctAnswer: "B) [1, 2, 3, 4]",
        },
        {
          id: 14,
          question: "Which method is used to find the index of the first occurrence of a specific element in an array?",
          options: [
            "A) indexOf()",
            "B) findIndex()",
            "C) search()",
            "D) find()",
          ],
          correctAnswer: "A) indexOf()",
        },
        {
          id: 15,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3, 4, 5];\nlet newArr = arr.slice(-3);\nconsole.log(newArr);",
          options: [
            "A) [1, 2, 3]",
            "B) [3, 4, 5]",
            "C) [2, 3, 4, 5]",
            "D) [3, 4]",
          ],
          correctAnswer: "B) [3, 4, 5]",
        },
        {
          id: 16,
          question: "How do you remove the first element from an array?",
          options: [
            "A) arr.pop()",
            "B) arr.shift()",
            "C) arr.splice(0, 1)",
            "D) arr.slice(1)",
          ],
          correctAnswer: "B) arr.shift()",
        },
        {
          id: 17,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3, 4];\narr.reverse();\nconsole.log(arr);",
          options: [
            "A) [1, 2, 3, 4]",
            "B) [4, 3, 2, 1]",
            "C) [4, 3, 2]",
            "D) Error",
          ],
          correctAnswer: "B) [4, 3, 2, 1]",
        },
        {
          id: 18,
          question: "How do you find the number of elements in an array?",
          options: [
            "A) arr.count()",
            "B) arr.size()",
            "C) arr.length",
            "D) arr.size",
          ],
          correctAnswer: "C) arr.length",
        },
        {
          id: 19,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3, 4, 5];\nlet newArr = arr.filter(num => num % 2 === 0);\nconsole.log(newArr);",
          options: [
            "A) [1, 3, 5]",
            "B) [2, 4]",
            "C) [2, 4, 6]",
            "D) [1, 2, 3, 4, 5]",
          ],
          correctAnswer: "B) [2, 4]",
        },
        {
          id: 20,
          question: "Which method is used to join all elements of an array into a string?",
          options: [
            "A) join()",
            "B) concat()",
            "C) merge()",
            "D) combine()",
          ],
          correctAnswer: "A) join()",
        },
        {
          id: 21,
          question: "What is the output of the following code?\n\nlet arr = [1, 2, 3];\nlet newArr = arr.map(num => num * 2);\nconsole.log(newArr);",
          options: [
            "A) [1, 2, 3]",
            "B) [2, 4, 6]",
            "C) [2, 4]",
            "D) [1, 4, 9]",
          ],
          correctAnswer: "B) [2, 4, 6]",
        },
        {
          id: 22,
          question: "How do you find the maximum element in an array?",
          options: [
            "A) Math.max(...arr)",
            "B) arr.max()",
            "C) arr.maximum()",
            "D) Math.maximum(arr)",
          ],
          correctAnswer: "A) Math.max(...arr)",
        },
        {
          id: 23,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3, 4];\narr.splice(1, 0, 5);\nconsole.log(arr);",
          options: [
            "A) [1, 2, 3, 4]",
            "B) [1, 5, 2, 3, 4]",
            "C) [1, 5, 2, 5, 3, 4]",
            "D) [1, 5, 4]",
          ],
          correctAnswer: "B) [1, 5, 2, 3, 4]",
        },
        {
          id: 24,
          question: "Which method is used to check if an element exists in an array?",
          options: [
            "A) contains()",
            "B) includes()",
            "C) hasElement()",
            "D) isElementOf()",
          ],
          correctAnswer: "B) includes()",
        },
        {
          id: 25,
          question: "What is the output of the following code?\n\nlet arr = [1, 2, 3, 4, 5];\nlet sum = arr.reduce((total, num) => total + num, 0);\nconsole.log(sum);",
          options: [
            "A) 15",
            "B) 14",
            "C) 10",
            "D) 20",
          ],
          correctAnswer: "A) 15",
        },
        {
          id: 26,
          question: "How do you copy the contents of one array into another array?",
          options: [
            "A) let newArr = arr",
            "B) let newArr = arr.copy()",
            "C) let newArr = arr.slice()",
            "D) let newArr = arr.copyWithin()",
          ],
          correctAnswer: "C) let newArr = arr.slice()",
        },
        {
          id: 27,
          question: "What is the result of the following code?\n\nlet arr = [1, 2, 3];\narr.push([4, 5]);\nconsole.log(arr);",
          options: [
            "A) [1, 2, 3, [4, 5]]",
            "B) [1, 2, 3, 4, 5]",
            "C) [1, 2, 3, 9]",
            "D) Error",
          ],
          correctAnswer: "A) [1, 2, 3, [4, 5]]",
        },
        {
          id: 28,
          question: "Which method is used to sort the elements of an array?",
          options: [
            "A) sort()",
            "B) order()",
            "C) arrange()",
            "D) organize()",
          ],
          correctAnswer: "A) sort()",
        },
        {
          id: 29,
          question: "What is the result of the following code?\n\nlet arr = [3, 1, 2, 4, 5];\narr.sort();\nconsole.log(arr);",
          options: [
            "A) [1, 2, 3, 4, 5]",
            "B) [3, 1, 2, 4, 5]",
            "C) [5, 4, 3, 2, 1]",
            "D) [1, 3, 2, 4, 5]",
          ],
          correctAnswer: "A) [1, 2, 3, 4, 5]",
        },
        {
          id: 30,
          question: "How do you find the index of the last occurrence of a specific element in an array?",
          options: [
            "A) arr.lastIndexOf()",
            "B) arr.findLastIndex()",
            "C) arr.lastIndex()",
            "D) arr.indexLastOf()",
          ],
          correctAnswer: "A) arr.lastIndexOf()",
        },
      ],
      "3.2": [
        {
          id: 1,
          question: "What is the primary purpose of using objects in JavaScript?",
          options: [
            "A) To store and organize data",
            "B) To perform mathematical calculations",
            "C) To control the flow of execution",
            "D) To define functions",
          ],
          correctAnswer: "A) To store and organize data",
        },
        {
          id: 2,
          question: "Which keyword is used to create an empty object in JavaScript?",
          options: [
            "A) object",
            "B) new",
            "C) Object",
            "D) create",
          ],
          correctAnswer: "C) Object",
        },
        {
          id: 3,
          question: "How can you add a property to an existing object in JavaScript?",
          options: [
            "A) Using the addProperty method",
            "B) Using dot notation or bracket notation",
            "C) Using the setProperty function",
            "D) It is not possible to add properties to existing objects",
          ],
          correctAnswer: "B) Using dot notation or bracket notation",
        },
        {
          id: 4,
          question: "Which of the following is a valid way to define a method inside an object?",
          options: [
            "A) function myMethod() {}",
            "B) myMethod: function() {}",
            "C) myMethod => {}",
            "D) method: myMethod() {}",
          ],
          correctAnswer: "B) myMethod: function() {}",
        },
        {
          id: 5,
          question: "What is the purpose of an object constructor in JavaScript?",
          options: [
            "A) To create multiple objects with similar properties and methods",
            "B) To define the structure of an object",
            "C) To initialize object properties",
            "D) To create a blueprint for objects",
          ],
          correctAnswer: "D) To create a blueprint for objects",
        },
        {
          id: 6,
          question: "How do you create an object using a constructor function in JavaScript?",
          options: [
            "A) let newObj = createObject(MyConstructor);",
            "B) let newObj = new MyConstructor();",
            "C) let newObj = Object.create(MyConstructor);",
            "D) let newObj = MyConstructor.create();",
          ],
          correctAnswer: "B) let newObj = new MyConstructor();",
        },
        {
          id: 7,
          question: "What does the prototype property of a constructor function do in JavaScript?",
          options: [
            "A) It defines the initial values of object properties",
            "B) It contains shared properties and methods for all objects created by the constructor",
            "C) It specifies the child objects of a prototype chain",
            "D) It refers to the parent object of a prototype chain",
          ],
          correctAnswer: "B) It contains shared properties and methods for all objects created by the constructor",
        },
        {
          id: 8,
          question: "Which keyword is used to access the prototype of an object in JavaScript?",
          options: [
            "A) prototype",
            "B) __proto__",
            "C) inherit",
            "D) extends",
          ],
          correctAnswer: "B) __proto__",
        },
        {
          id: 9,
          question: "What is the output of the following code?\n\n```javascript\nfunction Person(name) {\n    this.name = name;\n}\n\nlet john = new Person('John');\nconsole.log(john.hasOwnProperty('name'));\n```",
          options: [
            "A) true",
            "B) false",
            "C) ReferenceError",
            "D) undefined",
          ],
          correctAnswer: "A) true",
        },
        {
          id: 10,
          question: "Which method is used to determine if a property exists in an object, including properties in the prototype chain?",
          options: [
            "A) propertyExists()",
            "B) hasOwnProperty()",
            "C) contains()",
            "D) checkProperty()",
          ],
          correctAnswer: "B) hasOwnProperty()",
        },
        {
          id: 11,
          question: "Which syntax is used to define a getter method in an object?",
          options: [
            "A) get myMethod() {}",
            "B) function get myMethod() {}",
            "C) myMethod: get() {}",
            "D) getter myMethod() {}",
          ],
          correctAnswer: "A) get myMethod() {}",
        },
        {
          id: 12,
          question: "Consider the following code:\n```javascript\nfunction Car(make, model) {\n    this.make = make;\n    this.model = model;\n}\n\nCar.prototype.startEngine = function() {\n    return `Starting the ${this.make} ${this.model} engine...`;\n};\n\nlet myCar = new Car('Toyota', 'Camry');\nconsole.log(myCar.startEngine());\n```\nWhat will be printed to the console?",
          options: [
            "A) Starting the Toyota Camry engine...",
            "B) ReferenceError",
            "C) TypeError",
            "D) Starting the engine...",
          ],
          correctAnswer: "A) Starting the Toyota Camry engine...",
        },
        {
          id: 13,
          question: "Which method is used to list all enumerable properties of an object?",
          options: [
            "A) listProperties()",
            "B) getProperties()",
            "C) Object.keys()",
            "D) enumerate()",
          ],
          correctAnswer: "C) Object.keys()",
        },
        {
          id: 14,
          question: "What is the purpose of using the Object.freeze() method in JavaScript?",
          options: [
            "A) To prevent adding new properties to an object",
            "B) To prevent deleting existing properties of an object",
            "C) To prevent modifying the values of existing properties in an object",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 15,
          question: "Which of the following is an example of a built-in JavaScript object?",
          options: [
            "A) myObject",
            "B) Math",
            "C) Person",
            "D) function",
          ],
          correctAnswer: "B) Math",
        },
        {
          id: 16,
          question: "Consider the following code:\n```javascript\nfunction Rectangle(width, height) {\n    this.width = width;\n    this.height = height;\n}\n\nRectangle.prototype.getArea = function() {\n    return this.width * this.height;\n};\n\nlet myRect = new Rectangle(5, 7);\nconsole.log(myRect.getArea());\n```\nWhat will be printed to the console?",
          options: [
            "A) 35",
            "B) ReferenceError",
            "C) TypeError",
            "D) NaN",
          ],
          correctAnswer: "A) 35",
        },
        {
          id: 17,
          question: "How can you check if an object inherits a specific property from its prototype chain?",
          options: [
            "A) Using the hasProperty() method",
            "B) Using the prototypeOf() method",
            "C) Using the Object.getPrototypeOf() method",
            "D) Using the checkInheritance() method",
          ],
          correctAnswer: "C) Using the Object.getPrototypeOf() method",
        },
        {
          id: 18,
          question: "Which method is used to create a shallow copy of an object in JavaScript?",
          options: [
            "A) clone()",
            "B) Object.create()",
            "C) Object.assign()",
            "D) copy()",
          ],
          correctAnswer: "C) Object.assign()",
        },
        {
          id: 19,
          question: "What is the result of the following code?\n\n```javascript\nlet person = {\n    name: 'John',\n    age: 30\n};\n\nlet copy = Object.assign({}, person);\ncopy.name = 'Jane';\n\nconsole.log(person.name);\n```",
          options: [
            "A) John",
            "B) Jane",
            "C) TypeError",
            "D) undefined",
          ],
          correctAnswer: "A) John",
        },
        {
          id: 20,
          question: "Which method is used to remove a property from an object in JavaScript?",
          options: [
            "A) deleteProperty()",
            "B) removeProperty()",
            "C) delete()",
            "D) remove()",
          ],
          correctAnswer: "C) delete()",
        },
        {
          id: 21,
          question: "What is the output of the following code?\n\n```javascript\nlet myObject = {\n    x: 10,\n    y: 20\n};\n\nconsole.log(myObject.hasOwnProperty('toString'));\n```",
          options: [
            "A) true",
            "B) false",
            "C) TypeError",
            "D) undefined",
          ],
          correctAnswer: "B) false",
        },
        {
          id: 22,
          question: "Consider the following code:\n```javascript\nfunction Person(name) {\n    this.name = name;\n}\n\nPerson.prototype.sayHello = function() {\n    return `Hello, my name is ${this.name}.`;\n};\n\nlet john = new Person('John');\nlet jane = new Person('Jane');\n\nconsole.log(john.sayHello());\nconsole.log(jane.sayHello());\n```\nWhat will be printed to the console?",
          options: [
            "A) Hello, my name is John. Hello, my name is Jane.",
            "B) ReferenceError",
            "C) TypeError",
            "D) Hello, my name is .",
          ],
          correctAnswer: "A) Hello, my name is John. Hello, my name is Jane.",
        },
        {
          id: 23,
          question: "What happens if you attempt to add a property to a frozen object using Object.defineProperty()?",
          options: [
            "A) It successfully adds the property.",
            "B) It throws a TypeError.",
            "C) It throws a SyntaxError.",
            "D) It throws a ReferenceError.",
          ],
          correctAnswer: "B) It throws a TypeError.",
        },
        {
          id: 24,
          question: "Consider the following code:\n```javascript\nfunction Shape() {\n    this.color = 'red';\n}\n\nShape.prototype.getColor = function() {\n    return this.color;\n};\n\nfunction Circle(radius) {\n    this.radius = radius;\n}\n\nCircle.prototype = Object.create(Shape.prototype);\n\nlet myCircle = new Circle(5);\nconsole.log(myCircle.getColor());\n```\nWhat will be printed to the console?",
          options: [
            "A) red",
            "B) ReferenceError",
            "C) TypeError",
            "D) undefined",
          ],
          correctAnswer: "A) red",
        },
        {
          id: 25,
          question: "Which method is used to set the prototype of an object in JavaScript?",
          options: [
            "A) setPrototype()",
            "B) __proto__",
            "C) Object.prototype()",
            "D) Object.setPrototypeOf()",
          ],
          correctAnswer: "D) Object.setPrototypeOf()",
        },
        {
          id: 26,
          question: "What is the output of the following code?\n\n```javascript\nlet myObject = {\n    x: 10,\n    y: 20\n};\n\nlet protoObject = Object.getPrototypeOf(myObject);\n\nconsole.log(protoObject === Object.prototype);\n```",
          options: [
            "A) true",
            "B) false",
            "C) TypeError",
            "D) undefined",
          ],
          correctAnswer: "A) true",
        },
        {
          id: 27,
          question: "How can you determine the number of properties in an object?",
          options: [
            "A) Using the countProperties() method",
            "B) Using the Object.keys() method and checking its length",
            "C) Using the getPropertiesCount() function",
            "D) It is not possible to determine the number of properties in an object",
          ],
          correctAnswer: "B) Using the Object.keys() method and checking its length",
        },
        {
          id: 28,
          question: "Consider the following code:\n```javascript\nfunction Animal() {\n    this.sound = 'undefined';\n}\n\nAnimal.prototype.makeSound = function() {\n    return `The animal makes a ${this.sound} sound.`;\n};\n\nfunction Dog() {\n    this.sound = 'bark';\n}\n\nDog.prototype = Object.create(Animal.prototype);\n\nlet myDog = new Dog();\nconsole.log(myDog.makeSound());\n```\nWhat will be printed to the console?",
          options: [
            "A) The animal makes a undefined sound.",
            "B) The animal makes a bark sound.",
            "C) ReferenceError",
            "D) TypeError",
          ],
          correctAnswer: "B) The animal makes a bark sound.",
        },
        {
          id: 29,
          question: "Which method is used to check if a property is enumerable in JavaScript?",
          options: [
            "A) isEnumerable()",
            "B) propertyIsEnumerable()",
            "C) enumerate()",
            "D) hasProperty()",
          ],
          correctAnswer: "B) propertyIsEnumerable()",
        },
        {
          id: 30,
          question: "What is the output of the following code?\n\n```javascript\nlet obj1 = { a: 1, b: 2 };\nlet obj2 = Object.create(obj1);\n\nconsole.log(obj2.a);\n```",
          options: [
            "A) 1",
            "B) 2",
            "C) undefined",
            "D) TypeError",
          ],
          correctAnswer: "A) 1",
        },
        // Add more questions for subchapter 1.2 as needed
      ],
      "3.3": [
        {
          id: 1,
          question: "What does JSON stand for?",
          options: [
            "A) JavaScript Object Notation",
            "B) JavaScript Output Notation",
            "C) Java Serialized Object Notation",
            "D) JavaScript Ordered Notation",
          ],
          correctAnswer: "A) JavaScript Object Notation",
        },
        {
          id: 2,
          question: "Which data types can be represented in JSON?",
          options: [
            "A) String, Number, Boolean, Object, Array, Null",
            "B) String, Integer, Float, Object, Array, Undefined",
            "C) String, Number, Boolean, Object, List, Null",
            "D) String, Integer, Boolean, Dictionary, Array, Null",
          ],
          correctAnswer: "A) String, Number, Boolean, Object, Array, Null",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "In JSON, how is an object denoted?",
          options: ["A) Curly braces {}", "B) Square brackets []", "C) Quotation marks \"\"", "D) Parentheses ()",],
          correctAnswer: "A) Curly braces {}",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "Which of the following is a valid JSON string?",
          options: ["A) {\"name\": \"John\", 'age': 30}", "B) {'name': \"John\", \"age\": 30}", "C) {\"name\": 'John', \"age\": 30}", "D) {'name': 'John', 'age': 30}",],
          correctAnswer: "C) {\"name\": 'John', \"age\": 30}",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "What does JSON.parse() do in JavaScript?",
          options: [
            "A) Converts a JSON string to a JavaScript object",
            "B) Converts a JavaScript object to a JSON string",
            "C) Converts a JavaScript array to a JSON object",
            "D) Converts a JSON object to a JavaScript array",
          ],
          correctAnswer: "A) Converts a JSON string to a JavaScript object",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 6,
          question: "Which method is used to convert a JavaScript object to a JSON string?",
          options: ["A) JSON.stringify()", "B) JSON.parse()", "C) JSON.encode()", "D) JSON.serialize()",],
          correctAnswer: "A) JSON.stringify()",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 7,
          question: "Which of the following is a valid JSON array?",
          options: ["A) [1, 2, 3, \"hello\"]", "B) {1, 2, 3, \"hello\"}", "C) (1, 2, 3, \"hello\")", "D) {1: 1, 2: 2, 3: 3, \"hello\": \"world\"}",],
          correctAnswer: "A) [1, 2, 3, \"hello\"]",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 8,
          question: "What happens if you try to JSON.parse() an invalid JSON string?",
          options: [
            "A) It throws a syntax error",
            "B) It returns null",
            "C) It returns an empty object",
            "D) It converts the string to a JavaScript object",
          ],
          correctAnswer: "A) It throws a syntax error",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 9,
          question: "Which of the following is a valid JSON value?",
          options: ["A) Infinity", "B) NaN", "C) null", "D) undefined",],
          correctAnswer: "C) null",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 10,
          question: "In JSON, how is a string value denoted?",
          options: [
            "A) Enclosed in double quotes \"\"",
            "B) Enclosed in single quotes ''",
            "C) Without any quotes",
            "D) Enclosed in backticks ``",
          ],
          correctAnswer: "A) Enclosed in double quotes \"\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 11,
          question: "What is the purpose of JSON.stringify()'s second argument (replacer function)?",
          options: [
            "A) It allows you to specify which properties to include in the resulting JSON string",
            "B) It specifies the number of spaces for indentation",
            "C) It converts special characters to escape sequences",
            "D) It converts the JSON string to a JavaScript object",
          ],
          correctAnswer: "A) It allows you to specify which properties to include in the resulting JSON string",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 12,
          question: "Which of the following is a valid JSON representation of a date?",
          options: [
            "\"2023-09-13T12:00:00Z\"",
            "2023-09-13 12:00:00",
            "2023-09-13T12:00:00+00:00",
            "\"13th September 2023\"",
          ],
          correctAnswer: "\"2023-09-13T12:00:00Z\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 13,
          question: "What is the result of parsing the following JSON string: '{\"name\": \"John\", \"age\": 30}'?",
          options: ["A) An object with properties name and age", "B) A string", "C) An array", "D) An error is thrown",],
          correctAnswer: "A) An object with properties name and age",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 14,
          question: "Which of the following statements is true about JSON?",
          options: [
            "A) JSON supports comments",
            "B) JSON keys must be unique within an object",
            "C) JSON can represent functions",
            "D) JSON supports complex data structures like graphs",
          ],
          correctAnswer: "B) JSON keys must be unique within an object",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 15,
          question: "How do you access a value inside a nested object in JavaScript?",
          options: ["A) Using dot notation (.)", "B) Using square bracket notation ([])", "C) Using curly braces {}", "D) Using parentheses ()",],
          correctAnswer: "A) Using dot notation (.)",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 16,
          question: "Which of the following is an example of valid JSON syntax?",
          options: [
            "A) {name: \"John\", age: 30}",
            "B) {\"name\": 'John', 'age': 30}",
            "C) {\"name\": \"John\", \"age\": 30}",
            "D) {name = \"John\", age = 30}",
          ],
          correctAnswer: "C) {\"name\": \"John\", \"age\": 30}",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 17,
          question: "What is the result of JSON.stringify([1, undefined, 3])?",
          options: [
            "A) \"[1, undefined, 3]\"",
            "B) \"[1, null, 3]\"",
            "C) \"[1, 3]\"",
            "D) \"[1, 'undefined', 3]\"",
          ],
          correctAnswer: "C) \"[1, 3]\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 18,
          question: "Which of the following is a valid JSON number?",
          options: ["A) 3.14e2", "B) 0x10", "C) '42'", "D) \"forty-two\"",],
          correctAnswer: "A) 3.14e2",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 19,
          question: "What is the result of JSON.stringify(true)?",
          options: ["A) \"true\"", "B) true", "C) \"True\"", "D) 1",],
          correctAnswer: "A) \"true\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 20,
          question: "How can you represent a null value in JSON?",
          options: ["A) null", "B) undefined", "C) \"null\"", "D) 'null'",],
          correctAnswer: "A) null",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 21,
          question: "Which of the following is a valid JSON comment?",
          options: [
            "A) // This is a comment",
            "B) /* This is a comment */",
            "C) <!-- This is a comment -->",
            "D) 'This is a comment'",
          ],
          correctAnswer: "B) /* This is a comment */",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 22,
          question: "What does JSON.stringify() do if it encounters a circular reference in the object?",
          options: [
            "A) Throws an error",
            "B) Ignores the circular reference",
            "C) Converts the circular reference to null",
            "D) Converts the circular reference to a string",
          ],
          correctAnswer: "A) Throws an error",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 23,
          question: "Which of the following is a valid JSON string representing an empty object?",
          options: ["A) \"{}\"", "B) \"[]\"", "C) \"null\"", "D) \"undefined\"",],
          correctAnswer: "A) \"{}\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 24,
          question: "How do you access the first element of a JSON array in JavaScript?",
          options: ["A) arr[0]", "B) arr.first", "C) arr[1]", "D) arr.first()",],
          correctAnswer: "A) arr[0]",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 25,
          question: "What is the result of JSON.parse('null')?",
          options: ["A) null", "B) \"null\"", "C) undefined", "D) Throws an error",],
          correctAnswer: "A) null",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 26,
          question: "Which method is used to check if a property exists in a JavaScript object?",
          options: ["A) hasOwnProperty()", "B) propertyExists()", "C) isPropertyPresent()", "D) containsProperty()",],
          correctAnswer: "A) hasOwnProperty()",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 27,
          question: "Which of the following is a valid JSON representation of a function?",
          options: [
            "A) JSON doesn't support functions",
            "B) {\"func\": function() { return 42; }}",
            "C) {\"func\": \"function() { return 42; }\"}",
            "D) {\"func\": () => 42}",
          ],
          correctAnswer: "A) JSON doesn't support functions",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 28,
          question: "What is the result of JSON.parse('{\"key\": \"value\"}')?",
          options: ["A) An object with property \"key\" and value \"value\"", "B) A string", "C) An array", "D) An error is thrown",],
          correctAnswer: "A) An object with property \"key\" and value \"value\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 29,
          question: "Which of the following is a valid JSON representation of a multiline string?",
          options: [
            "A) JSON doesn't support multiline strings",
            "B) \"First line \\n Second line\"",
            "C) \"First line \\n Second line\"",
            "D) \"First line \\ Second line\"",
          ],
          correctAnswer: "B) \"First line \\n Second line\"",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 30,
          question: "What is the result of JSON.stringify(NaN)?",
          options: ["A) Throws an error", "B) \"NaN\"", "C) null", "D) undefined",],
          correctAnswer: "B) \"NaN\"",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 3 ended




    4: {
      // Chapter 2
      "4.1": [
        {
          id: 1,
          question: "What does DOM stand for?",
          options: [
            "A) Document Object Model",
            "B) Document Orientation Model",
            "C) Dynamic Object Manipulation",
            "D) Document Order Model",
          ],
          correctAnswer: "A) Document Object Model",
        },
        {
          id: 2,
          question: "Which programming language is commonly used to interact with the DOM?",
          options: [
            "A) Java",
            "B) JavaScript",
            "C) Python",
            "D) C++",
          ],
          correctAnswer: "B) JavaScript",
        },
        {
          id: 3,
          question: "In which format is the DOM represented?",
          options: [
            "A) HTML",
            "B) JSON",
            "C) XML",
            "D) TXT",
          ],
          correctAnswer: "C) XML",
        },
        {
          id: 4,
          question: "What does the DOM provide a structured representation of?",
          options: [
            "A) The web page's content",
            "B) The web page's design",
            "C) The web browser's settings",
            "D) The web server's data",
          ],
          correctAnswer: "A) The web page's content",
        },
        {
          id: 5,
          question: "How can you access an element with the ID 'myElement' using JavaScript?",
          options: [
            "A) document.getElement('myElement')",
            "B) document.querySelector('#myElement')",
            "C) document.getElementById('myElement')",
            "D) document.selectElement('#myElement')",
          ],
          correctAnswer: "C) document.getElementById('myElement')",
        },
        {
          id: 6,
          question: "Which method is used to select multiple elements with the same class?",
          options: [
            "A) querySelectorAll",
            "B) getElementsByClassName",
            "C) querySelector",
            "D) getElementById",
          ],
          correctAnswer: "B) getElementsByClassName",
        },
        {
          id: 7,
          question: "What does the textContent property allow you to do?",
          options: [
            "A) Modify the text content of an element",
            "B) Access the parent element",
            "C) Change the font size of an element",
            "D) Retrieve the inner HTML of an element",
          ],
          correctAnswer: "A) Modify the text content of an element",
        },
        {
          id: 8,
          question: "Which of the following methods is used to create a new HTML element?",
          options: [
            "A) createElement",
            "B) newElement",
            "C) makeElement",
            "D) createNode",
          ],
          correctAnswer: "A) createElement",
        },
        {
          id: 9,
          question: "How do you append a child element to a parent element using JavaScript?",
          options: [
            "A) appendChild",
            "B) insertElement",
            "C) addNode",
            "D) appendNode",
          ],
          correctAnswer: "A) appendChild",
        },
        {
          id: 10,
          question: "Which property is used to check if an element has a specific class?",
          options: [
            "A) hasClass",
            "B) classList",
            "C) hasClassName",
            "D) classListContains",
          ],
          correctAnswer: "B) classList",
        },
        {
          id: 11,
          question: "What is the result of document.body.nodeName?",
          options: [
            "A) BODY",
            "B) HTML",
            "C) DOCUMENT",
            "D) NODE",
          ],
          correctAnswer: "A) BODY",
        },
        {
          id: 12,
          question: "How can you check if an element contains a specific child element?",
          options: [
            "A) element.contains(childElement)",
            "B) element.includes(childElement)",
            "C) element.hasChild(childElement)",
            "D) element.containsChild(childElement)",
          ],
          correctAnswer: "A) element.contains(childElement)",
        },
        {
          id: 13,
          question: "Which property is used to get the value of an input element?",
          options: [
            "A) value",
            "B) nodeValue",
            "C) textContent",
            "D) innerText",
          ],
          correctAnswer: "A) value",
        },
        {
          id: 14,
          question: "What does the querySelector method return?",
          options: [
            "A) The first element that matches a specified CSS selector",
            "B) All elements that match a specified CSS selector",
            "C) The parent element of the specified element",
            "D) The last element that matches a specified CSS selector",
          ],
          correctAnswer: "A) The first element that matches a specified CSS selector",
        },
        {
          id: 15,
          question: "How can you change the CSS style of an element using JavaScript?",
          options: [
            "A) element.style.cssText",
            "B) element.css",
            "C) element.styles",
            "D) element.style",
          ],
          correctAnswer: "D) element.style",
        },
        {
          id: 16,
          question: "Which method is used to remove an element from the DOM?",
          options: [
            "A) element.removeChild()",
            "B) element.remove()",
            "C) element.delete()",
            "D) element.hide()",
          ],
          correctAnswer: "B) element.remove()",
        },
        {
          id: 17,
          question: "What is the result of document.title?",
          options: [
            "A) The title of the web page",
            "B) The URL of the web page",
            "C) The content of the first heading element",
            "D) The name of the document file",
          ],
          correctAnswer: "A) The title of the web page",
        },
        {
          id: 18,
          question: "How can you set the attribute 'src' of an image element using JavaScript?",
          options: [
            "A) element.setAttribute('src', 'newSource.jpg')",
            "B) element.src = 'newSource.jpg'",
            "C) element.srcAttribute('newSource.jpg')",
            "D) element.setSource('newSource.jpg')",
          ],
          correctAnswer: "B) element.src = 'newSource.jpg'",
        },
        {
          id: 19,
          question: "What does the innerHTML property allow you to do?",
          options: [
            "A) Modify the HTML content of an element",
            "B) Access the inner text content of an element",
            "C) Retrieve the outer HTML of an element",
            "D) Change the font size of an element",
          ],
          correctAnswer: "A) Modify the HTML content of an element",
        },
        {
          id: 20,
          question: "How can you prevent the default behavior of an event in JavaScript?",
          options: [
            "A) event.preventDefault()",
            "B) event.stopPropagation()",
            "C) event.cancelEvent()",
            "D) event.pauseEvent()",
          ],
          correctAnswer: "A) event.preventDefault()",
        },
        {
          id: 21,
          question: "Which method is used to add an event listener to an element in JavaScript?",
          options: [
            "A) addEventListener",
            "B) attachEvent",
            "C) addEvent",
            "D) setEventListener",
          ],
          correctAnswer: "A) addEventListener",
        },
        {
          id: 22,
          question: "What is the result of event.target in an event handler function?",
          options: [
            "A) The element that triggered the event",
            "B) The parent element of the event target",
            "C) The document object",
            "D) The window object",
          ],
          correctAnswer: "A) The element that triggered the event",
        },
        {
          id: 23,
          question: "How can you check if a checkbox input is checked using JavaScript?",
          options: [
            "A) checkboxInput.checked",
            "B) checkboxInput.isChecked",
            "C) checkboxInput.ischecked",
            "D) checkboxInput.isSelected",
          ],
          correctAnswer: "A) checkboxInput.checked",
        },
        {
          id: 24,
          question: "Which property is used to access the value of a selected option in a dropdown menu?",
          options: [
            "A) selectedOption.value",
            "B) dropdownMenu.selectedValue",
            "C) dropdownMenu.value",
            "D) selectedOption.text",
          ],
          correctAnswer: "C) dropdownMenu.value",
        },
        {
          id: 25,
          question: "How can you dynamically create a new option in a dropdown menu using JavaScript?",
          options: [
            "A) document.createElement('option')",
            "B) document.createOption('option')",
            "C) document.addOption('option')",
            "D) document.appendOption('option')",
          ],
          correctAnswer: "A) document.createElement('option')",
        },
        {
          id: 26,
          question: "What does the parentNode property allow you to access?",
          options: [
            "A) The parent element of the current element",
            "B) The child elements of the current element",
            "C) The sibling elements of the current element",
            "D) The next element in the DOM",
          ],
          correctAnswer: "A) The parent element of the current element",
        },
        {
          id: 27,
          question: "How can you check if an element has a specific attribute using JavaScript?",
          options: [
            "A) element.hasAttribute('attribute')",
            "B) element.attributeExists('attribute')",
            "C) element.containsAttribute('attribute')",
            "D) element.checkAttribute('attribute')",
          ],
          correctAnswer: "A) element.hasAttribute('attribute')",
        },
        {
          id: 28,
          question: "Which property is used to get the number of child elements of an element?",
          options: [
            "A) childCount",
            "B) childElements",
            "C) children",
            "D) childElementCount",
          ],
          correctAnswer: "D) childElementCount",
        },
        {
          id: 29,
          question: "How can you change the text color of an element using JavaScript?",
          options: [
            "A) element.textColor",
            "B) element.color",
            "C) element.style.color",
            "D) element.textStyle.color",
          ],
          correctAnswer: "C) element.style.color",
        },
        {
          id: 30,
          question: "How can you remove a specific class from an element using JavaScript?",
          options: [
            "A) element.removeClass('className')",
            "B) element.classList.remove('className')",
            "C) element.remove('className')",
            "D) element.removeClassName('className')",
          ],
          correctAnswer: "B) element.classList.remove('className')",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "4.2": [
        {
          id: 1,
          question: "What is the purpose of an event listener in JavaScript?",
          options: [
            "A) To trigger an event",
            "B) To respond to an event",
            "C) To prevent an event",
            "D) To create an event",
          ],
          correctAnswer: "B) To respond to an event",
        },
        {
          id: 2,
          question: "Which of the following is an example of an event type in JavaScript?",
          options: [
            "A) click",
            "B) function",
            "C) variable",
            "D) loop",
          ],
          correctAnswer: "A) click",
        },
        {
          id: 3,
          question: "Which method is used to stop the propagation of an event in JavaScript?",
          options: [
            "A) stopEvent()",
            "B) stopPropagation()",
            "C) preventDefault()",
            "D) cancelEvent()",
          ],
          correctAnswer: "B) stopPropagation()",
        },
        {
          id: 4,
          question: "Which event type is triggered when a form is submitted?",
          options: [
            "A) submit",
            "B) click",
            "C) keyup",
            "D) change",
          ],
          correctAnswer: "A) submit",
        },
        {
          id: 5,
          question: "In JavaScript, which event type is triggered when a key on the keyboard is released?",
          options: [
            "A) keydown",
            "B) keyup",
            "C) keypress",
            "D) keystroke",
          ],
          correctAnswer: "B) keyup",
        },
        {
          id: 6,
          question: "What is the result of event bubbling in JavaScript?",
          options: [
            "A) The event propagates from the target element to its ancestors",
            "B) The event propagates from the ancestors to the target element",
            "C) The event is canceled",
            "D) The event is ignored",
          ],
          correctAnswer: "A) The event propagates from the target element to its ancestors",
        },
        {
          id: 7,
          question: "Which method can be used to prevent the default behavior of an event in JavaScript?",
          options: [
            "A) preventDefault()",
            "B) stopPropagation()",
            "C) cancelEvent()",
            "D) defaultPrevented()",
          ],
          correctAnswer: "A) preventDefault()",
        },
        {
          id: 8,
          question: "What is the correct way to attach an event listener to an element with the id 'myButton' in JavaScript?",
          options: [
            "A) document.getElement('myButton').addEventListener('click', myFunction);",
            "B) document.getElementById('myButton').addEventListener('click', myFunction);",
            "C) document.selectElement('myButton').addEventListener('click', myFunction);",
            "D) document.querySelector('#myButton').addEventListener('click', myFunction);",
          ],
          correctAnswer: "B) document.getElementById('myButton').addEventListener('click', myFunction);",
        },
        {
          id: 9,
          question: "Which event type is triggered when a user hovers over an element in JavaScript?",
          options: [
            "A) hover",
            "B) mouseover",
            "C) mouseenter",
            "D) onhover",
          ],
          correctAnswer: "B) mouseover",
        },
        {
          id: 10,
          question: "What does the event.target property refer to in JavaScript?",
          options: [
            "A) The element that triggered the event",
            "B) The parent element of the target element",
            "C) The last clicked element",
            "D) The event itself",
          ],
          correctAnswer: "A) The element that triggered the event",
        },
        {
          id: 11,
          question: "Which event type is triggered when an element loses focus in JavaScript?",
          options: [
            "A) blur",
            "B) focus",
            "C) focusout",
            "D) losefocus",
          ],
          correctAnswer: "A) blur",
        },
        {
          id: 12,
          question: "What is the purpose of using event delegation in JavaScript?",
          options: [
            "A) To manually trigger events",
            "B) To handle events on dynamically created elements",
            "C) To prevent event propagation",
            "D) To remove event listeners",
          ],
          correctAnswer: "B) To handle events on dynamically created elements",
        },
        {
          id: 13,
          question: "In JavaScript, which method is used to remove an event listener?",
          options: [
            "A) removeEventListener()",
            "B) deleteEventListener()",
            "C) detachEventListener()",
            "D) unbindEventListener()",
          ],
          correctAnswer: "A) removeEventListener()",
        },
        {
          id: 14,
          question: "Which event type is triggered when the user scrolls an element in JavaScript?",
          options: [
            "A) scroll",
            "B) scrolltop",
            "C) scrolldown",
            "D) onscroll",
          ],
          correctAnswer: "A) scroll",
        },
        {
          id: 15,
          question: "What is the result of event capturing in JavaScript?",
          options: [
            "A) The event propagates from the target element to its ancestors",
            "B) The event propagates from the ancestors to the target element",
            "C) The event is canceled",
            "D) The event is ignored",
          ],
          correctAnswer: "B) The event propagates from the ancestors to the target element",
        },
        {
          id: 16,
          question: "Which event type is triggered when the value of an input field changes in JavaScript?",
          options: [
            "A) change",
            "B) input",
            "C) valuechange",
            "D) update",
          ],
          correctAnswer: "B) input",
        },
        {
          id: 17,
          question: "How can you prevent an event from bubbling up the DOM tree in JavaScript?",
          options: [
            "A) Using stopPropagation()",
            "B) Using preventDefault()",
            "C) Using cancelEvent()",
            "D) Using stopEvent()",
          ],
          correctAnswer: "A) Using stopPropagation()",
        },
        {
          id: 18,
          question: "Which event type is triggered when the user double-clicks an element in JavaScript?",
          options: [
            "A) doubleclick",
            "B) click",
            "C) dblclick",
            "D) ondblclick",
          ],
          correctAnswer: "C) dblclick",
        },
        {
          id: 19,
          question: "What is the purpose of using event.preventDefault() in JavaScript?",
          options: [
            "A) To stop an event from propagating",
            "B) To cancel the default behavior of an event",
            "C) To remove an event listener",
            "D) To trigger an event",
          ],
          correctAnswer: "B) To cancel the default behavior of an event",
        },
        {
          id: 20,
          question: "Which event type is triggered when the user presses a key on the keyboard in JavaScript?",
          options: [
            "A) keypress",
            "B) keydown",
            "C) keyup",
            "D) presskey",
          ],
          correctAnswer: "B) keydown",
        },
        {
          id: 21,
          question: "How can you add an event listener to multiple elements with the class 'myElement' in JavaScript?",
          options: [
            "A) document.getElements('.myElement').addEventListener('click', myFunction);",
            "B) document.querySelector('.myElement').addEventListener('click', myFunction);",
            "C) document.getElementsByClassName('myElement').addEventListener('click', myFunction);",
            "D) document.querySelectorAll('.myElement').forEach(el => el.addEventListener('click', myFunction));",
          ],
          correctAnswer: "D) document.querySelectorAll('.myElement').forEach(el => el.addEventListener('click', myFunction));",
        },
        {
          id: 22,
          question: "Which event type is triggered when an element gains focus in JavaScript?",
          options: [
            "A) focus",
            "B) blur",
            "C) focusin",
            "D) gainfocus",
          ],
          correctAnswer: "A) focus",
        },
        {
          id: 23,
          question: "What is the purpose of using event.stopPropagation() in JavaScript?",
          options: [
            "A) To stop an event from propagating",
            "B) To cancel the default behavior of an event",
            "C) To remove an event listener",
            "D) To trigger an event",
          ],
          correctAnswer: "A) To stop an event from propagating",
        },
        {
          id: 24,
          question: "Which event type is triggered when the user right-clicks an element in JavaScript?",
          options: [
            "A) rightclick",
            "B) contextmenu",
            "C) click",
            "D) oncontextmenu",
          ],
          correctAnswer: "B) contextmenu",
        },
        {
          id: 25,
          question: "How can you prevent a form from being submitted in JavaScript?",
          options: [
            "A) Using stopPropagation()",
            "B) Using preventDefault()",
            "C) Using cancelEvent()",
            "D) Using stopEvent()",
          ],
          correctAnswer: "B) Using preventDefault()",
        },
        {
          id: 26,
          question: "In JavaScript, which method is used to trigger an event manually?",
          options: [
            "A) triggerEvent()",
            "B) dispatchEvent()",
            "C) fireEvent()",
            "D) emitEvent()",
          ],
          correctAnswer: "B) dispatchEvent()",
        },
        {
          id: 27,
          question: "What is the correct syntax to attach an event listener to an element with the class 'myElement' in JavaScript?",
          options: [
            "A) document.getElement('.myElement').addEventListener('click', myFunction);",
            "B) document.querySelector('.myElement').addEventListener('click', myFunction);",
            "C) document.getElementsByClassName('myElement').addEventListener('click', myFunction);",
            "D) document.querySelectorAll('.myElement').forEach(el => el.addEventListener('click', myFunction));",
          ],
          correctAnswer: "B) document.querySelector('.myElement').addEventListener('click', myFunction);",
        },
        {
          id: 28,
          question: "Which event type is triggered when the user presses and releases a key on the keyboard in JavaScript?",
          options: [
            "A) keypress",
            "B) keyup",
            "C) keydown",
            "D) presskey",
          ],
          correctAnswer: "A) keypress",
        },
        {
          id: 29,
          question: "What is the purpose of using event.stopPropagation() and event.preventDefault() together in JavaScript?",
          options: [
            "A) To stop an event from propagating and cancel its default behavior",
            "B) To trigger an event manually",
            "C) To remove an event listener",
            "D) To select an element",
          ],
          correctAnswer: "A) To stop an event from propagating and cancel its default behavior",
        },
        {
          id: 30,
          question: "How can you remove an event listener using a named function in JavaScript?",
          options: [
            "A) element.removeEventListener('click', myFunction);",
            "B) element.removeEvent('click', myFunction);",
            "C) element.removeEventHandler('click', myFunction);",
            "D) element.off('click', myFunction);",
          ],
          correctAnswer: "A) element.removeEventListener('click', myFunction);",
        },
        // Add more questions for subchapter 1.2 as needed
      ],
      "4.3": [
        {
          id: 1,
          question: "Which property allows you to change the text content of an element?",
          options: [
            "A) textContent",
            "B) innerHTML",
            "C) innerText",
            "D) contentText",
          ],
          correctAnswer: "C) innerText",
        },
        {
          id: 2,
          question: "What property can be used to change both the HTML structure and text content of an element?",
          options: [
            "A) textContent",
            "B) innerHTML",
            "C) innerText",
            "D) contentText",
          ],
          correctAnswer: "B) innerHTML",
        },
        {
          id: 3,
          question: "Which method is used to create a new HTML element in JavaScript?",
          options: [
            "A) createElement",
            "B) createNode",
            "C) appendChild",
            "D) addElement",
          ],
          correctAnswer: "A) createElement",
        },
        {
          id: 4,
          question: "How would you add a new paragraph element with the text 'Hello' inside a div with the id 'container'?",
          options: [
            "A) document.getElementById('container').appendChild('<p>Hello</p>');",
            "B) var p = document.createElement('p'); p.innerText = 'Hello'; document.getElementById('container').appendChild(p);",
            "C) document.getElementById('container').createNode('<p>Hello</p>');",
            "D) document.getElementById('container').innerNode('<p>Hello</p>');",
          ],
          correctAnswer: "B) var p = document.createElement('p'); p.innerText = 'Hello'; document.getElementById('container').appendChild(p);",
        },
        {
          id: 5,
          question: "Which method is used to remove an element from the DOM?",
          options: [
            "A) removeChild",
            "B) deleteElement",
            "C) removeNode",
            "D) eraseElement",
          ],
          correctAnswer: "A) removeChild",
        },
        {
          id: 6,
          question: "What is the correct way to set the class attribute of an element using JavaScript?",
          options: [
            "A) element.class = 'new-class';",
            "B) element.className = 'new-class';",
            "C) element.classname = 'new-class';",
            "D) element.setClass('new-class');",
          ],
          correctAnswer: "B) element.className = 'new-class';",
        },
        {
          id: 7,
          question: "Which property allows you to get or set the HTML content, including tags, of an element?",
          options: [
            "A) innerHTML",
            "B) outerHTML",
            "C) contentHTML",
            "D) tagContent",
          ],
          correctAnswer: "A) innerHTML",
        },
        {
          id: 8,
          question: "How would you replace the content of an element with the id 'myElement' with the text 'New Content'?",
          options: [
            "A) document.getElementById('myElement').innerHTML = 'New Content';",
            "B) document.getElementById('myElement').innerText = 'New Content';",
            "C) document.getElementById('myElement').replaceWith('New Content');",
            "D) document.getElementById('myElement').textContent = 'New Content';",
          ],
          correctAnswer: "A) document.getElementById('myElement').innerHTML = 'New Content';",
        },
        {
          id: 9,
          question: "What does the appendChild method do?",
          options: [
            "A) Adds a new child element to the beginning of the parent element.",
            "B) Adds a new child element to the end of the parent element.",
            "C) Removes a child element from the parent element.",
            "D) Replaces the parent element with the child element.",
          ],
          correctAnswer: "B) Adds a new child element to the end of the parent element.",
        },
        {
          id: 10,
          question: "Which method can be used to insert a new element before an existing element?",
          options: [
            "A) insertBefore",
            "B) insertAfter",
            "C) appendChild",
            "D) addElementBefore",
          ],
          correctAnswer: "A) insertBefore",
        },
        {
          id: 11,
          question: "What is the correct way to create a new list item element in JavaScript?",
          options: [
            "A) document.createElement('li');",
            "B) document.createElement('list-item');",
            "C) document.createNode('li');",
            "D) document.createListItem();",
          ],
          correctAnswer: "A) document.createElement('li');",
        },
        {
          id: 12,
          question: "How would you remove all child elements from a parent element with the id 'myList'?",
          options: [
            "A) document.getElementById('myList').clearChildren();",
            "B) document.getElementById('myList').removeAllChildren();",
            "C) while (document.getElementById('myList').firstChild) { document.getElementById('myList').removeChild(document.getElementById('myList').firstChild); }",
            "D) document.getElementById('myList').empty();",
          ],
          correctAnswer: "C) while (document.getElementById('myList').firstChild) { document.getElementById('myList').removeChild(document.getElementById('myList').firstChild); }",
        },
        {
          id: 13,
          question: "Which property is used to get the HTML content, including tags, of an element?",
          options: [
            "A) outerHTML",
            "B) innerHTML",
            "C) contentHTML",
            "D) tagContent",
          ],
          correctAnswer: "A) outerHTML",
        },
        {
          id: 14,
          question: "What is the result of document.getElementById('myElement').outerHTML?",
          options: [
            "A) The HTML content inside the element with id 'myElement'.",
            "B) The HTML content inside the element with id 'myElement' along with the element itself.",
            "C) The HTML content outside the element with id 'myElement'.",
            "D) The HTML content of the parent element of 'myElement'.",
          ],
          correctAnswer: "B) The HTML content inside the element with id 'myElement' along with the element itself.",
        },
        {
          id: 15,
          question: "How would you add a new option to a select element with the id 'mySelect'?",
          options: [
            "A) var option = document.createElement('option'); option.value = 'new'; option.text = 'New Option'; document.getElementById('mySelect').add(option);",
            "B) document.getElementById('mySelect').addOption('New Option', 'new');",
            "C) document.getElementById('mySelect').createOption('New Option', 'new');",
            "D) var option = document.createOption('New Option', 'new'); document.getElementById('mySelect').appendChild(option);",
          ],
          correctAnswer: "A) var option = document.createElement('option'); option.value = 'new'; option.text = 'New Option'; document.getElementById('mySelect').add(option);",
        },
        {
          id: 16,
          question: "What is the purpose of the insertAdjacentHTML() method?",
          options: [
            "A) To add a new child element to an existing parent element.",
            "B) To insert HTML content at a specified position relative to the element.",
            "C) To replace the content of an element with new HTML content.",
            "D) To append new HTML content to the end of a document.",
          ],
          correctAnswer: "B) To insert HTML content at a specified position relative to the element.",
        },
        {
          id: 17,
          question: "Which property is used to get the text content of an element, without any HTML tags?",
          options: [
            "A) innerText",
            "B) textContent",
            "C) contentText",
            "D) tagText",
          ],
          correctAnswer: "B) textContent",
        },
        {
          id: 18,
          question: "How would you change the text content of all elements with the class 'myClass'?",
          options: [
            "A) document.getElementsByClassName('myClass').innerText = 'New Text';",
            "B) for (var i = 0; i < document.getElementsByClassName('myClass').length; i++) { document.getElementsByClassName('myClass')[i].innerText = 'New Text'; }",
            "C) document.getElementsByClassName('myClass').textContent = 'New Text';",
            "D) document.getElementsByClassName('myClass').innerHTML = 'New Text';",
          ],
          correctAnswer: "B) for (var i = 0; i < document.getElementsByClassName('myClass').length; i++) { document.getElementsByClassName('myClass')[i].innerText = 'New Text'; }",
        },
        {
          id: 19,
          question: "What is the correct way to remove the first child element from a parent element with the id 'myElement'?",
          options: [
            "A) document.getElementById('myElement').removeFirst();",
            "B) document.getElementById('myElement').firstChild.remove();",
            "C) document.getElementById('myElement').removeChild(document.getElementById('myElement').firstChild);",
            "D) document.getElementById('myElement').deleteFirst();",
          ],
          correctAnswer: "C) document.getElementById('myElement').removeChild(document.getElementById('myElement').firstChild);",
        },
        {
          id: 20,
          question: "How would you add a new div element with the class 'newDiv' inside the body of the document?",
          options: [
            "A) document.createElement('div').className = 'newDiv'; document.body.appendChild(div);",
            "B) var div = document.createElement('div'); div.className = 'newDiv'; document.body.appendChild(div);",
            "C) document.createElement('div').class = 'newDiv'; document.body.append(div);",
            "D) document.createElement('div').class = 'newDiv'; document.body.appendChild(div);",
          ],
          correctAnswer: "B) var div = document.createElement('div'); div.className = 'newDiv'; document.body.appendChild(div);",
        },
        {
          id: 21,
          question: "What is the result of document.createElement('span').tagName?",
          options: [
            "A) 'div'",
            "B) 'span'",
            "C) 'element'",
            "D) 'tag'",
          ],
          correctAnswer: "B) 'span'",
        },
        {
          id: 22,
          question: "How would you change the HTML content of an element with the id 'myElement' to '<strong>Bold Text</strong>'?",
          options: [
            "A) document.getElementById('myElement').innerText = '<strong>Bold Text</strong>';",
            "B) document.getElementById('myElement').innerHTML = '<strong>Bold Text</strong>';",
            "C) document.getElementById('myElement').textContent = '<strong>Bold Text</strong>';",
            "D) document.getElementById('myElement').innerHtml = '<strong>Bold Text</strong>';",
          ],
          correctAnswer: "B) document.getElementById('myElement').innerHTML = '<strong>Bold Text</strong>';",
        },
        {
          id: 23,
          question: "What is the purpose of the cloneNode() method?",
          options: [
            "A) To create a copy of an element.",
            "B) To remove an element from the DOM.",
            "C) To replace an element with another element.",
            "D) To move an element to a different position in the DOM.",
          ],
          correctAnswer: "A) To create a copy of an element.",
        },
        {
          id: 24,
          question: "How would you insert a new element after an existing element with the id 'existingElement'?",
          options: [
            "A) document.getElementById('existingElement').insertAfter(newElement);",
            "B) var newElement = document.createElement('div'); document.getElementById('existingElement').parentElement.appendChild(newElement);",
            "C) document.getElementById('existingElement').appendChild(newElement);",
            "D) document.getElementById('existingElement').insertAdjacentElement('afterend', newElement);",
          ],
          correctAnswer: "D) document.getElementById('existingElement').insertAdjacentElement('afterend', newElement);",
        },
        {
          id: 25,
          question: "What is the correct way to add a class 'active' to an element with the id 'myElement' using JavaScript?",
          options: [
            "A) document.getElementById('myElement').addClass('active');",
            "B) document.getElementById('myElement').className += ' active';",
            "C) document.getElementById('myElement').classList.add('active');",
            "D) document.getElementById('myElement').class = 'active';",
          ],
          correctAnswer: "C) document.getElementById('myElement').classList.add('active');",
        },
        {
          id: 26,
          question: "How would you remove a specific child element at index 2 from a parent element with the id 'myList'?",
          options: [
            "A) document.getElementById('myList').removeChild(document.getElementById('myList').childNodes[2]);",
            "B) document.getElementById('myList').removeChild(document.getElementById('myList').children[2]);",
            "C) document.getElementById('myList').removeChild(document.getElementById('myList').childNodes[1]);",
            "D) document.getElementById('myList').removeChild(document.getElementById('myList').elements[2]);",
          ],
          correctAnswer: "B) document.getElementById('myList').removeChild(document.getElementById('myList').children[2]);",
        },
        {
          id: 27,
          question: "How would you set the href attribute of an anchor element with the class 'myLink' to 'https://www.example.com'?",
          options: [
            "A) document.querySelector('.myLink').href = 'https://www.example.com';",
            "B) document.getElementsByClassName('myLink')[0].href = 'https://www.example.com';",
            "C) document.getElementById('myLink').href = 'https://www.example.com';",
            "D) document.querySelector('a.myLink').href = 'https://www.example.com';",
          ],
          correctAnswer: "A) document.querySelector('.myLink').href = 'https://www.example.com';",
        },
        {
          id: 28,
          question: "What is the purpose of the replaceChild() method?",
          options: [
            "A) To replace a child element with another element.",
            "B) To remove a child element from the DOM.",
            "C) To insert a new child element.",
            "D) To create a copy of a child element.",
          ],
          correctAnswer: "A) To replace a child element with another element.",
        },
        {
          id: 29,
          question: "How would you change the background color of a div element with the class 'myDiv' to red using JavaScript?",
          options: [
            "A) document.querySelector('.myDiv').style.backgroundColor = 'red';",
            "B) document.getElementsByClassName('myDiv')[0].style.backgroundColor = 'red';",
            "C) document.getElementById('myDiv').style.backgroundColor = 'red';",
            "D) document.querySelector('div.myDiv').style.backgroundColor = 'red';",
          ],
          correctAnswer: "A) document.querySelector('.myDiv').style.backgroundColor = 'red';",
        },
        {
          id: 30,
          question: "What is the correct way to create a new text node in JavaScript?",
          options: [
            "A) document.createTextNode('New Text');",
            "B) document.createElement('text').innerText = 'New Text';",
            "C) document.createTextElement('New Text');",
            "D) document.newTextNode('New Text');",
          ],
          correctAnswer: "A) document.createTextNode('New Text');",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 4 ended






    5: {
      // Chapter 5
      "5.1": [
        {
          id: 1,
          question: "What is a callback function in JavaScript?",
          options: [
            "A) A function that is called after a delay",
            "B) A function that is passed as an argument to another function and is executed after that function has completed",
            "C) A function that returns a value",
            "D) A function that executes immediately upon declaration",
          ],
          correctAnswer: "B) A function that is passed as an argument to another function and is executed after that function has completed",
        },
        {
          id: 2,
          question: "Which of the following is a real-life scenario where callback functions are commonly used in JavaScript?",
          options: [
            "A) Event handling",
            "B) Loop iterations",
            "C) String manipulation",
            "D) Arithmetic operations",
          ],
          correctAnswer: "A) Event handling",
        },
        {
          id: 3,
          question: "In JavaScript, can a callback function be synchronous?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 4,
          question: "Consider the following code:\n\n```javascript\nfunction greet(name, callback) {\n  console.log(`Hello, ${name}!`);\n  callback();\n}\nfunction sayGoodbye() {\n  console.log('Goodbye!');\n}\ngreet('John', sayGoodbye);\n``` \nWhat will be the output?",
          options: [
            "A) Hello, John! Goodbye!",
            "B) Hello, John!",
            "C) Goodbye! Hello, John!",
            "D) Goodbye! Hello, John! Goodbye!",
          ],
          correctAnswer: "A) Hello, John! Goodbye!",
        },
        {
          id: 5,
          question: "Which of the following statements about higher-order functions is true?",
          options: [
            "A) They are functions that take a callback as an argument",
            "B) They are functions that return a value",
            "C) They are functions that can only be called once",
            "D) They are functions that execute immediately upon declaration",
          ],
          correctAnswer: "A) They are functions that take a callback as an argument",
        },
        {
          id: 6,
          question: "What is the purpose of using callback functions in asynchronous JavaScript code?",
          options: [
            "A) To execute code sequentially",
            "B) To handle events and asynchronous operations",
            "C) To generate random numbers",
            "D) To perform mathematical calculations",
          ],
          correctAnswer: "B) To handle events and asynchronous operations",
        },
        {
          id: 7,
          question: "Consider the following code:\n\n```javascript\nfunction performTask(callback) {\n  setTimeout(function() {\n    console.log('Task complete');\n    callback();\n  }, 2000);\n}\nperformTask(function() {\n  console.log('Callback executed');\n});\n``` \nWhat will be the output?",
          options: [
            "A) Task complete",
            "B) Callback executed",
            "C) Task complete Callback executed",
            "D) Callback executed Task complete",
          ],
          correctAnswer: "C) Task complete Callback executed",
        },
        {
          id: 8,
          question: "Which of the following methods is used to remove an event listener in JavaScript?",
          options: [
            "A) addEventListener",
            "B) removeEventListener",
            "C) removeEvent",
            "D) onRemove",
          ],
          correctAnswer: "B) removeEventListener",
        },
        {
          id: 9,
          question: "What is a potential issue with using multiple nested callback functions, also known as 'callback hell'?",
          options: [
            "A) It can lead to inefficient code and reduced readability",
            "B) It always causes errors",
            "C) It improves code organization",
            "D) It prevents errors from occurring",
          ],
          correctAnswer: "A) It can lead to inefficient code and reduced readability",
        },
        {
          id: 10,
          question: "In JavaScript, can a function be both a higher-order function and a callback function?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 11,
          question: "Consider the following code:\n\n```javascript\nfunction calculate(a, b, operation) {\n  return operation(a, b);\n}\nfunction add(x, y) {\n  return x + y;\n}\nlet result = calculate(3, 4, add);\n``` \nWhat will be the value of result?",
          options: [
            "A) 7",
            "B) 12",
            "C) 34",
            "D) Error",
          ],
          correctAnswer: "A) 7",
        },
        {
          id: 12,
          question: "What is the purpose of the setInterval function in JavaScript?",
          options: [
            "A) It is used to create an interval between function calls",
            "B) It is used to execute a function after a specified time interval",
            "C) It is used to clear a timer set with setTimeout",
            "D) It is used to set the date and time",
          ],
          correctAnswer: "A) It is used to create an interval between function calls",
        },
        {
          id: 13,
          question: "Consider the following code:\n\n```javascript\nfunction fetchData(url, callback) {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => callback(null, data))\n    .catch(error => callback(error, null));\n}\n``` \nWhat is the purpose of the callback parameter in the fetchData function?",
          options: [
            "A) To return a value",
            "B) To handle asynchronous operations",
            "C) To provide an error message",
            "D) To perform mathematical calculations",
          ],
          correctAnswer: "B) To handle asynchronous operations",
        },
        {
          id: 14,
          question: "Which of the following is true about arrow functions in JavaScript when used as callback functions?",
          options: [
            "A) They have their own this context",
            "B) They cannot be used as callback functions",
            "C) They cannot take any arguments",
            "D) They always return undefined",
          ],
          correctAnswer: "A) They have their own this context",
        },
        {
          id: 15,
          question: "Consider the following code:\n\n```javascript\nlet numbers = [1, 2, 3, 4, 5];\nlet doubled = numbers.map(function(num) {\n  return num * 2;\n});\n``` \nHow will the doubled array look after execution?",
          options: [
            "A) [2, 4, 6, 8, 10]",
            "B) [1, 4, 9, 16, 25]",
            "C) [2, 3, 4, 5, 6]",
            "D) [2, 4, 8, 16, 32]",
          ],
          correctAnswer: "A) [2, 4, 6, 8, 10]",
        },
        {
          id: 16,
          question: "In JavaScript, can a callback function have its own callback?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 17,
          question: "Consider the following code:\n\n```javascript\nfunction fetchUserData(callback) {\n  setTimeout(function() {\n    let user = { name: 'John Doe', age: 30 };\n    callback(user);\n  }, 1000);\n}\n``` \nHow would you call the fetchUserData function and log the user's name to the console?",
          options: [
            "A) fetchUserData(function(user) {\n  console.log(user.name);\n});",
            "B) fetchUserData(function(data) {\n  console.log(data.name);\n});",
            "C) fetchUserData(user => console.log(user.name));",
            "D) let user = fetchUserData();\nconsole.log(user.name);",
          ],
          correctAnswer: "A) fetchUserData(function(user) {\n  console.log(user.name);\n});",
        },
        {
          id: 18,
          question: "Which of the following methods is used to execute a function only once after a specified delay?",
          options: [
            "A) setInterval",
            "B) clearInterval",
            "C) setTimeout",
            "D) clearTimeout",
          ],
          correctAnswer: "C) setTimeout",
        },
        {
          id: 19,
          question: "Consider the following code:\n\n```javascript\nfunction processNumbers(numbers, callback) {\n  let processed = numbers.map(callback);\n  return processed;\n}\nlet numbers = [1, 2, 3, 4, 5];\nlet result = processNumbers(numbers, function(num) {\n  return num * num;\n});\n``` \nWhat will be the value of result?",
          options: [
            "A) [1, 4, 9, 16, 25]",
            "B) [2, 4, 6, 8, 10]",
            "C) [2, 3, 4, 5, 6]",
            "D) [2, 4, 8, 16, 32]",
          ],
          correctAnswer: "A) [1, 4, 9, 16, 25]",
        },
        {
          id: 20,
          question: "In JavaScript, which method is used to prevent the default behavior of an event?",
          options: [
            "A) preventDefault",
            "B) stopPropagation",
            "C) stopImmediatePropagation",
            "D) return false",
          ],
          correctAnswer: "A) preventDefault",
        },
        {
          id: 21,
          question: "Consider the following code:\n\n```javascript\nfunction fetchData(url, successCallback, errorCallback) {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => successCallback(data))\n    .catch(error => errorCallback(error));\n}\n``` \nHow would you handle the success and error cases when calling the fetchData function?",
          options: [
            "A) fetchData(\n  'https://api.example.com/data',\n  function(data) {\n    console.log('Success:', data);\n  },\n  function(error) {\n    console.error('Error:', error);\n  }\n);",
            "B) fetchData('https://api.example.com/data', successCallback, errorCallback);",
            "C) fetchData('https://api.example.com/data').then(successCallback).catch(errorCallback);",
            "D) fetchData('https://api.example.com/data', successCallback).catch(errorCallback);",
          ],
          correctAnswer: "A) fetchData(\n  'https://api.example.com/data',\n  function(data) {\n    console.log('Success:', data);\n  },\n  function(error) {\n    console.error('Error:', error);\n  }\n);",
        },
        {
          id: 22,
          question: "What is the purpose of the return statement in a callback function?",
          options: [
            "A) To end the execution of the program",
            "B) To return a value to the calling function",
            "C) To prevent the callback from executing",
            "D) To cause a syntax error",
          ],
          correctAnswer: "B) To return a value to the calling function",
        },
        {
          id: 23,
          question: "Consider the following code:\n\n```javascript\nfunction processArray(arr, callback) {\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    result.push(callback(arr[i]));\n  }\n  return result;\n}\nlet numbers = [1, 2, 3, 4, 5];\nlet squared = processArray(numbers, function(num) {\n  return num * num;\n});\n``` \nWhat will be the value of squared?",
          options: [
            "A) [1, 4, 9, 16, 25]",
            "B) [2, 4, 6, 8, 10]",
            "C) [2, 3, 4, 5, 6]",
            "D) [2, 4, 8, 16, 32]",
          ],
          correctAnswer: "A) [1, 4, 9, 16, 25]",
        },
        {
          id: 24,
          question: "In JavaScript, what does the forEach method do?",
          options: [
            "A) It creates a new array with the results of calling a provided function on every element in the calling array.",
            "B) It executes a provided function once for each array element.",
            "C) It filters elements in an array based on a provided condition.",
            "D) It sorts the elements of an array in place and returns the sorted array.",
          ],
          correctAnswer: "B) It executes a provided function once for each array element.",
        },
        {
          id: 25,
          question: "Consider the following code:\n\n```javascript\nfunction fetchUserData(callback) {\n  setTimeout(function() {\n    let user = { name: 'Jane Doe', age: 25 };\n    callback(user);\n  }, 1000);\n}\n``` \nHow would you call the fetchUserData function and log the user's age to the console?",
          options: [
            "A) fetchUserData(function(user) {\n  console.log(user.age);\n});",
            "B) fetchUserData(function(data) {\n  console.log(data.age);\n});",
            "C) fetchUserData(user => console.log(user.age));",
            "D) let user = fetchUserData();\nconsole.log(user.age);",
          ],
          correctAnswer: "A) fetchUserData(function(user) {\n  console.log(user.age);\n});",
        },
        {
          id: 26,
          question: "Which of the following methods is used to add an event listener in JavaScript?",
          options: [
            "A) addEventListener",
            "B) removeEventListener",
            "C) addEvent",
            "D) onAdd",
          ],
          correctAnswer: "A) addEventListener",
        },
        {
          id: 27,
          question: "Let numbers = [1, 2, 3, 4, 5];\nlet sum = numbers.reduce(function(accumulator, currentValue) {\n  return accumulator + currentValue;\n}, 0);\nWhat will be the value of sum?",
          options: [
            "A) 15",
            "B) 10",
            "C) 5",
            "D) 25",
          ],
          correctAnswer: "A) 15",
        },
        {
          id: 28,
          question: "In JavaScript, can a callback function have its own parameters?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 29,
          question: "Consider the following code:\n\n```javascript\nfunction processString(str, callback) {\n  let result = callback(str);\n  return result;\n}\nlet inputString = 'Hello, World!';\nlet reversed = processString(inputString, function(str) {\n  return str.split('').reverse().join('');\n});\n``` \nWhat will be the value of reversed?",
          options: [
            "A) '!dlroW ,olleH'",
            "B) 'Hello, World!'",
            "C) 'dlroW ,olleH!'",
            "D) 'World, Hello!'",
          ],
          correctAnswer: "A) '!dlroW ,olleH'",
        },
        {
          id: 30,
          question: "What is the purpose of the bind method in JavaScript?",
          options: [
            "A) It is used to bind a function to a specific context",
            "B) It is used to create a new array with the results of calling a provided function on every element in the calling array.",
            "C) It is used to execute a provided function once for each array element.",
            "D) It is used to filter elements in an array based on a provided condition.",
          ],
          correctAnswer: "A) It is used to bind a function to a specific context",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "5.2": [
        {
          id: 1,
          question: "What is a Promise in JavaScript?",
          options: [
            "A) A function that immediately resolves",
            "B) A placeholder for a value that may not be available yet",
            "C) A built-in JavaScript data type",
            "D) None of the above",
          ],
          correctAnswer: "B) A placeholder for a value that may not be available yet",
        },
        {
          id: 2,
          question: "Which keyword is used to create a new Promise in JavaScript?",
          options: [
            "A) new",
            "B) Promise",
            "C) create",
            "D) initialize",
          ],
          correctAnswer: "B) Promise",
        },
        {
          id: 3,
          question: "When is the resolve function called in a Promise?",
          options: [
            "A) When the Promise is rejected",
            "B) When the Promise is fulfilled",
            "C) When an error occurs",
            "D) It's never called",
          ],
          correctAnswer: "B) When the Promise is fulfilled",
        },
        {
          id: 4,
          question: "What is the purpose of the catch method in a Promise chain?",
          options: [
            "A) To handle errors that occur in the Promise chain",
            "B) To reject the Promise immediately",
            "C) To fulfill the Promise",
            "D) None of the above",
          ],
          correctAnswer: "A) To handle errors that occur in the Promise chain",
        },
        {
          id: 5,
          question: "How do you handle multiple asynchronous operations with Promises?",
          options: [
            "A) Using callbacks",
            "B) Using Promise.all()",
            "C) Using loops",
            "D) None of the above",
          ],
          correctAnswer: "B) Using Promise.all()",
        },
        {
          id: 6,
          question: "Which method is used to chain Promises together?",
          options: [
            "A) connect",
            "B) chain",
            "C) then",
            "D) link",
          ],
          correctAnswer: "C) then",
        },
        {
          id: 7,
          question: "In a Promise chain, what does the then method return?",
          options: [
            "A) Another Promise",
            "B) A function",
            "C) A value",
            "D) None of the above",
          ],
          correctAnswer: "A) Another Promise",
        },
        {
          id: 8,
          question: "What is the purpose of the finally method in a Promise chain?",
          options: [
            "A) It is used to handle exceptions",
            "B) It is always executed regardless of the Promise's state",
            "C) It is used to fulfill the Promise",
            "D) None of the above",
          ],
          correctAnswer: "B) It is always executed regardless of the Promise's state",
        },
        {
          id: 9,
          question: "How do you create a rejected Promise?",
          options: [
            "A) new Promise.resolve()",
            "B) new Promise.reject()",
            "C) new Promise()",
            "D) None of the above",
          ],
          correctAnswer: "B) new Promise.reject()",
        },
        {
          id: 10,
          question: "Which method is used to handle Promise rejections?",
          options: [
            "A) reject",
            "B) catch",
            "C) error",
            "D) None of the above",
          ],
          correctAnswer: "B) catch",
        },
        {
          id: 11,
          question: "What is the result of the following Promise chain?",
          options: [
            "A) 6",
            "B) 8",
            "C) Done",
            "D) None of the above",
          ],
          correctAnswer: "A) 6",
        },
        {
          id: 12,
          question: "How can you convert a callback-based function to return a Promise?",
          options: [
            "A) Wrap it in a try-catch block",
            "B) Use the Promise.resolve() method",
            "C) Use the new Promise() constructor",
            "D) None of the above",
          ],
          correctAnswer: "C) Use the new Promise() constructor",
        },
        {
          id: 13,
          question: "Which method is used to race multiple Promises and return the first one that resolves or rejects?",
          options: [
            "A) Promise.all()",
            "B) Promise.race()",
            "C) Promise.any()",
            "D) None of the above",
          ],
          correctAnswer: "B) Promise.race()",
        },
        {
          id: 14,
          question: "What happens if you call both resolve and reject in a Promise executor function?",
          options: [
            "A) The last one called takes precedence",
            "B) An error is thrown",
            "C) The Promise is immediately fulfilled",
            "D) None of the above",
          ],
          correctAnswer: "A) The last one called takes precedence",
        },
        {
          id: 15,
          question: "How do you pass data to the catch block in a Promise chain?",
          options: [
            "A) By returning a value from the catch block",
            "B) By passing an argument to the reject method",
            "C) It is not possible to pass data to the catch block",
            "D) None of the above",
          ],
          correctAnswer: "B) By passing an argument to the reject method",
        },
        {
          id: 16,
          question: "Which method is used to handle multiple Promises that may or may not reject?",
          options: [
            "A) Promise.some()",
            "B) Promise.any()",
            "C) Promise.every()",
            "D) None of the above",
          ],
          correctAnswer: "B) Promise.any()",
        },
        {
          id: 17,
          question: "What is the purpose of the Promise.resolve() method?",
          options: [
            "A) To create a new resolved Promise",
            "B) To reject an existing Promise",
            "C) To handle errors in a Promise chain",
            "D) None of the above",
          ],
          correctAnswer: "A) To create a new resolved Promise",
        },
        {
          id: 18,
          question: "How can you wait for all Promises in an array to settle (either fulfill or reject)?",
          options: [
            "A) Using Promise.allSettled()",
            "B) Using Promise.race()",
            "C) Using Promise.any()",
            "D) None of the above",
          ],
          correctAnswer: "A) Using Promise.allSettled()",
        },
        {
          id: 19,
          question: "What is the purpose of the Promise.reject() method?",
          options: [
            "A) To create a new rejected Promise",
            "B) To fulfill an existing Promise",
            "C) To catch errors in a Promise chain",
            "D) None of the above",
          ],
          correctAnswer: "A) To create a new rejected Promise",
        },
        {
          id: 20,
          question: "How can you create a resolved Promise that returns a specific value?",
          options: [
            "A) Promise.done(value)",
            "B) Promise.resolve(value)",
            "C) Promise.return(value)",
            "D) None of the above",
          ],
          correctAnswer: "B) Promise.resolve(value)",
        },
        {
          id: 21,
          question: "What will be the output of the following code?",
          options: [
            "A) Success",
            "B) End",
            "C) Success, End",
            "D) None of the above",
          ],
          correctAnswer: "B) End",
        },
        {
          id: 22,
          question: "Which method is used to handle Promises in a more readable and synchronous-like manner?",
          options: [
            "A) async/await",
            "B) Promise.sync()",
            "C) then/catch",
            "D) None of the above",
          ],
          correctAnswer: "A) async/await",
        },
        {
          id: 23,
          question: "How do you handle errors in an async/await function?",
          options: [
            "A) Using try-catch blocks",
            "B) Using the finally method",
            "C) Using the catch method",
            "D) None of the above",
          ],
          correctAnswer: "A) Using try-catch blocks",
        },
        {
          id: 24,
          question: "When using async/await, what does the await keyword do?",
          options: [
            "A) It suspends the execution until the Promise is settled",
            "B) It rejects the Promise immediately",
            "C) It fulfills the Promise immediately",
            "D) None of the above",
          ],
          correctAnswer: "A) It suspends the execution until the Promise is settled",
        },
        {
          id: 25,
          question: "What is the purpose of using Promise.all()?",
          options: [
            "A) To wait for multiple Promises to fulfill or reject",
            "B) To race multiple Promises and return the first one that settles",
            "C) To handle Promises sequentially",
            "D) None of the above",
          ],
          correctAnswer: "A) To wait for multiple Promises to fulfill or reject",
        },
        {
          id: 26,
          question: "What is a potential drawback of chaining too many Promises?",
          options: [
            "A) It can lead to callback hell",
            "B) It may result in a memory leak",
            "C) It is not possible to chain too many Promises",
            "D) None of the above",
          ],
          correctAnswer: "A) It can lead to callback hell",
        },
        {
          id: 27,
          question: "How do you handle errors in a chained Promise using catch?",
          options: [
            "A) By chaining catch at the end of the chain",
            "B) By using try-catch blocks inside the chain",
            "C) By using the reject method",
            "D) None of the above",
          ],
          correctAnswer: "A) By chaining catch at the end of the chain",
        },
        {
          id: 28,
          question: "What is the purpose of using Promise.allSettled()?",
          options: [
            "A) To wait for all Promises in an array to settle",
            "B) To wait for at least one Promise to settle",
            "C) To handle errors in a Promise chain",
            "D) None of the above",
          ],
          correctAnswer: "A) To wait for all Promises in an array to settle",
        },
        {
          id: 29,
          question: "When is it appropriate to use Promise.race()?",
          options: [
            "A) When you want to wait for all Promises to settle",
            "B) When you want to wait for the fastest settling Promise",
            "C) When you want to handle errors in a Promise chain",
            "D) None of the above",
          ],
          correctAnswer: "B) When you want to wait for the fastest settling Promise",
        },
        {
          id: 30,
          question: "Which method is used to handle Promises that may resolve or reject at different times?",
          options: [
            "A) Promise.some()",
            "B) Promise.any()",
            "C) Promise.race()",
            "D) None of the above",
          ],
          correctAnswer: "B) Promise.any()",
        },
        // Add more questions for subchapter 1.2 as needed
      ],

      "5.3": [
        {
          id: 1,
          question: "What is the purpose of Async/Await in JavaScript?",
          options: [
            "A) To make asynchronous code look more like synchronous code",
            "B) To make synchronous code look more like asynchronous code",
            "C) To remove the need for callbacks in asynchronous code",
            "D) None of the above",
          ],
          correctAnswer: "A) To make asynchronous code look more like synchronous code",
        },
        {
          id: 2,
          question: "Which keyword is used to define an asynchronous function in JavaScript?",
          options: [
            "A) async",
            "B) await",
            "C) promise",
            "D) async function",
          ],
          correctAnswer: "D) async function",
        },
        {
          id: 3,
          question: "In an asynchronous function, what keyword is used to pause execution until a promise is resolved?",
          options: [
            "A) async",
            "B) await",
            "C) pause",
            "D) resume",
          ],
          correctAnswer: "B) await",
        },
        {
          id: 4,
          question: "What does an asynchronous function return?",
          options: [
            "A) A resolved promise",
            "B) A rejected promise",
            "C) An asynchronous function always returns undefined",
            "D) A value wrapped in a promise",
          ],
          correctAnswer: "D) A value wrapped in a promise",
        },
        {
          id: 5,
          question: "Which of the following statements is true about error handling in Async/Await?",
          options: [
            "A) Errors in Async/Await are automatically caught by try-catch blocks",
            "B) Errors in Async/Await must be handled using a catch block after the await expression",
            "C) Errors in Async/Await are automatically caught by the JavaScript engine",
            "D) Async/Await does not support error handling",
          ],
          correctAnswer: "A) Errors in Async/Await are automatically caught by try-catch blocks",
        },
        {
          id: 6,
          question: "What happens if a promise is rejected inside an async function without proper error handling?",
          options: [
            "A) The program crashes",
            "B) The error is automatically caught by the JavaScript engine",
            "C) It will result in an unhandled promise rejection error",
            "D) None of the above",
          ],
          correctAnswer: "C) It will result in an unhandled promise rejection error",
        },
        {
          id: 7,
          question: "Which of the following is the correct way to handle errors in an async function using try-catch?",
          options: [
            "A) try {\n    // code that may throw an error\n} catch (error) {\n    // handle the error\n}",
            "B) try {\n    // code that may throw an error\n} finally {\n    // handle the error\n}",
            "C) try {\n    // code that may throw an error\n} catch {\n    // handle the error\n}",
            "D) try {\n    // code that may throw an error\n} catch (e) {\n    // handle the error\n}",
          ],
          correctAnswer: "A) try {\n    // code that may throw an error\n} catch (error) {\n    // handle the error\n}",
        },
        {
          id: 8,
          question: "Which keyword is used to reject a promise inside an async function?",
          options: [
            "A) reject",
            "B) throw",
            "C) return",
            "D) resolve",
          ],
          correctAnswer: "B) throw",
        },
        {
          id: 9,
          question: "In an async function, how do you handle multiple promises concurrently and wait for all of them to settle?",
          options: [
            "A) Using Promise.all()",
            "B) Using async/await with a for loop",
            "C) Using Promise.race()",
            "D) Using async/await with a while loop",
          ],
          correctAnswer: "A) Using Promise.all()",
        },
        {
          id: 10,
          question: "Which of the following statements is true about the event loop in JavaScript?",
          options: [
            "A) It is responsible for handling asynchronous code execution",
            "B) It is a synchronous mechanism in JavaScript",
            "C) It is used to control the flow of a program",
            "D) It is not related to asynchronous programming",
          ],
          correctAnswer: "A) It is responsible for handling asynchronous code execution",
        },
        {
          id: 11,
          question: " Consider the following code:\n\n```javascript\nasync function getData() {\n    const response = await fetch('https://api.example.com/data');\n    return response.json();\n}\n``` What does this code do?",
          options: [
            "A) It sends an HTTP GET request to 'https://api.example.com/data' and returns the JSON response",
            "B) It defines an async function that returns a promise which resolves to JSON data from the API",
            "C) It defines a synchronous function that fetches JSON data from 'https://api.example.com/data'",
            "D) It is invalid JavaScript code",
          ],
          correctAnswer: "B) It defines an async function that returns a promise which resolves to JSON data from the API",
        },
        {
          id: 12,
          question: " What is the purpose of using the await keyword before a promise in an async function?",
          options: [
            "A) To pause the execution of the function until the promise is resolved or rejected",
            "B) To force the promise to immediately resolve",
            "C) To return the promise without waiting for it to settle",
            "D) None of the above",
          ],
          correctAnswer: "A) To pause the execution of the function until the promise is resolved or rejected",
        },
        {
          id: 13,
          question: " Consider the following code:\n\n```javascript\nasync function fetchData() {\n    const data = await getData();\n    return data;\n}\n``` What is the role of the function getData() in this code?",
          options: [
            "A) It is an asynchronous function that fetches data from an API",
            "B) It is a synchronous function that processes data",
            "C) It is not defined in the code",
            "D) It is a callback function",
          ],
          correctAnswer: "A) It is an asynchronous function that fetches data from an API",
        },
        {
          id: 14,
          question: " Which of the following statements is true about the execution order in an async function?",
          options: [
            "A) The code after an await statement will always execute before the promise is settled",
            "B) The code after an await statement will execute after the promise is settled",
            "C) The code after an await statement will never execute",
            "D) It is unpredictable and depends on the specific scenario",
          ],
          correctAnswer: "B) The code after an await statement will execute after the promise is settled",
        },
        {
          id: 15,
          question: " What does the following code snippet do?\n\n```javascript\nasync function example() {\n    throw new Error('Something went wrong');\n}\n```",
          options: [
            "A) It defines an async function that always throws an error",
            "B) It defines an async function that returns a rejected promise with an error",
            "C) It defines a synchronous function that returns a resolved promise with an error object",
            "D) It is invalid JavaScript code",
          ],
          correctAnswer: "B) It defines an async function that returns a rejected promise with an error",
        },
        {
          id: 16,
          question: " How do you handle errors in a chain of asynchronous functions using Async/Await?",
          options: [
            "A) By using multiple try-catch blocks in each function",
            "B) By chaining .catch() after each asynchronous call",
            "C) By using the Promise.all() method",
            "D) By returning an error object from each function",
          ],
          correctAnswer: "A) By using multiple try-catch blocks in each function",
        },
        {
          id: 17,
          question: " Which of the following is an example of a real-life scenario where Async/Await would be useful?",
          options: [
            "A) Loading images on a website",
            "B) Calculating the sum of an array",
            "C) Changing the background color of a webpage",
            "D) None of the above",
          ],
          correctAnswer: "A) Loading images on a website",
        },
        {
          id: 18,
          question: " Consider the following code:\n\n```javascript\nasync function fetchData() {\n    const data = await fetch('https://api.example.com/data');\n    return data.json();\n}\n``` What happens if the API request fails (e.g., due to network issues)?",
          options: [
            "A) The function returns a rejected promise",
            "B) The function throws an error",
            "C) The function returns null",
            "D) The function returns undefined",
          ],
          correctAnswer: "B) The function throws an error",
        },
        {
          id: 19,
          question: " In an async function, how do you handle errors in multiple parallel asynchronous calls?",
          options: [
            "A) By using multiple try-catch blocks for each call",
            "B) By chaining .catch() after each asynchronous call",
            "C) By using the Promise.all() method with a single catch block",
            "D) By using the await keyword before each asynchronous call",
          ],
          correctAnswer: "C) By using the Promise.all() method with a single catch block",
        },
        {
          id: 20,
          question: " Consider the following code:\n\n```javascript\nasync function fetchData() {\n    const response = await fetch('https://api.example.com/data');\n    const data = await response.json();\n    return data;\n}\n``` What is the drawback of this code in terms of performance?",
          options: [
            "A) It makes multiple network requests sequentially, which can be slow",
            "B) It has no performance drawbacks",
            "C) It does not handle errors properly",
            "D) It does not use async/await correctly",
          ],
          correctAnswer: "A) It makes multiple network requests sequentially, which can be slow",
        },{
          id: 21,
          question: " What happens if a promise inside an async function is rejected but not handled with a catch block?",
          options: [
            "A) The program will crash",
            "B) The error will be silently ignored",
            "C) The error will be caught by the global error handler",
            "D) The error will be automatically handled by JavaScript engine",
          ],
          correctAnswer: "A) The program will crash",
        },
        {
          id: 22,
          question: " Consider the following code:\n\n```javascript\nasync function example() {\n    const result = await Promise.resolve(42);\n    return result;\n}\n``` What does this code return?",
          options: [
            "A) A resolved promise with value 42",
            "B) The number 42",
            "C) A rejected promise with value 42",
            "D) An error",
          ],
          correctAnswer: "B) The number 42",
        },
        {
          id: 23,
          question: " Which of the following statements is true about Async/Await and error handling?",
          options: [
            "A) Async/Await automatically catches all errors thrown inside an async function",
            "B) Async/Await requires explicit error handling using try-catch blocks",
            "C) Async/Await cannot handle errors",
            "D) Async/Await uses callbacks for error handling",
          ],
          correctAnswer: "B) Async/Await requires explicit error handling using try-catch blocks",
        },
        {
          id: 24,
          question: " Consider the following code:\n\n```javascript\nasync function fetchData() {\n    const data = await getData();\n    return data;\n}\n``` What will happen if the getData() function is not defined?",
          options: [
            "A) The code will throw an error",
            "B) The function will return undefined",
            "C) The function will return null",
            "D) The code will execute without any issues",
          ],
          correctAnswer: "A) The code will throw an error",
        },
        {
          id: 25,
          question: " Which of the following is a correct way to define an async function in JavaScript?",
          options: [
            "A) function async fetchData() { ... }",
            "B) const async fetchData = () => { ... };",
            "C) const fetchData = async () => { ... };",
            "D) async function fetchData() { ... }",
          ],
          correctAnswer: "D) async function fetchData() { ... }",
        },
        {
          id: 26,
          question: " Consider the following code:\n\n```javascript\nasync function fetchData() {\n    try {\n        const response = await fetch('https://api.example.com/data');\n        return response.json();\n    } catch (error) {\n        return 'Error fetching data';\n    }\n}\n``` What will be the return value if the API request fails?",
          options: [
            "A) A rejected promise",
            "B) 'Error fetching data'",
            "C) An error object",
            "D) Undefined",
          ],
          correctAnswer: "B) 'Error fetching data'",
        },
        {
          id: 27,
          question: " Which of the following is a valid way to handle errors in a chain of asynchronous functions using Async/Await?",
          options: [
            "A) By using multiple try-catch blocks in each function",
            "B) By chaining .catch() after each asynchronous call",
            "C) By using the Promise.all() method with a single catch block",
            "D) By returning an error object from each function",
          ],
          correctAnswer: "A) By using multiple try-catch blocks in each function",
        },
        {
          id: 28,
          question: " Consider the following code:\n\n```javascript\nasync function example() {\n    const result = await Promise.reject('Error');\n    return result;\n}\n``` What does this code return?",
          options: [
            "A) A rejected promise with the message 'Error'",
            "B) The string 'Error'",
            "C) A resolved promise with the message 'Error'",
            "D) An error",
          ],
          correctAnswer: "A) A rejected promise with the message 'Error'",
        },
        {
          id: 29,
          question: " In an async function, how do you handle errors in multiple parallel asynchronous calls when you want to handle each error individually?",
          options: [
            "A) By using multiple try-catch blocks for each call",
            "B) By chaining .catch() after each asynchronous call",
            "C) By using the Promise.all() method with a single catch block",
            "D) By using the await keyword before each asynchronous call and handling errors individually",
          ],
          correctAnswer: "B) By chaining .catch() after each asynchronous call",
        },
        {
          id: 30,
          question: " Which of the following is an example of a real-life scenario where Async/Await would be useful?",
          options: [
            "A) Performing complex mathematical calculations",
            "B) Reading data from a file",
            "C) Adding event listeners to a webpage",
            "D) Animating elements on a webpage",
          ],
          correctAnswer: "B) Reading data from a file",
        },
      ],
      
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 5 ended




    
    6: {
      // Chapter 2
      "6.1": [
        {
          id: 1,
          question: "What is lexical scope in JavaScript?",
          options: [
            "A) Scope defined by a function's arguments",
            "B) Scope defined by a function's variables and their containing functions",
            "C) Scope defined by the global variables",
            "D) Scope defined by the built-in JavaScript objects",
          ],
          correctAnswer: "B) Scope defined by a function's variables and their containing functions",
        },
        {
          id: 2,
          question: "Which of the following best describes a closure in JavaScript?",
          options: [
            "A) A function that can only be executed once",
            "B) A function that has access to its own variables",
            "C) A function that has access to variables from its containing scope even after that scope has finished executing",
            "D) A function that is defined within another function",
          ],
          correctAnswer: "C) A function that has access to variables from its containing scope even after that scope has finished executing",
        },
        {
          id: 3,
          question: "What is the output of the following code?\n\n```javascript\nfunction outer() {\n  const x = 10;\n  function inner() {\n    console.log(x);\n  }\n  return inner;\n}\nconst foo = outer();\nfoo();",
          options: [
            "A) 10",
            "B) undefined",
            "C) ReferenceError: x is not defined",
            "D) null",
          ],
          correctAnswer: "A) 10",
        },
        {
          id: 4,
          question: "In JavaScript, how can you create a closure explicitly?",
          options: [
            "A) By using the return statement within a function",
            "B) By declaring a variable with the const keyword",
            "C) By using the this keyword",
            "D) Closures are created automatically; you don't need to do anything special",
          ],
          correctAnswer: "A) By using the return statement within a function",
        },
        {
          id: 5,
          question: "What will the following code snippet log to the console?\n\n```javascript\nlet count = 0;\nfunction increment() {\n  count++;\n  console.log(count);\n}\nincrement();\nincrement();",
          options: [
            "A) 0, 1",
            "B) 1, 2",
            "C) 1, 1",
            "D) 2, 2",
          ],
          correctAnswer: "B) 1, 2",
        },
        {
          id: 6,
          question: "What is the value of result after the execution of the following code?\n\n```javascript\nlet result = 0;\nfunction add(x) {\n  return function (y) {\n    result = x + y;\n  };\n}\nconst addFive = add(5);\naddFive(3);",
          options: [
            "A) 3",
            "B) 5",
            "C) 8",
            "D) 0",
          ],
          correctAnswer: "C) 8",
        },
        {
          id: 7,
          question: "Which of the following statements is true regarding the scope chain in JavaScript?",
          options: [
            "A) The scope chain refers to the order in which functions are called.",
            "B) The scope chain determines the order of execution of JavaScript code.",
            "C) The scope chain is used to look up variables and their values.",
            "D) The scope chain is limited to the global scope only.",
          ],
          correctAnswer: "C) The scope chain is used to look up variables and their values.",
        },
        {
          id: 8,
          question: "What will the following code output?\n\n```javascript\nfor (let i = 0; i < 5; i++) {\n  setTimeout(function () {\n    console.log(i);\n  }, 100);\n}",
          options: [
            "A) 0 1 2 3 4",
            "B) 5 5 5 5 5",
            "C) 4 4 4 4 4",
            "D) 1 2 3 4 5",
          ],
          correctAnswer: "A) 0 1 2 3 4",
        },
        {
          id: 9,
          question: "Which of the following code snippets correctly demonstrates a closure in JavaScript?\n\na)\n\n```javascript\nfunction outer() {\n  let x = 10;\n  return function () {\n    console.log(x);\n  };\n}",
          options: [
            "A) a)",
            "B) b)",
            "C) c)",
            "D) d)",
          ],
          correctAnswer: "A) a)",
        },
        {
          id: 10,
          question: "What is the primary advantage of using closures in JavaScript?",
          options: [
            "A) They reduce memory usage.",
            "B) They make code execution faster.",
            "C) They allow functions to access variables from their containing scope.",
            "D) They prevent variable hoisting.",
          ],
          correctAnswer: "C) They allow functions to access variables from their containing scope.",
        },
        {
          id: 11,
          question: "What does the this keyword refer to in the context of a closure?",
          options: [
            "A) It always refers to the global object.",
            "B) It refers to the containing function's scope.",
            "C) It refers to the object that the method was called on.",
            "D) It is not accessible within a closure.",
          ],
          correctAnswer: "B) It refers to the containing function's scope.",
        },
        {
          id: 12,
          question: "Which of the following code snippets demonstrates a closure that captures a value from its containing scope?",
          options: [
            "A) a)",
            "B) b)",
            "C) c)",
            "D) d)",
          ],
          correctAnswer: "A) a)",
        },
        {
          id: 13,
          question: "In JavaScript, which of the following correctly describes how variables are scoped within functions?",
          options: [
            "A) Variables declared with var have block scope, while variables declared with let and const have block scope.",
            "B) Variables declared with let have function scope, while variables declared with var and const have block scope.",
            "C) Variables declared with const have function scope, while variables declared with let and var have block scope.",
            "D) All variables have the same scope regardless of how they are declared.",
          ],
          correctAnswer: "A) Variables declared with var have block scope, while variables declared with let and const have block scope.",
        },
        {
          id: 14,
          question: "What is the difference between var and let when it comes to variable scope in JavaScript?",
          options: [
            "A) var has block scope, while let has function scope.",
            "B) var has function scope, while let has block scope.",
            "C) Both var and let have block scope.",
            "D) There is no difference; they have the same scope.",
          ],
          correctAnswer: "B) var has function scope, while let has block scope.",
        },
        {
          id: 15,
          question: "Which of the following is an example of a lexical scope in JavaScript?",
          options: [
            "A) A variable defined inside a function is accessible only within that function.",
            "B) A variable defined outside a function is accessible from any part of the code.",
            "C) A variable defined with var is block-scoped.",
            "D) A variable defined with let is function-scoped.",
          ],
          correctAnswer: "A) A variable defined inside a function is accessible only within that function.",
        },
        {
          id: 16,
          question: "What will be logged to the console after executing the following code?\n\n```javascript\nlet x = 10;\nfunction outer() {\n  console.log(x);\n}\nfunction inner() {\n  let x = 5;\n  outer();\n}\ninner();",
          options: [
            "A) 5",
            "B) 10",
            "C) undefined",
            "D) An error will occur.",
          ],
          correctAnswer: "B) 10",
        },
        {
          id: 17,
          question: "Which of the following functions correctly creates a closure in JavaScript?",
          options: [
            "A) a)",
            "B) b)",
            "C) c)",
            "D) d)",
          ],
          correctAnswer: "A) a)",
        },
        {
          id: 18,
          question: "What is the output of the following code?\n\n```javascript\nlet x = 10;\nfunction foo() {\n  let x = 5;\n  return function () {\n    console.log(x);\n  };\n}\nconst bar = foo();\nbar();",
          options: [
            "A) 5",
            "B) 10",
            "C) undefined",
            "D) An error will occur.",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 19,
          question: "What is the purpose of the return statement in the following code?\n\n```javascript\nfunction createCounter() {\n  let count = 0;\n  return function () {\n    count++;\n    return count;\n  };\n}\nconst counter = createCounter();",
          options: [
            "A) It returns the value of count to the calling code.",
            "B) It assigns a new value to count.",
            "C) It creates a new function.",
            "D) It has no purpose in this code.",
          ],
          correctAnswer: "A) It returns the value of count to the calling code.",
        },
        {
          id: 20,
          question: "Which of the following is an example of a closure in JavaScript?",
          options: [
            "A) a)",
            "B) b)",
            "C) c)",
            "D) d)",
          ],
          correctAnswer: "B) b)",
        },
        {
          id: 21,
          question: "What is the value of x after the following code is executed?\n\n```javascript\nif (true) {\n  let x = 5;\n}\nconsole.log(x);",
          options: [
            "A) 5",
            "B) undefined",
            "C) null",
            "D) An error will occur.",
          ],
          correctAnswer: "B) undefined",
        },
        {
          id: 22,
          question: "In JavaScript, which of the following correctly describes variable hoisting?",
          options: [
            "A) Variable hoisting ensures that variables declared with var are scoped to the block they are defined in.",
            "B) Variable hoisting moves variable declarations to the top of their containing function or block.",
            "C) Variable hoisting allows you to declare variables without using the var, let, or const keyword.",
            "D) Variable hoisting is not a feature of JavaScript.",
          ],
          correctAnswer: "B) Variable hoisting moves variable declarations to the top of their containing function or block.",
        },
        {
          id: 23,
          question: "What will be logged to the console after executing the following code?\n\n```javascript\nlet x = 10;\nfunction foo() {\n  let x = 5;\n  return function () {\n    console.log(x);\n  };\n}\nconst bar = foo();\nbar();",
          options: [
            "A) 5",
            "B) 10",
            "C) undefined",
            "D) An error will occur.",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 24,
          question: "What is the primary advantage of using block-scoped variables (let and const) over function-scoped variables (var)?",
          options: [
            "A) Block-scoped variables are hoisted.",
            "B) Block-scoped variables have a shorter lifespan.",
            "C) Block-scoped variables can be declared inside functions.",
            "D) Block-scoped variables have more predictable and localized scope.",
          ],
          correctAnswer: "D) Block-scoped variables have more predictable and localized scope.",
        },
        {
          id: 25,
          question: "What is the value of x after the following code is executed?\n\n```javascript\nlet x = 2;\nfunction modifyX() {\n  x = 4;\n}\nmodifyX();",
          options: [
            "A) 2",
            "B) 4",
            "C) 6",
            "D) undefined",
          ],
          correctAnswer: "B) 4",
        },
        {
          id: 26,
          question: "Which of the following is NOT a use case for closures in JavaScript?",
          options: [
            "A) Implementing data encapsulation",
            "B) Creating private variables and methods",
            "C) Improving code performance",
            "D) Handling asynchronous operations",
          ],
          correctAnswer: "C) Improving code performance",
        },
        {
          id: 27,
          question: "What does the this keyword refer to in the context of a closure?",
          options: [
            "A) It always refers to the global object.",
            "B) It refers to the containing function's scope.",
            "C) It refers to the object that the method was called on.",
            "D) It is not accessible within a closure.",
          ],
          correctAnswer: "B) It refers to the containing function's scope.",
        },
        {
          id: 28,
          question: "Which of the following code snippets demonstrates a closure that captures a value from its containing scope?",
          options: [
            "A) a)",
            "B) b)",
            "C) c)",
            "D) d)",
          ],
          correctAnswer: "A) a)",
        },
        {
          id: 29,
          question: "In JavaScript, which of the following correctly describes how variables are scoped within functions?",
          options: [
            "A) Variables declared with var have block scope, while variables declared with let and const have block scope.",
            "B) Variables declared with let have function scope, while variables declared with var and const have block scope.",
            "C) Variables declared with const have function scope, while variables declared with let and var have block scope.",
            "D) All variables have the same scope regardless of how they are declared.",
          ],
          correctAnswer: "A) Variables declared with var have block scope, while variables declared with let and const have block scope.",
        },
        {
          id: 30,
          question: "What is the difference between var and let when it comes to variable scope in JavaScript?",
          options: [
            "A) var has block scope, while let has function scope.",
            "B) var has function scope, while let has block scope.",
            "C) Both var and let have block scope.",
            "D) There is no difference; they have the same scope.",
          ],
          correctAnswer: "B) var has function scope, while let has block scope.",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "6.2": [
        {
          id: 1,
          question: "What is the purpose of using modules in JavaScript?",
          options: [
            "A) To organize code into reusable components",
            "B) To make the code execute faster",
            "C) To create complex animations",
            "D) To define global variables",
          ],
          correctAnswer: "A) To organize code into reusable components",
        },
        {
          id: 2,
          question: "Which keyword is used to export a named function or variable from a module in JavaScript?",
          options: [
            "A) import",
            "B) export",
            "C) require",
            "D) module",
          ],
          correctAnswer: "B) export",
        },
        {
          id: 3,
          question: "In ES6 modules, how can you import a default export from a module?",
          options: [
            "A) import { default } from 'module-name';",
            "B) import * as default from 'module-name';",
            "C) import default from 'module-name';",
            "D) You cannot import default exports.",
          ],
          correctAnswer: "C) import default from 'module-name';",
        },
        {
          id: 4,
          question: "What is the purpose of the 'import' keyword in JavaScript?",
          options: [
            "A) To include external libraries",
            "B) To import modules and their exports",
            "C) To declare global variables",
            "D) To import JSON data",
          ],
          correctAnswer: "B) To import modules and their exports",
        },
        {
          id: 5,
          question: "Which of the following is not a valid way to export multiple values from a module in JavaScript?",
          options: [
            "A) export { var1, var2 };",
            "B) export var1, var2;",
            "C) export { var1 as v1, var2 as v2 };",
            "D) export * from 'module-name';",
          ],
          correctAnswer: "B) export var1, var2;",
        },
        {
          id: 6,
          question: "In an ES6 module, how can you import all exports from another module as an object?",
          options: [
            "A) import * as allExports from 'module-name';",
            "B) import { * } from 'module-name';",
            "C) import { allExports } from 'module-name';",
            "D) import allExports from 'module-name';",
          ],
          correctAnswer: "A) import * as allExports from 'module-name';",
        },
        {
          id: 7,
          question: "What does the 'default' keyword signify when exporting from a module?",
          options: [
            "A) It exports the most commonly used function or variable.",
            "B) It exports all functions and variables from the module.",
            "C) It exports the first function or variable in the module.",
            "D) It exports nothing.",
          ],
          correctAnswer: "A) It exports the most commonly used function or variable.",
        },
        {
          id: 8,
          question: "Which statement is used to import a specific export from a module?",
          options: [
            "A) import { exportName } from 'module-name';",
            "B) require('module-name').exportName;",
            "C) import * as module from 'module-name';",
            "D) import 'module-name';",
          ],
          correctAnswer: "A) import { exportName } from 'module-name';",
        },
        {
          id: 9,
          question: "In a module, what is the purpose of using the 'import * as alias' syntax?",
          options: [
            "A) To import a default export",
            "B) To import all exports as an object with a specified alias",
            "C) To import only a specific export",
            "D) To import all exports without an alias",
          ],
          correctAnswer: "B) To import all exports as an object with a specified alias",
        },
        {
          id: 10,
          question: "Which statement is used to import a module from the same directory in Node.js?",
          options: [
            "A) require('module-name');",
            "B) import 'module-name';",
            "C) import './module-name';",
            "D) require('./module-name');",
          ],
          correctAnswer: "D) require('./module-name');",
        },
        {
          id: 11,
          question: "In a module, what does the 'import { name as alias }' syntax do?",
          options: [
            "A) Imports the 'name' export as 'alias'",
            "B) Imports all exports as an object with the name 'alias'",
            "C) Imports the 'alias' export as 'name'",
            "D) Imports the 'name' export and assigns it to a variable named 'alias'",
          ],
          correctAnswer: "A) Imports the 'name' export as 'alias'",
        },
        {
          id: 12,
          question: "Which of the following is a benefit of using ES6 modules over the older CommonJS module system?",
          options: [
            "A) ES6 modules are asynchronous.",
            "B) ES6 modules have better performance.",
            "C) ES6 modules can only be used in web browsers.",
            "D) ES6 modules are not widely supported.",
          ],
          correctAnswer: "B) ES6 modules have better performance.",
        },
        {
          id: 13,
          question: "In an ES6 module, which keyword is used to mark a function or variable as private to the module (not exportable)?",
          options: [
            "A) private",
            "B) export",
            "C) let",
            "D) const",
          ],
          correctAnswer: "D) const",
        },
        {
          id: 14,
          question: "What is the purpose of the 'export default' syntax in a module?",
          options: [
            "A) To export multiple values as defaults",
            "B) To specify the default export for the module",
            "C) To prevent exporting of default values",
            "D) To export a single value as the default export",
          ],
          correctAnswer: "D) To export a single value as the default export",
        },
        {
          id: 15,
          question: "How can you import and use a default export with a different name in JavaScript?",
          options: [
            "A) import { default as myAlias } from 'module-name';",
            "B) import { myAlias } from 'module-name';",
            "C) import default as myAlias from 'module-name';",
            "D) You cannot rename a default export.",
          ],
          correctAnswer: "A) import { default as myAlias } from 'module-name';",
        },
        {
          id: 16,
          question: "Which statement is used to import all exports from a module in CommonJS?",
          options: [
            "A) require('module-name').*",
            "B) require('module-name').exports",
            "C) require('module-name').import",
            "D) require('module-name')",
          ],
          correctAnswer: "D) require('module-name')",
        },
        {
          id: 17,
          question: "In ES6 modules, how can you import a specific named export with a different name?",
          options: [
            "A) import { originalName as alias } from 'module-name';",
            "B) import { alias } from 'module-name';",
            "C) import { originalName: alias } from 'module-name';",
            "D) import alias from 'module-name';",
          ],
          correctAnswer: "A) import { originalName as alias } from 'module-name';",
        },
        {
          id: 18,
          question: "Which of the following is a valid way to export a function named 'myFunction' from a module?",
          options: [
            "A) export default myFunction;",
            "B) export { myFunction };",
            "C) export { myFunction as default };",
            "D) export myFunction;",
          ],
          correctAnswer: "B) export { myFunction };",
        },
        {
          id: 19,
          question: "In an ES6 module, can you have both a default export and named exports?",
          options: [
            "A) Yes, you can have both in the same module.",
            "B) No, you can only have either a default export or named exports, not both.",
            "C) Yes, but they must be in separate modules.",
            "D) Yes, but you cannot import them together.",
          ],
          correctAnswer: "A) Yes, you can have both in the same module.",
        },
        {
          id: 20,
          question: "Which statement is used to import all exports from a module and assign them to a single variable?",
          options: [
            "A) import * from 'module-name';",
            "B) import { * } from 'module-name';",
            "C) import allExports from 'module-name';",
            "D) import { allExports } from 'module-name';",
          ],
          correctAnswer: "A) import * from 'module-name';",
        },
        {
          id: 21,
          question: "In JavaScript modules, what is the purpose of the 'export { name }' syntax?",
          options: [
            "A) It exports the 'name' variable as the default export.",
            "B) It exports the 'name' variable as a named export.",
            "C) It imports the 'name' variable from another module.",
            "D) It defines a private variable.",
          ],
          correctAnswer: "B) It exports the 'name' variable as a named export.",
        },
        {
          id: 22,
          question: "Which statement is used to import a default export with a different name in CommonJS?",
          options: [
            "A) require('module-name').default as myAlias",
            "B) require('module-name').myAlias",
            "C) require('module-name').default.myAlias",
            "D) require('module-name').import as myAlias",
          ],
          correctAnswer: "A) require('module-name').default as myAlias",
        },
        {
          id: 23,
          question: "What happens when you attempt to re-export a module's default export with a different name?",
          options: [
            "A) It will result in a syntax error.",
            "B) It will override the default export with the new name.",
            "C) It will create a new named export with the new name.",
            "D) It is not possible to re-export a default export with a different name.",
          ],
          correctAnswer: "A) It will result in a syntax error.",
        },
        {
          id: 24,
          question: "How can you import all exports from a module and give them a prefix in JavaScript?",
          options: [
            "A) import * as prefix from 'module-name';",
            "B) import { prefix } from 'module-name';",
            "C) import { * as prefix } from 'module-name';",
            "D) import prefix from 'module-name';",
          ],
          correctAnswer: "C) import { * as prefix } from 'module-name';",
        },
        {
          id: 25,
          question: "In JavaScript modules, what is the purpose of the 'import 'module-name';' statement without any specific imports?",
          options: [
            "A) It imports all exports from the module.",
            "B) It imports the default export from the module.",
            "C) It imports nothing and is invalid syntax.",
            "D) It imports all exports with their original names.",
          ],
          correctAnswer: "B) It imports the default export from the module.",
        },
        {
          id: 26,
          question: "Which statement is used to import a default export and specific named exports together in JavaScript?",
          options: [
            "A) import { default, named1, named2 } from 'module-name';",
            "B) import { default as alias, named1, named2 } from 'module-name';",
            "C) import * as allExports from 'module-name';",
            "D) import default, { named1, named2 } from 'module-name';",
          ],
          correctAnswer: "B) import { default as alias, named1, named2 } from 'module-name';",
        },
        {
          id: 27,
          question: "In ES6 modules, can you have circular dependencies between modules?",
          options: [
            "A) Yes, circular dependencies are allowed.",
            "B) No, circular dependencies are not allowed.",
            "C) Circular dependencies can only occur in CommonJS modules.",
            "D) Circular dependencies can only occur with default exports.",
          ],
          correctAnswer: "A) Yes, circular dependencies are allowed.",
        },
        {
          id: 28,
          question: "What is the purpose of the 'export * from 'module-name';' syntax in JavaScript?",
          options: [
            "A) It exports all exports from 'module-name' as default exports.",
            "B) It imports all exports from 'module-name' as named exports.",
            "C) It exports all exports from 'module-name' as named exports.",
            "D) It is invalid syntax.",
          ],
          correctAnswer: "C) It exports all exports from 'module-name' as named exports.",
        },
        {
          id: 29,
          question: "Which statement is used to import all exports from a module and assign them to individual variables with the same names?",
          options: [
            "A) import { * } from 'module-name';",
            "B) import * as allExports from 'module-name';",
            "C) import { allExports } from 'module-name';",
            "D) import allExports from 'module-name';",
          ],
          correctAnswer: "A) import { * } from 'module-name';",
        },
        {
          id: 30,
          question: "In JavaScript modules, what is the purpose of the 'import.meta' object?",
          options: [
            "A) It provides information about the current module.",
            "B) It imports metadata from another module.",
            "C) It is used to fetch external resources.",
            "D) It is a reserved keyword with no functionality.",
          ],
          correctAnswer: "A) It provides information about the current module.",
        },
        // Add more questions for subchapter 1.2 as needed
      ],

      "6.3": [
        {
          id: 1,
          question: "What is the primary purpose of a try-catch block in JavaScript?",
          options: [
            "A) To handle runtime errors gracefully",
            "B) To define custom functions",
            "C) To create loops",
            "D) To declare variables",
          ],
          correctAnswer: "A) To handle runtime errors gracefully",
        },
        {
          id: 2,
          question: "Which keyword is used to catch exceptions in a try-catch block?",
          options: [
            "A) catch",
            "B) throw",
            "C) finally",
            "D) try",
          ],
          correctAnswer: "A) catch",
        },
        {
          id: 3,
          question: "In JavaScript, which method is used to output messages to the console for debugging purposes?",
          options: [
            "A) alert()",
            "B) log()",
            "C) print()",
            "D) debug()",
          ],
          correctAnswer: "B) log()",
        },
        {
          id: 4,
          question: "What does the term 'breakpoint' refer to in debugging?",
          options: [
            "A) A point in code where execution stops for inspection",
            "B) A syntax error",
            "C) A loop control statement",
            "D) A comment in the code",
          ],
          correctAnswer: "A) A point in code where execution stops for inspection",
        },
        {
          id: 5,
          question: "Which of the following is NOT a common debugging tool in JavaScript?",
          options: [
            "A) Console",
            "B) Debugger",
            "C) Inspector",
            "D) Validator",
          ],
          correctAnswer: "D) Validator",
        },
        {
          id: 6,
          question: "In JavaScript, how can you manually throw an exception?",
          options: [
            "A) By using the throw keyword followed by an error message",
            "B) By using the try keyword",
            "C) By using the break keyword",
            "D) By using the catch keyword",
          ],
          correctAnswer: "A) By using the throw keyword followed by an error message",
        },
        {
          id: 7,
          question: "What is the purpose of the finally block in a try-catch-finally statement?",
          options: [
            "A) To handle exceptions",
            "B) To execute code regardless of whether an exception was thrown",
            "C) To stop the execution of code",
            "D) To declare variables",
          ],
          correctAnswer: "B) To execute code regardless of whether an exception was thrown",
        },
        {
          id: 8,
          question: "Which of the following is NOT a commonly used debugging technique?",
          options: [
            "A) Stepping through code",
            "B) Inspecting variables and their values",
            "C) Commenting out all code",
            "D) Setting breakpoints",
          ],
          correctAnswer: "C) Commenting out all code",
        },
        {
          id: 9,
          question: "When using the console.log() method for debugging, where will the output be displayed?",
          options: [
            "A) In the browser's console",
            "B) As a pop-up alert message",
            "C) In the HTML document",
            "D) In the JavaScript source code",
          ],
          correctAnswer: "A) In the browser's console",
        },
        {
          id: 10,
          question: "Which JavaScript method allows you to convert an object to a JSON-formatted string for debugging?",
          options: [
            "A) stringify()",
            "B) parse()",
            "C) format()",
            "D) toJSON()",
          ],
          correctAnswer: "A) stringify()",
        },
        {
          id: 11,
          question: "What is the purpose of a linter in JavaScript development?",
          options: [
            "A) To debug code",
            "B) To optimize code for performance",
            "C) To check code for syntax and style errors",
            "D) To create animations",
          ],
          correctAnswer: "C) To check code for syntax and style errors",
        },
        {
          id: 12,
          question: "Which of the following is NOT a common type of JavaScript error?",
          options: [
            "A) SyntaxError",
            "B) TypeError",
            "C) LogicError",
            "D) ReferenceError",
          ],
          correctAnswer: "C) LogicError",
        },
        {
          id: 13,
          question: "In JavaScript, what does the typeof operator return for an undefined variable?",
          options: [
            "A) 'undefined'",
            "B) 'null'",
            "C) 'object'",
            "D) 'string'",
          ],
          correctAnswer: "A) 'undefined'",
        },
        {
          id: 14,
          question: "Which of the following is a valid way to handle asynchronous errors in JavaScript?",
          options: [
            "A) Using try-catch blocks",
            "B) Using synchronous functions only",
            "C) Ignoring errors",
            "D) Using asynchronous functions only",
          ],
          correctAnswer: "A) Using try-catch blocks",
        },
        {
          id: 15,
          question: "What does the term 'stack trace' refer to in JavaScript debugging?",
          options: [
            "A) A report of the function call hierarchy leading to an error",
            "B) A built-in JavaScript data structure",
            "C) A debugging tool",
            "D) A code comment",
          ],
          correctAnswer: "A) A report of the function call hierarchy leading to an error",
        },
        {
          id: 16,
          question: "Which debugging technique involves inspecting the values of variables at runtime?",
          options: [
            "A) Code profiling",
            "B) Breakpoint debugging",
            "C) Log debugging",
            "D) Variable inspection",
          ],
          correctAnswer: "D) Variable inspection",
        },
        {
          id: 17,
          question: "Which of the following statements is true about the try-catch block in JavaScript?",
          options: [
            "A) The try block is optional.",
            "B) The catch block is optional.",
            "C) Both the try and catch blocks are required.",
            "D) The finally block is required.",
          ],
          correctAnswer: "B) The catch block is optional.",
        },
        {
          id: 18,
          question: "What is the purpose of a 'debugging proxy' tool in JavaScript development?",
          options: [
            "A) To intercept and inspect network requests and responses",
            "B) To block all incoming requests",
            "C) To disable debugging",
            "D) To format code",
          ],
          correctAnswer: "A) To intercept and inspect network requests and responses",
        },
        {
          id: 19,
          question: "Which JavaScript method can be used to handle multiple catch blocks for different types of exceptions?",
          options: [
            "A) try-catch",
            "B) try-catch-exception",
            "C) try-catch-multiple",
            "D) try-multiple-catch",
          ],
          correctAnswer: "A) try-catch",
        },
        {
          id: 20,
          question: "Which JavaScript error type is thrown when a variable is used before it is declared?",
          options: [
            "A) ReferenceError",
            "B) SyntaxError",
            "C) TypeError",
            "D) LogicError",
          ],
          correctAnswer: "A) ReferenceError",
        },
        {
          id: 21,
          question: "What is the purpose of the debugger statement in JavaScript code?",
          options: [
            "A) It prints a message to the console.",
            "B) It defines a function.",
            "C) It pauses code execution and opens the debugging tool.",
            "D) It throws an error.",
          ],
          correctAnswer: "C) It pauses code execution and opens the debugging tool.",
        },
        {
          id: 22,
          question: "Which of the following tools allows you to analyze code performance and identify bottlenecks?",
          options: [
            "A) Linter",
            "B) Profiler",
            "C) Debugger",
            "D) Validator",
          ],
          correctAnswer: "B) Profiler",
        },
        {
          id: 23,
          question: "When debugging a program, what is the primary purpose of setting breakpoints?",
          options: [
            "A) To mark code for deletion",
            "B) To indicate the start of a program",
            "C) To pause code execution at specific points for inspection",
            "D) To generate random errors",
          ],
          correctAnswer: "C) To pause code execution at specific points for inspection",
        },
        {
          id: 24,
          question: "Which JavaScript method can be used to convert a string to an integer for debugging purposes?",
          options: [
            "A) parseInt()",
            "B) toInt()",
            "C) convertToInt()",
            "D) stringToInt()",
          ],
          correctAnswer: "A) parseInt()",
        },
        {
          id: 25,
          question: "In JavaScript, what does the NaN value represent?",
          options: [
            "A) 'Not a Number'",
            "B) 'Negative Number'",
            "C) 'No Answer'",
            "D) 'Null'",
          ],
          correctAnswer: "A) 'Not a Number'",
        },
        {
          id: 26,
          question: "Which JavaScript debugging technique involves systematically narrowing down the code section where an error occurs?",
          options: [
            "A) Code profiling",
            "B) Binary search debugging",
            "C) Breakpoint debugging",
            "D) Log debugging",
          ],
          correctAnswer: "B) Binary search debugging",
        },
        {
          id: 27,
          question: "Which statement is used to throw a custom error in JavaScript?",
          options: [
            "A) throw new Error('Custom error message');",
            "B) catch (error) { throw error; }",
            "C) try (error) { throw error; }",
            "D) new Error('Custom error message');",
          ],
          correctAnswer: "A) throw new Error('Custom error message');",
        },
        {
          id: 28,
          question: "What does the term 'linting' refer to in JavaScript development?",
          options: [
            "A) Removing comments from code",
            "B) Automatically fixing syntax errors",
            "C) Checking code for errors and style violations",
            "D) Running code in a virtual environment",
          ],
          correctAnswer: "C) Checking code for errors and style violations",
        },
        {
          id: 29,
          question: "Which JavaScript method is used to create a new error object with a specified message and name?",
          options: [
            "A) Error.create()",
            "B) new Error()",
            "C) createError()",
            "D) throw new Error()",
          ],
          correctAnswer: "B) new Error()",
        },
        {
          id: 30,
          question: "Which of the following is NOT a common use case for the try-catch-finally statement in JavaScript?",
          options: [
            "A) Handling exceptions gracefully",
            "B) Resource cleanup (e.g., closing a file)",
            "C) Loop control",
            "D) Logging errors",
          ],
          correctAnswer: "C) Loop control",
        },
        // Add more questions for subchapter 1.2 as needed
      ],
      
      // Add more subchapters for Chapter 1 as needed
    },


    //chapter 6 ended
  },




  // subject 2 ended




  3: {
    // Module 2
    1: {
      // Chapter 1
      "1.1": [
        {
          id: 1,
          question: "What does CSS stand for?",
          options: [
            "A) Creative Style Sheets",
            "B) Cascading Style Sheets",
            "C) Computer Style Sheets",
            "D) Content Style Sheets",
          ],
          correctAnswer: "B) Cascading Style Sheets",
        },
        {
          id: 2,
          question: "Which HTML tag is used to link an external CSS file to an HTML document?",
          options: [
            "A) <style>",
            "B) <link>",
            "C) <css>",
            "D) <script>",
          ],
          correctAnswer: "B) <link>",
        },
        {
          id: 3,
          question: "In CSS, which property is used to set the background color of an element?",
          options: [
            "A) text-color",
            "B) bg-color",
            "C) background-color",
            "D) color-background",
          ],
          correctAnswer: "C) background-color",
        },
        {
          id: 4,
          question: "Which CSS selector targets all elements of a specific type?",
          options: [
            "A) .class",
            "B) #id",
            "C) *",
            "D) element",
          ],
          correctAnswer: "D) element",
        },
        {
          id: 5,
          question: "What is the purpose of the 'box-model' in CSS?",
          options: [
            "A) To define the layout of a webpage",
            "B) To create 3D animations",
            "C) To describe the content structure of a webpage",
            "D) To specify the spacing and dimensions of an element",
          ],
          correctAnswer: "D) To specify the spacing and dimensions of an element",
        },
        {
          id: 6,
          question: "Which CSS property is used to control the spacing between lines of text within an element?",
          options: [
            "A) line-height",
            "B) text-spacing",
            "C) line-spacing",
            "D) text-line",
          ],
          correctAnswer: "A) line-height",
        },
        {
          id: 7,
          question: "In CSS, what does the term 'pseudo-class' refer to?",
          options: [
            "A) A class with special privileges",
            "B) A class defined using JavaScript",
            "C) A class that represents a particular state or element",
            "D) A class for hiding elements",
          ],
          correctAnswer: "C) A class that represents a particular state or element",
        },
        {
          id: 8,
          question: "What is the purpose of the 'float' property in CSS?",
          options: [
            "A) To make text content float above images",
            "B) To create floating divs",
            "C) To make elements stick to the top of the page",
            "D) To add shadows to text",
          ],
          correctAnswer: "B) To create floating divs",
        },
        {
          id: 9,
          question: "Which CSS property is used to control the order of overlapping elements?",
          options: [
            "A) z-index",
            "B) order",
            "C) position",
            "D) float-order",
          ],
          correctAnswer: "A) z-index",
        },
        {
          id: 10,
          question: "What is the main benefit of using external CSS files as opposed to inline CSS?",
          options: [
            "A) External CSS files load faster",
            "B) External CSS files are more secure",
            "C) External CSS files allow for better code organization and reuse",
            "D) External CSS files don't work with modern web browsers",
          ],
          correctAnswer: "C) External CSS files allow for better code organization and reuse",
        },
        {
          id: 11,
          question: "Which CSS property is used to make text italicized?",
          options: [
            "A) font-style",
            "B) text-italic",
            "C) font-italic",
            "D) italicize-text",
          ],
          correctAnswer: "A) font-style",
        },
        {
          id: 12,
          question: "What does the 'cascading' in Cascading Style Sheets (CSS) refer to?",
          options: [
            "A) The ability to add animation to styles",
            "B) The order of styles taking precedence when multiple rules apply to an element",
            "C) The ability to create gradients",
            "D) The process of converting HTML to CSS",
          ],
          correctAnswer: "B) The order of styles taking precedence when multiple rules apply to an element",
        },
        {
          id: 13,
          question: "Which CSS property is used to control the size of text within an element relative to its parent?",
          options: [
            "A) text-size",
            "B) font-size",
            "C) text-scale",
            "D) size-font",
          ],
          correctAnswer: "B) font-size",
        },
        {
          id: 14,
          question: "In CSS, which value is used to hide an element from view while preserving its space in the layout?",
          options: [
            "A) visible",
            "B) hidden",
            "C) display: none",
            "D) opacity: 0",
          ],
          correctAnswer: "C) display: none",
        },
        {
          id: 15,
          question: "What is the purpose of the 'media query' in CSS?",
          options: [
            "A) To query the user's browser history",
            "B) To apply styles based on device characteristics and screen size",
            "C) To create complex animations",
            "D) To query the user's location",
          ],
          correctAnswer: "B) To apply styles based on device characteristics and screen size",
        },
        {
          id: 16,
          question: "Which CSS property is used to add a shadow effect to an element?",
          options: [
            "A) shadow-effect",
            "B) box-shadow",
            "C) text-shadow",
            "D) element-shadow",
          ],
          correctAnswer: "B) box-shadow",
        },
        {
          id: 17,
          question: "In CSS, what does the 'cascading' specificity mean when resolving conflicting styles?",
          options: [
            "A) The style closest to the bottom of the stylesheet wins",
            "B) The style with the highest specificity value wins",
            "C) The style closest to the top of the stylesheet wins",
            "D) Styles are applied randomly",
          ],
          correctAnswer: "B) The style with the highest specificity value wins",
        },
        {
          id: 18,
          question: "Which CSS property is used to change the color of text within an element?",
          options: [
            "A) text-color",
            "B) font-color",
            "C) color",
            "D) text-fill",
          ],
          correctAnswer: "C) color",
        },
        {
          id: 19,
          question: "What does CSS Grid layout provide for web developers?",
          options: [
            "A) A way to create responsive web designs",
            "B) A method for embedding videos in web pages",
            "C) A way to animate elements on a webpage",
            "D) A powerful grid system for layout control",
          ],
          correctAnswer: "D) A powerful grid system for layout control",
        },
        {
          id: 20,
          question: "Which CSS property is used to control the spacing between letters in a text?",
          options: [
            "A) letter-spacing",
            "B) word-spacing",
            "C) text-spacing",
            "D) line-spacing",
          ],
          correctAnswer: "A) letter-spacing",
        },
        {
          id: 21,
          question: "What is the primary role of CSS in web development?",
          options: [
            "A) To structure web content",
            "B) To create interactive forms",
            "C) To define the presentation and styling of web content",
            "D) To manage server-side logic",
          ],
          correctAnswer: "C) To define the presentation and styling of web content",
        },
        {
          id: 22,
          question: "How can you include comments in a CSS file?",
          options: [
            "A) // This is a comment",
            "B) <!-- This is a comment -->",
            "C) /* This is a comment */",
            "D) / This is a comment /",
          ],
          correctAnswer: "C) /* This is a comment */",
        },
        {
          id: 23,
          question: "Which CSS property is used to control the alignment of text within an element?",
          options: [
            "A) text-align",
            "B) text-justify",
            "C) text-center",
            "D) align-text",
          ],
          correctAnswer: "A) text-align",
        },
        {
          id: 24,
          question: "What is the primary benefit of using CSS for web design?",
          options: [
            "A) It makes web pages load faster",
            "B) It allows for greater accessibility",
            "C) It separates content from presentation",
            "D) It enhances server-side functionality",
          ],
          correctAnswer: "C) It separates content from presentation",
        },
        {
          id: 25,
          question: "Which CSS property is used to change the order of elements within a container?",
          options: [
            "A) order",
            "B) display-order",
            "C) position",
            "D) rearrange",
          ],
          correctAnswer: "A) order",
        },
        {
          id: 26,
          question: "What does the 'cascading' nature of CSS styles mean in terms of style inheritance?",
          options: [
            "A) Styles can be inherited from parent elements to child elements",
            "B) Styles can only be inherited from child elements to parent elements",
            "C) Styles cannot be inherited in CSS",
            "D) Styles are applied randomly to elements",
          ],
          correctAnswer: "A) Styles can be inherited from parent elements to child elements",
        },
        {
          id: 27,
          question: "Which CSS property is used to control the rotation of an element?",
          options: [
            "A) rotate",
            "B) transform-rotate",
            "C) rotation",
            "D) transform",
          ],
          correctAnswer: "B) transform-rotate",
        },
        {
          id: 28,
          question: "In CSS, which property is used to control the space between the content of an element and its border?",
          options: [
            "A) margin",
            "B) padding",
            "C) border-spacing",
            "D) spacing",
          ],
          correctAnswer: "B) padding",
        },
        {
          id: 29,
          question: "What is the purpose of the 'cascading' nature of CSS styles?",
          options: [
            "A) To make styles randomly change over time",
            "B) To ensure that styles are applied in a specific order",
            "C) To allow styles to be overridden by more specific rules",
            "D) To create dynamic animations",
          ],
          correctAnswer: "C) To allow styles to be overridden by more specific rules",
        },
        {
          id: 30,
          question: "How can you include an inline CSS style directly within an HTML element?",
          options: [
            "A) Using the <style> tag",
            "B) Using the <link> tag",
            "C) Using the style attribute",
            "D) Using the class attribute",
          ],
          correctAnswer: "C) Using the style attribute",
        },
  
      ],

      
      "1.2": [

        
        {
          id: 1,
          question: "What does CSS stand for?",
          options: [
            "A) Cascading Style Sheets",
            "B) Creative Style Selector",
            "C) Computer Style Script",
            "D) Colorful Style Syntax",
          ],
          correctAnswer: "A) Cascading Style Sheets",
        },
        {
          id: 2,
          question: "Which CSS selector selects all elements on a web page?",
          options: [
            "A) *",
            "B) body",
            "C) html",
            "D) all",
          ],
          correctAnswer: "A) *",
        },
        {
          id: 3,
          question: "Which CSS property is used to change the text color of an element?",
          options: [
            "A) font-color",
            "B) text-color",
            "C) color",
            "D) text-style",
          ],
          correctAnswer: "C) color",
        },
        {
          id: 4,
          question: "In CSS, which property is used to control the space between the content and the border of an element?",
          options: [
            "A) margin",
            "B) padding",
            "C) border-spacing",
            "D) spacing",
          ],
          correctAnswer: "B) padding",
        },
        {
          id: 5,
          question: "What is the correct CSS syntax to set the font family of an element to 'Arial'?",
          options: [
            "A) font-family: Arial;",
            "B) font: Arial;",
            "C) family: Arial;",
            "D) font-type: Arial;",
          ],
          correctAnswer: "A) font-family: Arial;",
        },
        {
          id: 6,
          question: "Which CSS value is used to make an element transparent?",
          options: [
            "A) transparent",
            "B) opacity: 0;",
            "C) visibility: hidden;",
            "D) clear: both;",
          ],
          correctAnswer: "B) opacity: 0;",
        },
        {
          id: 7,
          question: "What is the purpose of the CSS display property?",
          options: [
            "A) It controls the element's background color.",
            "B) It controls how an element is displayed in the browser.",
            "C) It defines the font size of the element's text.",
            "D) It sets the width of an element.",
          ],
          correctAnswer: "B) It controls how an element is displayed in the browser.",
        },
        {
          id: 8,
          question: "In CSS, what does the 'cascading' in 'Cascading Style Sheets' refer to?",
          options: [
            "A) The hierarchical structure of HTML documents.",
            "B) The process of combining multiple style rules to determine the final style of an element.",
            "C) The use of cascading waterfalls in web design.",
            "D) The animation effects applied to elements.",
          ],
          correctAnswer: "B) The process of combining multiple style rules to determine the final style of an element.",
        },
        {
          id: 9,
          question: "Which CSS selector has the highest specificity?",
          options: [
            "A) Tag selectors (e.g., div)",
            "B) Class selectors (e.g., .my-class)",
            "C) ID selectors (e.g., #my-id)",
            "D) Universal selector (*)",
          ],
          correctAnswer: "C) ID selectors (e.g., #my-id)",
        },
        {
          id: 10,
          question: "How can you apply CSS to an HTML element with the class 'highlight'?",
          options: [
            "A) .highlight { }",
            "B) #highlight { }",
            "C) highlight { }",
            "D) class.highlight { }",
          ],
          correctAnswer: "A) .highlight { }",
        },
        {
          id: 11,
          question: "Which CSS property is used to control the space between lines of text within an element?",
          options: [
            "A) line-height",
            "B) text-spacing",
            "C) line-spacing",
            "D) letter-spacing",
          ],
          correctAnswer: "A) line-height",
        },
        {
          id: 12,
          question: "What is the purpose of the CSS z-index property?",
          options: [
            "A) It sets the background color of an element.",
            "B) It controls the order in which elements are layered on top of each other in a 2D space.",
            "C) It defines the width of an element.",
            "D) It controls the rotation of an element.",
          ],
          correctAnswer: "B) It controls the order in which elements are layered on top of each other in a 2D space.",
        },
        {
          id: 13,
          question: "Which CSS property is used to create rounded corners on an element?",
          options: [
            "A) border-radius",
            "B) corner-radius",
            "C) rounded-corners",
            "D) border-style",
          ],
          correctAnswer: "A) border-radius",
        },
        {
          id: 14,
          question: "What is the CSS pseudo-class used to select an element when a user hovers over it?",
          options: [
            "A) :hover",
            "B) :active",
            "C) :focus",
            "D) :visited",
          ],
          correctAnswer: "A) :hover",
        },
        {
          id: 15,
          question: "Which CSS property is used to center an element horizontally within its parent container?",
          options: [
            "A) margin: auto;",
            "B) text-align: center;",
            "C) position: center;",
            "D) align: center;",
          ],
          correctAnswer: "A) margin: auto;",
        },
        {
          id: 16,
          question: "Which CSS property is used to specify the background image of an element?",
          options: [
            "A) background-image",
            "B) image: url();",
            "C) bg-image",
            "D) url: background;",
          ],
          correctAnswer: "A) background-image",
        },
        {
          id: 17,
          question: "In CSS, which unit of measurement is relative to the font size of the parent element?",
          options: [
            "A) pixels (px)",
            "B) em",
            "C) inches (in)",
            "D) centimeters (cm)",
          ],
          correctAnswer: "B) em",
        },
        {
          id: 18,
          question: "What is the correct way to comment out CSS code?",
          options: [
            "A) <!-- This is a comment -->",
            "B) /* This is a comment */",
            "C) // This is a comment",
            "D) # This is a comment",
          ],
          correctAnswer: "B) /* This is a comment */",
        },
        {
          id: 19,
          question: "Which CSS property is used to specify the color of text decorations, such as underlines and overlines?",
          options: [
            "A) text-decoration-color",
            "B) text-color-decoration",
            "C) decoration-color",
            "D) underline-color",
          ],
          correctAnswer: "A) text-decoration-color",
        },
        {
          id: 20,
          question: "In CSS, what does the 'box-sizing' property control?",
          options: [
            "A) The shape of an element's border box.",
            "B) How an element's dimensions are calculated, including or excluding padding and border.",
            "C) The visibility of an element's box model.",
            "D) The border style of an element.",
          ],
          correctAnswer: "B) How an element's dimensions are calculated, including or excluding padding and border.",
        },
        {
          id: 21,
          question: "Which CSS property is used to create a drop shadow effect on an element?",
          options: [
            "A) shadow: drop;",
            "B) box-shadow;",
            "C) text-shadow;",
            "D) drop-shadow;",
          ],
          correctAnswer: "B) box-shadow;",
        },
        {
          id: 22,
          question: "What is the correct CSS syntax to change the background color of a link when it is clicked?",
          options: [
            "A) a:active { background-color: red; }",
            "B) a:hover { background-color: red; }",
            "C) a:clicked { background-color: red; }",
            "D) a:focus { background-color: red; }",
          ],
          correctAnswer: "A) a:active { background-color: red; }",
        },
        {
          id: 23,
          question: "Which CSS property is used to create an animation effect?",
          options: [
            "A) transition",
            "B) animate",
            "C) transform",
            "D) animation",
          ],
          correctAnswer: "D) animation",
        },
        {
          id: 24,
          question: "How can you center-align text within an element horizontally?",
          options: [
            "A) text-align: center;",
            "B) align-text: center;",
            "C) horizontal-align: center;",
            "D) center-text: horizontal;",
          ],
          correctAnswer: "A) text-align: center;",
        },
        {
          id: 25,
          question: "Which CSS property is used to control the order of an element's content and its neighboring elements?",
          options: [
            "A) order",
            "B) arrange",
            "C) position",
            "D) align",
          ],
          correctAnswer: "A) order",
        },
        {
          id: 26,
          question: "What is the purpose of the CSS float property?",
          options: [
            "A) It controls the opacity of an element.",
            "B) It specifies whether an element should be displayed as a block or inline element.",
            "C) It controls the horizontal alignment of an element.",
            "D) It allows an element to be taken out of the normal flow of the document and positioned to the left or right.",
          ],
          correctAnswer: "D) It allows an element to be taken out of the normal flow of the document and positioned to the left or right.",
        },
        {
          id: 27,
          question: "Which CSS property is used to specify the maximum width of an element?",
          options: [
            "A) width",
            "B) max-width",
            "C) min-width",
            "D) element-width",
          ],
          correctAnswer: "B) max-width",
        },
        {
          id: 28,
          question: "In CSS, which property is used to create a gradient background?",
          options: [
            "A) background-color",
            "B) background-image",
            "C) background-gradient",
            "D) background: linear-gradient();",
          ],
          correctAnswer: "D) background: linear-gradient();",
        },
        {
          id: 29,
          question: "Which CSS pseudo-element is used to select the first line of text within an element?",
          options: [
            "A) :first-child",
            "B) :first-line",
            "C) :first-of-type",
            "D) :first-text",
          ],
          correctAnswer: "B) :first-line",
        },
        {
          id: 30,
          question: "What is the correct way to include an external CSS file in an HTML document?",
          options: [
            "A) <style src='style.css'></style>",
            "B) <link rel='stylesheet' href='style.css'>",
            "C) <script src='style.css'></script>",
            "D) <css href='style.css'></css>",
          ],
          correctAnswer: "B) <link rel='stylesheet' href='style.css'>",
        },
        // Add more questions for subchapter 1.2 as needed
      ],
      "1.3": [
        {
          id: 1,
          question: "What is Inline CSS?",
          options: [
            "A) CSS applied directly in HTML tags",
            "B) CSS included within a separate .css file",
            "C) CSS included using the <style> tag",
            "D) CSS framework",
          ],
          correctAnswer: "A) CSS applied directly in HTML tags",
        },
        {
          id: 2,
          question: "What is the primary advantage of using Inline CSS?",
          options: [
            "A) Easier maintenance",
            "B) Faster page loading",
            "C) Greater specificity",
            "D) Improved organization",
          ],
          correctAnswer: "C) Greater specificity",
        },
        {
          id: 3,
          question: "What is the main drawback of using Inline CSS?",
          options: [
            "A) It cannot override External CSS.",
            "B) It makes the HTML code less readable.",
            "C) It increases page load time.",
            "D) It doesn't support media queries.",
          ],
          correctAnswer: "B) It makes the HTML code less readable.",
        },
        {
          id: 4,
          question: "Where is Internal CSS defined?",
          options: [
            "A) In a separate .css file",
            "B) Within the HTML <head> section",
            "C) Directly within HTML tags",
            "D) In an external JavaScript file",
          ],
          correctAnswer: "B) Within the HTML <head> section",
        },
        {
          id: 5,
          question: "Which CSS approach is recommended for applying styles to multiple web pages?",
          options: [
            "A) Inline CSS",
            "B) Internal CSS",
            "C) External CSS",
            "D) None of the above",
          ],
          correctAnswer: "C) External CSS",
        },
        {
          id: 6,
          question: "What is the primary benefit of External CSS?",
          options: [
            "A) Improved page load speed",
            "B) Easier maintenance",
            "C) Greater specificity",
            "D) Enhanced SEO",
          ],
          correctAnswer: "B) Easier maintenance",
        },
        {
          id: 7,
          question: "Which CSS property is used to set the background color of an element?",
          options: [
            "A) color",
            "B) text-color",
            "C) background-color",
            "D) bgcolor",
          ],
          correctAnswer: "C) background-color",
        },
        {
          id: 8,
          question: "What is the correct syntax to link an external CSS file to an HTML document?",
          options: [
            '<link href="styles.css" rel="stylesheet">',
            '<style src="styles.css">',
            '<css href="styles.css">',
            '<link rel="styles.css" type="text/css">',
          ],
          correctAnswer: '<link href="styles.css" rel="stylesheet">',
        },
        {
          id: 9,
          question: "Which CSS selector has the highest specificity?",
          options: [
            "A) Class selector",
            "B) ID selector",
            "C) Tag selector",
            "D) Universal selector",
          ],
          correctAnswer: "B) ID selector",
        },
        {
          id: 10,
          question: "Which of the following is NOT a best practice for organizing CSS code?",
          options: [
            "A) Using meaningful class and ID names",
            "B) Minimizing the use of comments",
            "C) Grouping related styles together",
            "D) Using indentation for readability",
          ],
          correctAnswer: "B) Minimizing the use of comments",
        },
        {
          id: 11,
          question: "What is the purpose of the 'box-sizing' property in CSS?",
          options: [
            "A) To set the element's width and height",
            "B) To define the element's position",
            "C) To control the element's box model",
            "D) To specify the font size",
          ],
          correctAnswer: "C) To control the element's box model",
        },
        {
          id: 12,
          question: "Which CSS property is used to add spacing between the letters of text?",
          options: [
            "A) text-align",
            "B) text-decoration",
            "C) letter-spacing",
            "D) word-spacing",
          ],
          correctAnswer: "C) letter-spacing",
        },
        {
          id: 13,
          question: "Which CSS property is used to specify the space between lines of text?",
          options: [
            "A) line-height",
            "B) text-indent",
            "C) line-spacing",
            "D) text-line",
          ],
          correctAnswer: "A) line-height",
        },
        {
          id: 14,
          question: "What is the purpose of the CSS 'float' property?",
          options: [
            "A) To control the position of an element within its container",
            "B) To create animations in CSS",
            "C) To change the font of an element",
            "D) To add a border to an element",
          ],
          correctAnswer: "A) To control the position of an element within its container",
        },
        {
          id: 15,
          question: "Which CSS property is used to add shadows to text or elements?",
          options: [
            "A) shadow-effect",
            "B) text-shadow",
            "C) box-shadow",
            "D) element-shadow",
          ],
          correctAnswer: "B) text-shadow",
        },
        {
          id: 16,
          question: "What does the 'z-index' property in CSS control?",
          options: [
            "A) Text alignment",
            "B) Element visibility",
            "C) Element stacking order",
            "D) Font size",
          ],
          correctAnswer: "C) Element stacking order",
        },
        {
          id: 17,
          question: "Which CSS property is used to set the style of an underline on text?",
          options: [
            "A) text-decoration-style",
            "B) text-decoration-color",
            "C) text-decoration-line",
            "D) text-decoration-type",
          ],
          correctAnswer: "C) text-decoration-line",
        },
        {
          id: 18,
          question: "What is the purpose of the CSS 'media queries'?",
          options: [
            "A) To apply styles only to printed documents",
            "B) To apply styles based on the device's characteristics",
            "C) To apply styles only to mobile devices",
            "D) To apply styles to all devices indiscriminately",
          ],
          correctAnswer: "B) To apply styles based on the device's characteristics",
        },
        {
          id: 19,
          question: "Which CSS property is used to change the color of text?",
          options: [
            "A) text-color",
            "B) color",
            "C) font-color",
            "D) text-style",
          ],
          correctAnswer: "B) color",
        },
        {
          id: 20,
          question: "What is the correct way to comment out CSS code?",
          options: [
            "A) /* This is a CSS comment */",
            "B) // This is a CSS comment //",
            "C) <!-- This is a CSS comment -->",
            "D) # This is a CSS comment #",
          ],
          correctAnswer: "A) /* This is a CSS comment */",
        },
        {
          id: 21,
          question: "Which CSS property is used to specify the font family for text?",
          options: [
            "A) text-font",
            "B) font-family",
            "C) text-family",
            "D) font-style",
          ],
          correctAnswer: "B) font-family",
        },
        {
          id: 22,
          question: "In CSS, what does the 'opacity' property control?",
          options: [
            "A) The element's font size",
            "B) The element's text color",
            "C) The element's transparency",
            "D) The element's border width",
          ],
          correctAnswer: "C) The element's transparency",
        },
        {
          id: 23,
          question: "Which CSS property is used to create rounded corners on elements?",
          options: [
            "A) border-radius",
            "B) corner-radius",
            "C) element-rounding",
            "D) curve-border",
          ],
          correctAnswer: "A) border-radius",
        },
        {
          id: 24,
          question: "What is the purpose of the 'position' property in CSS?",
          options: [
            "A) To control the element's background image",
            "B) To specify the element's font size",
            "C) To control the element's layout in relation to its parent",
            "D) To change the element's text color",
          ],
          correctAnswer: "C) To control the element's layout in relation to its parent",
        },
        {
          id: 25,
          question: "Which CSS property is used to set the width of an element's border?",
          options: [
            "A) border-width",
            "B) border-style",
            "C) border-color",
            "D) border-size",
          ],
          correctAnswer: "A) border-width",
        },
        {
          id: 26,
          question: "What is the purpose of the 'display' property in CSS?",
          options: [
            "A) To control an element's visibility",
            "B) To specify the font size of text",
            "C) To change the element's background color",
            "D) To define how an element should be rendered in the layout",
          ],
          correctAnswer: "D) To define how an element should be rendered in the layout",
        },
        {
          id: 27,
          question: "Which CSS property is used to specify the amount of space outside an element's border?",
          options: [
            "A) margin",
            "B) padding",
            "C) spacing",
            "D) gutter",
          ],
          correctAnswer: "A) margin",
        },
        {
          id: 28,
          question: "What is the purpose of the 'clear' property in CSS?",
          options: [
            "A) To set the background color of an element",
            "B) To clear the contents of an element",
            "C) To control the layout of elements in relation to floated elements",
            "D) To increase the font size of text",
          ],
          correctAnswer: "C) To control the layout of elements in relation to floated elements",
        },
        {
          id: 29,
          question: "Which CSS property is used to hide an element from the page layout without removing it from the DOM?",
          options: [
            "A) display: none;",
            "B) visibility: hidden;",
            "C) opacity: 0;",
            "D) position: absolute;",
          ],
          correctAnswer: "B) visibility: hidden;",
        },
        {
          id: 30,
          question: "What is the recommended way to include CSS for the best separation of concerns and maintainability?",
          options: [
            "A) Inline CSS",
            "B) Internal CSS",
            "C) External CSS",
            "D) All of the above",
          ],
          correctAnswer: "C) External CSS",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },
    //chapter 1 ended


    2: {
      // Chapter 1
      "2.1": [
        {
          id: 1,
          question: "Which property is used to set the background color of an element?",
          options: [
            "A) background-color",
            "B) color",
            "C) background",
            "D) bgcolor",
          ],
          correctAnswer: "A) background-color",
        },
        {
          id: 2,
          question: "How do you specify a background image in CSS?",
          options: [
            "A) background-image",
            "B) image-background",
            "C) bg-image",
            "D) image",
          ],
          correctAnswer: "A) background-image",
        },
        {
          id: 3,
          question: "Which CSS property is used to set the font size?",
          options: [
            "A) font-size",
            "B) text-size",
            "C) size",
            "D) font-style",
          ],
          correctAnswer: "A) font-size",
        },
        {
          id: 4,
          question: "What is the default value for the font-size property in CSS?",
          options: [
            "A) 10px",
            "B) 12px",
            "C) 14px",
            "D) 16px",
          ],
          correctAnswer: "B) 12px",
        },
        {
          id: 5,
          question: "How do you make text bold in CSS?",
          options: [
            "A) font-weight: bold;",
            "B) text-weight: bold;",
            "C) bold: true;",
            "D) weight: bold;",
          ],
          correctAnswer: "A) font-weight: bold;",
        },
        {
          id: 6,
          question: "Which property is used to add space inside an element's border?",
          options: [
            "A) padding",
            "B) margin",
            "C) space",
            "D) border-space",
          ],
          correctAnswer: "A) padding",
        },
        {
          id: 7,
          question: "How do you set the color of the text in CSS?",
          options: [
            "A) text-color",
            "B) color",
            "C) font-color",
            "D) text-style",
          ],
          correctAnswer: "B) color",
        },
        {
          id: 8,
          question: "Which property is used to create a border around an element?",
          options: [
            "A) border-style",
            "B) border",
            "C) border-width",
            "D) border-color",
          ],
          correctAnswer: "B) border",
        },
        {
          id: 9,
          question: "What is the default value for the border-style property in CSS?",
          options: [
            "A) none",
            "B) solid",
            "C) dashed",
            "D) dotted",
          ],
          correctAnswer: "A) none",
        },
        {
          id: 10,
          question: "How do you set the left margin of an element to 20 pixels in CSS?",
          options: [
            "A) margin-left: 20px;",
            "B) margin: 20px;",
            "C) padding-left: 20px;",
            "D) padding: 20px;",
          ],
          correctAnswer: "A) margin-left: 20px;",
        },
        {
          id: 11,
          question: "Which property is used to align text to the right in CSS?",
          options: [
            "A) text-align: right;",
            "B) align: right;",
            "C) text-right: true;",
            "D) align-right: true;",
          ],
          correctAnswer: "A) text-align: right;",
        },
        {
          id: 12,
          question: "What is the correct way to add multiple background colors to an element?",
          options: [
            "A) background-color: red blue;",
            "B) background-color: red; background-color: blue;",
            "C) background-color: red, blue;",
            "D) background-color: red | blue;",
          ],
          correctAnswer: "B) background-color: red; background-color: blue;",
        },
        {
          id: 13,
          question: "How do you set a border radius to create rounded corners in CSS?",
          options: [
            "A) border-corner: radius;",
            "B) border-radius: 10px;",
            "C) radius: 10px;",
            "D) corner-radius: 10px;",
          ],
          correctAnswer: "B) border-radius: 10px;",
        },
        {
          id: 14,
          question: "Which property is used to make text italic in CSS?",
          options: [
            "A) font-style: italic;",
            "B) italic: true;",
            "C) style: italic;",
            "D) text-style: italic;",
          ],
          correctAnswer: "A) font-style: italic;",
        },
        {
          id: 15,
          question: "What is the correct way to add a shadow to text in CSS?",
          options: [
            "A) text-shadow: 2px 2px 2px #000;",
            "B) shadow: 2px 2px 2px #000;",
            "C) box-shadow: 2px 2px 2px #000;",
            "D) text: shadow 2px 2px 2px #000;",
          ],
          correctAnswer: "A) text-shadow: 2px 2px 2px #000;",
        },
        {
          id: 16,
          question: "How do you set a fixed background image that doesn't scroll with the page?",
          options: [
            "A) background-repeat: no-repeat;",
            "B) background-attachment: fixed;",
            "C) background-fixed: true;",
            "D) fixed-background: true;",
          ],
          correctAnswer: "B) background-attachment: fixed;",
        },
        {
          id: 17,
          question: "Which property is used to specify the space between lines of text?",
          options: [
            "A) line-height",
            "B) spacing",
            "C) line-spacing",
            "D) text-spacing",
          ],
          correctAnswer: "A) line-height",
        },
        {
          id: 18,
          question: "What is the correct way to center an element horizontally in CSS?",
          options: [
            "A) margin: auto;",
            "B) align: center;",
            "C) center: horizontal;",
            "D) horizontal-align: center;",
          ],
          correctAnswer: "A) margin: auto;",
        },
        {
          id: 19,
          question: "How do you apply a hover effect to a link in CSS?",
          options: [
            "A) a:hover { }",
            "B) a.hover { }",
            "C) a:hover-effect { }",
            "D) hover: a { }",
          ],
          correctAnswer: "A) a:hover { }",
        },
        {
          id: 20,
          question: "What is the correct way to specify multiple font families in CSS?",
          options: [
            "A) font-family: Arial, sans-serif;",
            "B) font: Arial, sans-serif;",
            "C) family: Arial, sans-serif;",
            "D) font-type: Arial, sans-serif;",
          ],
          correctAnswer: "A) font-family: Arial, sans-serif;",
        },
        {
          id: 21,
          question: "Which property is used to set the opacity of an element in CSS?",
          options: [
            "A) opacity",
            "B) transparent",
            "C) visibility",
            "D) alpha",
          ],
          correctAnswer: "A) opacity",
        },
        {
          id: 22,
          question: "How do you set the width of a border in CSS?",
          options: [
            "A) border-width",
            "B) border-size",
            "C) border: 2px;",
            "D) width: 2px;",
          ],
          correctAnswer: "A) border-width",
        },
        {
          id: 23,
          question: "What is the correct way to apply a transition to an element in CSS?",
          options: [
            "A) transition: property duration timing-function delay;",
            "B) transition: property duration timing-function;",
            "C) animate: property duration timing-function;",
            "D) transition-effect: property duration timing-function;",
          ],
          correctAnswer: "B) transition: property duration timing-function;",
        },
        {
          id: 24,
          question: "How do you hide an element in CSS without removing it from the layout flow?",
          options: [
            "A) visibility: hidden;",
            "B) display: none;",
            "C) hidden: true;",
            "D) opacity: 0;",
          ],
          correctAnswer: "A) visibility: hidden;",
        },
        {
          id: 25,
          question: "What is the correct way to set a background color using a hexadecimal value?",
          options: [
            "A) background-color: #FF5733;",
            "B) background-color: rgb(255, 87, 51);",
            "C) background-color: red;",
            "D) bg-color: #FF5733;",
          ],
          correctAnswer: "A) background-color: #FF5733;",
        },
        {
          id: 26,
          question: "How do you add a box shadow to an element in CSS?",
          options: [
            "A) box-shadow: 2px 2px 2px #000;",
            "B) shadow: 2px 2px 2px #000;",
            "C) element-shadow: 2px 2px 2px #000;",
            "D) shadow-box: 2px 2px 2px #000;",
          ],
          correctAnswer: "A) box-shadow: 2px 2px 2px #000;",
        },
        {
          id: 27,
          question: "Which property is used to set the thickness of a border in CSS?",
          options: [
            "A) border-width",
            "B) border-thickness",
            "C) thickness",
            "D) border-style",
          ],
          correctAnswer: "A) border-width",
        },
        {
          id: 28,
          question: "How do you apply a gradient background to an element in CSS?",
          options: [
            "A) background: linear-gradient(red, blue);",
            "B) gradient-background: red, blue;",
            "C) background-gradient: red, blue;",
            "D) gradient: red, blue;",
          ],
          correctAnswer: "A) background: linear-gradient(red, blue);",
        },
        {
          id: 29,
          question: "What is the correct way to add a link to an HTML element in CSS?",
          options: [
            "A) a { }",
            "B) link { }",
            "C) a.link { }",
            "D) hyperlink { }",
          ],
          correctAnswer: "A) a { }",
        },
        {
          id: 30,
          question: "Which property is used to set the space between the border and the content inside an element?",
          options: [
            "A) padding",
            "B) margin",
            "C) border-spacing",
            "D) space",
          ],
          correctAnswer: "A) padding",
        },
        // Add more questions for subchapter 1.1 as needed
      ],


      "2.2": [
        {
          id: 1,
          question: "What is the purpose of padding in CSS?",
          options: [
            "A) To create space between the content and the border",
            "B) To create space outside the border",
            "C) To create space between elements",
            "D) To set the background color of an element",
          ],
          correctAnswer: "A) To create space between the content and the border",
        },
        {
          id: 2,
          question: "Which CSS property is used to set the thickness of the border?",
          options: [
            "A) border-thickness",
            "B) border-width",
            "C) border-size",
            "D) border-style",
          ],
          correctAnswer: "B) border-width",
        },
        {
          id: 3,
          question: "What is the default value of the box-sizing property in CSS?",
          options: [
            "A) content-box",
            "B) padding-box",
            "C) border-box",
            "D) margin-box",
          ],
          correctAnswer: "A) content-box",
        },
        {
          id: 4,
          question: "Which property is used to set the space between an element's border and its surrounding elements?",
          options: [
            "A) padding",
            "B) margin",
            "C) border-spacing",
            "D) spacing",
          ],
          correctAnswer: "B) margin",
        },
        {
          id: 5,
          question: "In CSS, which property is used to control the space between individual characters in a text element?",
          options: [
            "A) letter-spacing",
            "B) word-spacing",
            "C) line-height",
            "D) margin",
          ],
          correctAnswer: "A) letter-spacing",
        },
        {
          id: 6,
          question: "How does the box-sizing property value 'border-box' affect the element's dimensions?",
          options: [
            "A) It includes padding and border in the element's total width and height.",
            "B) It includes only the content in the element's total width and height.",
            "C) It includes only the border in the element's total width and height.",
            "D) It includes only the margin in the element's total width and height.",
          ],
          correctAnswer: "A) It includes padding and border in the element's total width and height.",
        },
        {
          id: 7,
          question: "Which CSS property is used to set the color of an element's border?",
          options: [
            "A) border-color",
            "B) border-style",
            "C) border",
            "D) border-width",
          ],
          correctAnswer: "A) border-color",
        },
        {
          id: 8,
          question: "In the box model, which area is the actual content of the element located?",
          options: [
            "A) Content Area",
            "B) Padding Area",
            "C) Border Area",
            "D) Margin Area",
          ],
          correctAnswer: "A) Content Area",
        },
        {
          id: 9,
          question: "What is the purpose of the CSS property 'box-shadow'?",
          options: [
            "A) It adds a shadow to the content area of an element.",
            "B) It adds a shadow to the border of an element.",
            "C) It adds a shadow to the margin of an element.",
            "D) It adds a shadow to the padding of an element.",
          ],
          correctAnswer: "B) It adds a shadow to the border of an element.",
        },
        {
          id: 10,
          question: "Which CSS property is used to set the space between lines of text within an element?",
          options: [
            "A) letter-spacing",
            "B) word-spacing",
            "C) line-height",
            "D) margin",
          ],
          correctAnswer: "C) line-height",
        },
        {
          id: 11,
          question: "How can you set all the margin properties of an element to the same value in CSS?",
          options: [
            "A) margin: auto;",
            "B) margin: inherit;",
            "C) margin: initial;",
            "D) margin: value;",
          ],
          correctAnswer: "D) margin: value;",
        },
        {
          id: 12,
          question: "Which CSS property is used to set the space between the individual cells of a table?",
          options: [
            "A) border-spacing",
            "B) padding",
            "C) margin",
            "D) spacing",
          ],
          correctAnswer: "A) border-spacing",
        },
        {
          id: 13,
          question: "What is the purpose of the 'clear' property in CSS?",
          options: [
            "A) It specifies whether an element should float or not.",
            "B) It specifies whether an element should be on a new line or not.",
            "C) It specifies whether an element should have a shadow or not.",
            "D) It specifies whether an element should have a border or not.",
          ],
          correctAnswer: "B) It specifies whether an element should be on a new line or not.",
        },
        {
          id: 14,
          question: "Which CSS property is used to set the style of an element's border?",
          options: [
            "A) border-color",
            "B) border-style",
            "C) border",
            "D) border-width",
          ],
          correctAnswer: "B) border-style",
        },
        {
          id: 15,
          question: "In CSS, which property is used to control the space between words in a text element?",
          options: [
            "A) letter-spacing",
            "B) word-spacing",
            "C) line-height",
            "D) margin",
          ],
          correctAnswer: "B) word-spacing",
        },
        {
          id: 16,
          question: "How can you set all the padding properties of an element to the same value in CSS?",
          options: [
            "A) padding: auto;",
            "B) padding: inherit;",
            "C) padding: initial;",
            "D) padding: value;",
          ],
          correctAnswer: "D) padding: value;",
        },
        {
          id: 17,
          question: "What does the CSS property 'box-sizing: border-box;' do?",
          options: [
            "A) It includes padding and border in the element's total width and height.",
            "B) It includes only the content in the element's total width and height.",
            "C) It includes only the border in the element's total width and height.",
            "D) It includes only the margin in the element's total width and height.",
          ],
          correctAnswer: "A) It includes padding and border in the element's total width and height.",
        },
        {
          id: 18,
          question: "Which CSS property is used to set the color of an element's background?",
          options: [
            "A) background-color",
            "B) background-image",
            "C) background",
            "D) background-style",
          ],
          correctAnswer: "A) background-color",
        },
        {
          id: 19,
          question: "What is the purpose of the 'float' property in CSS?",
          options: [
            "A) It specifies whether an element should float or not.",
            "B) It specifies whether an element should be on a new line or not.",
            "C) It specifies whether an element should have a shadow or not.",
            "D) It specifies whether an element should have a border or not.",
          ],
          correctAnswer: "A) It specifies whether an element should float or not.",
        },
        {
          id: 20,
          question: "Which CSS property is used to specify the minimum width of an element?",
          options: [
            "A) min-width",
            "B) width-min",
            "C) min-size",
            "D) minimum-width",
          ],
          correctAnswer: "A) min-width",
        },
        {
          id: 21,
          question: "In CSS, which property is used to set the space between the border and the content of an element?",
          options: [
            "A) border-spacing",
            "B) padding",
            "C) margin",
            "D) spacing",
          ],
          correctAnswer: "B) padding",
        },
        {
          id: 22,
          question: "What is the purpose of the 'overflow' property in CSS?",
          options: [
            "A) It specifies whether an element should float or not.",
            "B) It specifies how the content should behave when it's larger than the container.",
            "C) It specifies whether an element should have a shadow or not.",
            "D) It specifies whether an element should have a border or not.",
          ],
          correctAnswer: "B) It specifies how the content should behave when it's larger than the container.",
        },
        {
          id: 23,
          question: "Which CSS property is used to set the space between the rows of a table?",
          options: [
            "A) row-spacing",
            "B) line-height",
            "C) border-spacing",
            "D) row-gap",
          ],
          correctAnswer: "C) border-spacing",
        },
        {
          id: 24,
          question: "How can you set all the margin properties of an element to their default values in CSS?",
          options: [
            "A) margin: auto;",
            "B) margin: inherit;",
            "C) margin: initial;",
            "D) margin: unset;",
          ],
          correctAnswer: "C) margin: initial;",
        },
        {
          id: 25,
          question: "What is the purpose of the 'position' property in CSS?",
          options: [
            "A) It specifies whether an element should float or not.",
            "B) It specifies how an element should be positioned on a page.",
            "C) It specifies whether an element should have a shadow or not.",
            "D) It specifies whether an element should have a border or not.",
          ],
          correctAnswer: "B) It specifies how an element should be positioned on a page.",
        },
        {
          id: 26,
          question: "Which CSS property is used to set the space between elements?",
          options: [
            "A) padding",
            "B) margin",
            "C) border-spacing",
            "D) spacing",
          ],
          correctAnswer: "B) margin",
        },
        {
          id: 27,
          question: "What is the purpose of the 'z-index' property in CSS?",
          options: [
            "A) It specifies whether an element should float or not.",
            "B) It specifies the stack order of an element.",
            "C) It specifies whether an element should have a shadow or not.",
            "D) It specifies whether an element should have a border or not.",
          ],
          correctAnswer: "B) It specifies the stack order of an element.",
        },
        {
          id: 28,
          question: "Which CSS property is used to set the color of an element's text?",
          options: [
            "A) text-color",
            "B) color",
            "C) font-color",
            "D) text-style",
          ],
          correctAnswer: "B) color",
        },
        {
          id: 29,
          question: "In CSS, which property is used to set the space between the border and the surrounding elements?",
          options: [
            "A) border-spacing",
            "B) padding",
            "C) margin",
            "D) spacing",
          ],
          correctAnswer: "C) margin",
        },
        {
          id: 30,
          question: "What is the purpose of the 'display' property in CSS?",
          options: [
            "A) It specifies whether an element should float or not.",
            "B) It specifies how an element should be rendered.",
            "C) It specifies whether an element should have a shadow or not.",
            "D) It specifies whether an element should have a border or not.",
          ],
          correctAnswer: "B) It specifies how an element should be rendered.",
        },
      ],
      "2.3": [
        {
          id: 1,
          question: "Which CSS property is used to specify how an element should be displayed?",
          options: [
            "A) display",
            "B) position",
            "C) visibility",
            "D) float",
          ],
          correctAnswer: "A) display",
        },
        {
          id: 2,
          question: "Which value of the display property makes an element behave like an inline element, but it can have width and height?",
          options: [
            "A) inline",
            "B) inline-block",
            "C) block",
            "D) flex",
          ],
          correctAnswer: "B) inline-block",
        },
        {
          id: 3,
          question: "What is the default value of the position property in CSS?",
          options: [
            "A) static",
            "B) relative",
            "C) absolute",
            "D) fixed",
          ],
          correctAnswer: "A) static",
        },
        {
          id: 4,
          question: "Which value of the position property positions an element relative to its normal position?",
          options: [
            "A) relative",
            "B) static",
            "C) absolute",
            "D) fixed",
          ],
          correctAnswer: "A) relative",
        },
        {
          id: 5,
          question: "When using position: absolute, which ancestor does the element position itself relative to?",
          options: [
            "A) Parent element",
            "B) Body element",
            "C) Closest positioned ancestor",
            "D) Sibling element",
          ],
          correctAnswer: "C) Closest positioned ancestor",
        },
        {
          id: 6,
          question: "What is the purpose of the z-index property in CSS?",
          options: [
            "A) It specifies the transparency level of an element.",
            "B) It controls the stacking order of elements with a specified position.",
            "C) It sets the width and height of an element.",
            "D) It defines the rotation angle of an element.",
          ],
          correctAnswer: "B) It controls the stacking order of elements with a specified position.",
        },
        {
          id: 7,
          question: "Which value of the position property positions an element relative to the viewport?",
          options: [
            "A) relative",
            "B) static",
            "C) absolute",
            "D) fixed",
          ],
          correctAnswer: "D) fixed",
        },
        {
          id: 8,
          question: "When using position: fixed, the element's position is relative to:",
          options: [
            "A) Its closest ancestor with a specified position.",
            "B) The viewport.",
            "C) The body element.",
            "D) The parent element.",
          ],
          correctAnswer: "B) The viewport.",
        },
        {
          id: 9,
          question: "Which CSS property can be used to hide an element on a webpage?",
          options: [
            "A) display",
            "B) visibility",
            "C) opacity",
            "D) hidden",
          ],
          correctAnswer: "B) visibility",
        },
        {
          id: 10,
          question: "Which value of the float property makes an element float to the right of its container?",
          options: [
            "A) right",
            "B) left",
            "C) center",
            "D) none",
          ],
          correctAnswer: "A) right",
        },
        {
          id: 11,
          question: "How can you clear the float after a set of floating elements?",
          options: [
            "A) clear: both;",
            "B) float: clear;",
            "C) clear: left;",
            "D) clear: right;",
          ],
          correctAnswer: "A) clear: both;",
        },
        {
          id: 12,
          question: "Which property is used to control the space between the border of an element and its content?",
          options: [
            "A) padding",
            "B) margin",
            "C) border-spacing",
            "D) spacing",
          ],
          correctAnswer: "A) padding",
        },
        {
          id: 13,
          question: "In CSS, which property can be used to center an element horizontally within its container?",
          options: [
            "A) margin",
            "B) padding",
            "C) text-align",
            "D) align",
          ],
          correctAnswer: "C) text-align",
        },
        {
          id: 14,
          question: "What is the default value of the vertical-align property?",
          options: [
            "A) middle",
            "B) baseline",
            "C) top",
            "D) bottom",
          ],
          correctAnswer: "B) baseline",
        },
        {
          id: 15,
          question: "Which CSS property is used to control the stacking order of elements?",
          options: [
            "A) z-index",
            "B) position",
            "C) display",
            "D) order",
          ],
          correctAnswer: "A) z-index",
        },
        {
          id: 16,
          question: "Which value of the display property turns an element into a flexible container?",
          options: [
            "A) flex",
            "B) inline-flex",
            "C) block",
            "D) inline-block",
          ],
          correctAnswer: "A) flex",
        },
        {
          id: 17,
          question: "In a flex container, which property is used to specify how the remaining space should be distributed among the flex items?",
          options: [
            "A) justify-content",
            "B) align-items",
            "C) flex-grow",
            "D) flex-shrink",
          ],
          correctAnswer: "C) flex-grow",
        },
        {
          id: 18,
          question: "Which value of the position property positions an element relative to the initial containing block?",
          options: [
            "A) fixed",
            "B) relative",
            "C) absolute",
            "D) static",
          ],
          correctAnswer: "D) static",
        },
        {
          id: 19,
          question: "How can you center an element both horizontally and vertically using flexbox?",
          options: [
            "A) justify-content: center; align-items: center;",
            "B) text-align: center; vertical-align: middle;",
            "C) center: both;",
            "D) margin: auto;",
          ],
          correctAnswer: "A) justify-content: center; align-items: center;",
        },
        {
          id: 20,
          question: "Which CSS property is used to control the space between flex items?",
          options: [
            "A) flex-gap",
            "B) gap",
            "C) space-between",
            "D) margin",
          ],
          correctAnswer: "B) gap",
        },
        {
          id: 21,
          question: "How can you make an element take up the remaining space in a flex container?",
          options: [
            "A) flex: 1;",
            "B) flex-grow: 1;",
            "C) flex-shrink: 1;",
            "D) flex-basis: auto;",
          ],
          correctAnswer: "B) flex-grow: 1;",
        },
        {
          id: 22,
          question: "Which value of the position property positions an element relative to the viewport, but it's not affected by scrolling?",
          options: [
            "A) sticky",
            "B) fixed",
            "C) absolute",
            "D) relative",
          ],
          correctAnswer: "A) sticky",
        },
        {
          id: 23,
          question: "How can you create a grid layout using CSS?",
          options: [
            "A) display: grid;",
            "B) grid-layout: true;",
            "C) layout: grid;",
            "D) grid: true;",
          ],
          correctAnswer: "A) display: grid;",
        },
        {
          id: 24,
          question: "What is the purpose of the grid-template-columns property in CSS Grid Layout?",
          options: [
            "A) It sets the number of rows in a grid container.",
            "B) It defines the sizes of the columns in a grid container.",
            "C) It controls the space between grid items.",
            "D) It specifies the alignment of grid items.",
          ],
          correctAnswer: "B) It defines the sizes of the columns in a grid container.",
        },
        {
          id: 25,
          question: "How can you make an element overlap other elements in CSS?",
          options: [
            "A) position: absolute; z-index: 999;",
            "B) display: overlap;",
            "C) overlap: true;",
            "D) z-index: 999;",
          ],
          correctAnswer: "A) position: absolute; z-index: 999;",
        },
        {
          id: 26,
          question: "What is the purpose of the align-items property in a flex container?",
          options: [
            "A) It aligns flex items along the main axis.",
            "B) It aligns flex items along the cross axis.",
            "C) It controls the spacing between flex items.",
            "D) It sets the width of the flex container.",
          ],
          correctAnswer: "B) It aligns flex items along the cross axis.",
        },
        {
          id: 27,
          question: "Which value of the display property turns an element into a block-level container with inline children?",
          options: [
            "A) inline-block",
            "B) inline-flex",
            "C) block",
            "D) inline",
          ],
          correctAnswer: "B) inline-flex",
        },
        {
          id: 28,
          question: "How can you make an element take up the full height of its container in CSS?",
          options: [
            "A) height: 100%;",
            "B) height: auto;",
            "C) height: full;",
            "D) height: 100vh;",
          ],
          correctAnswer: "D) height: 100vh;",
        },
        {
          id: 29,
          question: "What does the position: sticky; property do in CSS?",
          options: [
            "A) It positions an element relative to the viewport.",
            "B) It keeps an element's position fixed even when scrolling.",
            "C) It sticks an element to the top of its container when scrolling.",
            "D) It floats an element to the right.",
          ],
          correctAnswer: "C) It sticks an element to the top of its container when scrolling.",
        },
        {
          id: 30,
          question: "How can you create a floating effect on an element using CSS?",
          options: [
            "A) float: left;",
            "B) position: float;",
            "C) display: floating;",
            "D) align: float;",
          ],
          correctAnswer: "A) float: left;",
        },
        // Add more questions for subchapter 1.2 as needed
      ],
      // Add more subchapters for Chapter 1 as needed
    },
    //chapter 2 ended




    3: {
      // Chapter 1
      "3.1": [
        {
          id: 1,
          question: "Which CSS property is used for creating layouts by floating elements?",
          options: [
            "A) float",
            "B) position",
            "C) layout",
            "D) display",
          ],
          correctAnswer: "A) float",
        },
        {
          id: 2,
          question: "What does the CSS property clear do?",
          options: [
            "A) It prevents elements from floating",
            "B) It sets the background color of an element",
            "C) It adjusts the vertical alignment of an element",
            "D) It applies a shadow to an element",
          ],
          correctAnswer: "A) It prevents elements from floating",
        },
        {
          id: 3,
          question: "Which value of clear will clear elements on both the left and the right sides?",
          options: [
            "A) both",
            "B) left",
            "C) right",
            "D) none",
          ],
          correctAnswer: "A) both",
        },
        {
          id: 4,
          question: "In Flexbox, which property is used to align items vertically within a container?",
          options: [
            "A) justify-content",
            "B) align-items",
            "C) flex-align",
            "D) vertical-align",
          ],
          correctAnswer: "B) align-items",
        },
        {
          id: 5,
          question: "Which Flexbox property is used to distribute extra space in a flex container when there is space available?",
          options: [
            "A) flex-grow",
            "B) flex-shrink",
            "C) flex-basis",
            "D) flex-wrap",
          ],
          correctAnswer: "A) flex-grow",
        },
        {
          id: 6,
          question: "In Grid layout, which property is used to set the size of a row or column?",
          options: [
            "A) grid-size",
            "B) grid-template",
            "C) grid-row",
            "D) grid-column",
          ],
          correctAnswer: "B) grid-template",
        },
        {
          id: 7,
          question: "How can you make a specific item take up the full height of a grid container in Grid layout?",
          options: [
            "A) grid-row: span 2;",
            "B) grid-column: span 2;",
            "C) grid-template-rows: auto;",
            "D) grid-template-columns: auto;",
          ],
          correctAnswer: "A) grid-row: span 2;",
        },
        {
          id: 8,
          question: "Which value of justify-content in Flexbox will center the items along the horizontal axis?",
          options: [
            "A) center",
            "B) space-between",
            "C) flex-start",
            "D) space-around",
          ],
          correctAnswer: "A) center",
        },
        {
          id: 9,
          question: "In a Grid layout, how can you place an item in the second row and third column?",
          options: [
            "A) grid-row: 2; grid-column: 3;",
            "B) grid-row: 3; grid-column: 2;",
            "C) grid-row: 2/3; grid-column: 3/4;",
            "D) grid-row: 3/4; grid-column: 2/3;",
          ],
          correctAnswer: "A) grid-row: 2; grid-column: 3;",
        },
        {
          id: 10,
          question: "Which Flexbox property is used to set the initial size of a flex item?",
          options: [
            "A) flex-grow",
            "B) flex-shrink",
            "C) flex-basis",
            "D) flex-wrap",
          ],
          correctAnswer: "C) flex-basis",
        },
        {
          id: 11,
          question: "In Grid layout, which property is used to specify the size of the gap between grid items?",
          options: [
            "A) grid-gap",
            "B) grid-space",
            "C) grid-margin",
            "D) grid-padding",
          ],
          correctAnswer: "A) grid-gap",
        },
        {
          id: 12,
          question: "Which Flexbox property is used to align a single flex item within a container?",
          options: [
            "A) align-content",
            "B) align-self",
            "C) justify-content",
            "D) flex-align",
          ],
          correctAnswer: "B) align-self",
        },
        {
          id: 13,
          question: "How can you make an element ignore the floating elements and appear below them?",
          options: [
            "A) float: none;",
            "B) clear: both;",
            "C) display: block;",
            "D) position: relative;",
          ],
          correctAnswer: "B) clear: both;",
        },
        {
          id: 14,
          question: "Which value of flex-wrap in Flexbox allows items to wrap onto multiple lines if needed?",
          options: [
            "A) wrap",
            "B) nowrap",
            "C) wrap-reverse",
            "D) flex-wrap",
          ],
          correctAnswer: "A) wrap",
        },
        {
          id: 15,
          question: "In Grid layout, which property is used to define named grid areas?",
          options: [
            "A) grid-areas",
            "B) grid-template",
            "C) grid-names",
            "D) grid-area-names",
          ],
          correctAnswer: "A) grid-areas",
        },
        {
          id: 16,
          question: "What is the default value of flex-direction in Flexbox?",
          options: [
            "A) row",
            "B) column",
            "C) row-reverse",
            "D) column-reverse",
          ],
          correctAnswer: "A) row",
        },
        {
          id: 17,
          question: "How can you center a block-level element horizontally in CSS?",
          options: [
            "A) margin: 0 auto;",
            "B) text-align: center;",
            "C) align: center;",
            "D) justify-content: center;",
          ],
          correctAnswer: "A) margin: 0 auto;",
        },
        {
          id: 18,
          question: "Which Flexbox property is used to distribute extra space along the main axis when items do not fill the container?",
          options: [
            "A) justify-content",
            "B) align-items",
            "C) flex-grow",
            "D) flex-shrink",
          ],
          correctAnswer: "A) justify-content",
        },
        {
          id: 19,
          question: "In Grid layout, which property is used to set the size of a grid track?",
          options: [
            "A) grid-track",
            "B) grid-template-rows/columns",
            "C) grid-row/column",
            "D) grid-gap",
          ],
          correctAnswer: "B) grid-template-rows/columns",
        },
        {
          id: 20,
          question: "How can you make a flex container arrange its items in a single row with the last item aligned to the right?",
          options: [
            "A) flex-direction: row-reverse;",
            "B) justify-content: flex-end;",
            "C) align-items: flex-end;",
            "D) align-content: flex-end;",
          ],
          correctAnswer: "B) justify-content: flex-end;",
        },
        {
          id: 21,
          question: "What is the correct way to define a flex container in CSS?",
          options: [
            "A) display: flex;",
            "B) display: inline-flex;",
            "C) flex: container;",
            "D) flexbox-container: true;",
          ],
          correctAnswer: "A) display: flex;",
        },
        {
          id: 22,
          question: "In Grid layout, which property is used to specify the minimum size of a grid track?",
          options: [
            "A) min-track-size",
            "B) grid-template-rows/columns",
            "C) minmax()",
            "D) grid-gap",
          ],
          correctAnswer: "C) minmax()",
        },
        {
          id: 23,
          question: "Which Flexbox property is used to align items along the cross axis when they do not take up all available space?",
          options: [
            "A) align-items",
            "B) align-content",
            "C) align-self",
            "D) justify-content",
          ],
          correctAnswer: "B) align-content",
        },
        {
          id: 24,
          question: "How can you make a flex container arrange its items in a column?",
          options: [
            "A) flex-direction: column;",
            "B) flex-direction: row;",
            "C) flex-direction: column-reverse;",
            "D) flex-direction: row-reverse;",
          ],
          correctAnswer: "A) flex-direction: column;",
        },
        {
          id: 25,
          question: "In Grid layout, which property is used to set the starting and ending positions of an item?",
          options: [
            "A) grid-start",
            "B) grid-end",
            "C) grid-row/column",
            "D) grid-area",
          ],
          correctAnswer: "D) grid-area",
        },
        {
          id: 26,
          question: "What is the purpose of the order property in Flexbox?",
          options: [
            "A) It changes the order of the flex items within the container.",
            "B) It sets the initial size of a flex item.",
            "C) It adjusts the spacing between flex items.",
            "D) It aligns flex items along the cross axis.",
          ],
          correctAnswer: "A) It changes the order of the flex items within the container.",
        },
        {
          id: 27,
          question: "In Grid layout, which property is used to set the size of a grid column?",
          options: [
            "A) grid-column-size",
            "B) grid-template-columns",
            "C) grid-column",
            "D) grid-track-size",
          ],
          correctAnswer: "B) grid-template-columns",
        },
        {
          id: 28,
          question: "How can you make a flex container arrange its items from right to left?",
          options: [
            "A) flex-direction: row-reverse;",
            "B) justify-content: flex-end;",
            "C) align-items: flex-end;",
            "D) align-content: flex-end;",
          ],
          correctAnswer: "A) flex-direction: row-reverse;",
        },
        {
          id: 29,
          question: "In Grid layout, which property is used to set the size of a grid row?",
          options: [
            "A) grid-row-size",
            "B) grid-template-rows",
            "C) grid-row",
            "D) grid-track-size",
          ],
          correctAnswer: "B) grid-template-rows",
        },
        {
          id: 30,
          question: "What is the default value of flex-wrap in Flexbox?",
          options: [
            "A) wrap",
            "B) nowrap",
            "C) wrap-reverse",
            "D) flex-wrap",
          ],
          correctAnswer: "B) nowrap",
        },
      ],
      "3.2": [
        
        {
          id: 1,
          question: "What is the purpose of using media queries in CSS?",
          options: [
            "A) To apply different styles based on screen size",
            "B) To add images to a webpage",
            "C) To create animations",
            "D) To define JavaScript functions",
          ],
          correctAnswer: "A) To apply different styles based on screen size",
        },
        {
          id: 2,
          question: "Which CSS property is commonly used to set the viewport width?",
          options: [
            "A) width",
            "B) viewport-width",
            "C) initial-scale",
            "D) device-width",
          ],
          correctAnswer: "C) initial-scale",
        },
        {
          id: 3,
          question: "What is the mobile-first approach in web design?",
          options: [
            "A) Designing for mobile devices first, then scaling up for larger screens",
            "B) Designing for desktop computers first, then adapting for mobile devices",
            "C) Ignoring mobile devices in web design",
            "D) Designing for tablets first, then adapting for other devices",
          ],
          correctAnswer: "A) Designing for mobile devices first, then scaling up for larger screens",
        },
        {
          id: 4,
          question: "Which CSS unit is commonly used for responsive design to ensure elements scale proportionally?",
          options: [
            "A) px (pixels)",
            "B) em",
            "C) vw (viewport width)",
            "D) %",
          ],
          correctAnswer: "B) em",
        },
        {
          id: 5,
          question: "When using a media query, what does max-width refer to?",
          options: [
            "A) The maximum width of the viewport",
            "B) The maximum width of the element",
            "C) The minimum width of the viewport",
            "D) The minimum width of the element",
          ],
          correctAnswer: "A) The maximum width of the viewport",
        },
        {
          id: 6,
          question: "Which media query expression targets devices with a screen width of 600 pixels or more?",
          options: [
            "A) (min-width: 600px)",
            "B) (max-width: 600px)",
            "C) (screen-width >= 600px)",
            "D) (screen-width <= 600px)",
          ],
          correctAnswer: "A) (min-width: 600px)",
        },
        {
          id: 7,
          question: "In CSS, what property is commonly used to hide an element on smaller screens?",
          options: [
            "A) visibility",
            "B) display",
            "C) hidden",
            "D) opacity",
          ],
          correctAnswer: "B) display",
        },
        {
          id: 8,
          question: "Which of the following is an example of a mobile-first CSS framework?",
          options: [
            "A) Bootstrap",
            "B) Foundation",
            "C) Materialize",
            "D) Bulma",
          ],
          correctAnswer: "A) Bootstrap",
        },
        {
          id: 9,
          question: "What is the purpose of using the @media rule in CSS?",
          options: [
            "A) To apply styles only when printing a webpage",
            "B) To apply styles based on media type and conditions",
            "C) To define keyframes for animations",
            "D) To specify font styles",
          ],
          correctAnswer: "B) To apply styles based on media type and conditions",
        },
        {
          id: 10,
          question: "Which CSS property is used to set a flexible, fluid layout based on percentages?",
          options: [
            "A) flex",
            "B) grid",
            "C) float",
            "D) width",
          ],
          correctAnswer: "D) width",
        },
        {
          id: 11,
          question: "In a mobile-first approach, which media query expression would be used to target larger screens?",
          options: [
            "A) (min-width: 768px)",
            "B) (max-width: 768px)",
            "C) (min-width: 320px)",
            "D) (max-width: 320px)",
          ],
          correctAnswer: "A) (min-width: 768px)",
        },
        {
          id: 12,
          question: "Which CSS unit represents 1% of the viewport width?",
          options: [
            "A) vw",
            "B) vh",
            "C) %w",
            "D) vh%",
          ],
          correctAnswer: "A) vw",
        },
        {
          id: 13,
          question: "When using a mobile-first approach, which CSS rule would apply to all screen sizes by default?",
          options: [
            "A) @media (min-width: 768px) { ... }",
            "B) body { ... }",
            "C) .container { ... }",
            "D) .mobile-only { ... }",
          ],
          correctAnswer: "B) body { ... }",
        },
        {
          id: 14,
          question: "Which CSS property is commonly used to create a flexible, responsive grid layout?",
          options: [
            "A) grid-template",
            "B) flexbox",
            "C) grid-layout",
            "D) float",
          ],
          correctAnswer: "B) flexbox",
        },
        {
          id: 15,
          question: "What is the purpose of using the initial-scale property in a meta viewport tag?",
          options: [
            "A) It sets the initial zoom level of the webpage",
            "B) It sets the initial font size of the webpage",
            "C) It sets the initial margin of the webpage",
            "D) It sets the initial color scheme of the webpage",
          ],
          correctAnswer: "A) It sets the initial zoom level of the webpage",
        },
        {
          id: 16,
          question: "Which CSS property is used to specify the order of flex items within a flex container?",
          options: [
            "A) order",
            "B) flex-order",
            "C) flex-item-order",
            "D) item-order",
          ],
          correctAnswer: "A) order",
        },
        {
          id: 17,
          question: "In a mobile-first approach, how would you target styles specifically for mobile devices?",
          options: [
            "A) Use the default styles without any media query",
            "B) Use a media query with max-width: 767px",
            "C) Use a media query with min-width: 768px",
            "D) Use a media query with min-width: 320px",
          ],
          correctAnswer: "A) Use the default styles without any media query",
        },
        {
          id: 18,
          question: "Which CSS property is used to create a sticky header that remains at the top of the page as the user scrolls?",
          options: [
            "A) position: fixed;",
            "B) position: relative;",
            "C) position: sticky;",
            "D) position: absolute;",
          ],
          correctAnswer: "C) position: sticky;",
        },
        {
          id: 19,
          question: "What is the purpose of using the @import rule in CSS?",
          options: [
            "A) To import external JavaScript files",
            "B) To import styles from another CSS file",
            "C) To define keyframes for animations",
            "D) To specify font styles",
          ],
          correctAnswer: "B) To import styles from another CSS file",
        },
        {
          id: 20,
          question: "Which CSS property is used to control the layout of child elements within a flex container?",
          options: [
            "A) flex-flow",
            "B) flex-direction",
            "C) justify-content",
            "D) align-items",
          ],
          correctAnswer: "B) flex-direction",
        },
        {
          id: 21,
          question: "In a mobile-first approach, which media query expression would target styles for tablets and larger screens?",
          options: [
            "A) (min-width: 768px)",
            "B) (max-width: 768px)",
            "C) (min-width: 320px)",
            "D) (max-width: 320px)",
          ],
          correctAnswer: "A) (min-width: 768px)",
        },
        {
          id: 22,
          question: "Which CSS property is used to create a responsive, multi-column layout?",
          options: [
            "A) column-count",
            "B) multi-column",
            "C) flexbox",
            "D) grid-template-columns",
          ],
          correctAnswer: "A) column-count",
        },
        {
          id: 23,
          question: "What is the purpose of using the viewport meta tag in HTML?",
          options: [
            "A) To define the screen resolution",
            "B) To set the initial zoom level of the webpage",
            "C) To specify the font size of the webpage",
            "D) To define the background color of the webpage",
          ],
          correctAnswer: "B) To set the initial zoom level of the webpage",
        },
        {
          id: 24,
          question: "In CSS, which property is commonly used to add space between elements?",
          options: [
            "A) margin",
            "B) padding",
            "C) space",
            "D) gap",
          ],
          correctAnswer: "A) margin",
        },
        {
          id: 25,
          question: "What is the purpose of using the flex-wrap property in a flex container?",
          options: [
            "A) To control the direction of flex items",
            "B) To specify the width of flex items",
            "C) To control whether flex items should wrap to the next line",
            "D) To determine the order of flex items",
          ],
          correctAnswer: "C) To control whether flex items should wrap to the next line",
        },
        {
          id: 26,
          question: "Which media query expression targets devices with a screen width of 320 pixels or less?",
          options: [
            "A) (max-width: 320px)",
            "B) (min-width: 320px)",
            "C) (screen-width <= 320px)",
            "D) (screen-width >= 320px)",
          ],
          correctAnswer: "A) (max-width: 320px)",
        },
        {
          id: 27,
          question: "Which CSS property is used to vertically align elements within a flex container?",
          options: [
            "A) align-items",
            "B) justify-content",
            "C) flex-direction",
            "D) align-content",
          ],
          correctAnswer: "A) align-items",
        },
        {
          id: 28,
          question: "What is the purpose of using the calc() function in CSS?",
          options: [
            "A) To perform mathematical calculations within a style rule",
            "B) To apply animations to elements",
            "C) To define keyframes for animations",
            "D) To specify font styles",
          ],
          correctAnswer: "A) To perform mathematical calculations within a style rule",
        },
        {
          id: 29,
          question: "Which CSS property is used to create a shadow effect around an element?",
          options: [
            "A) box-shadow",
            "B) text-shadow",
            "C) shadow",
            "D) element-shadow",
          ],
          correctAnswer: "A) box-shadow",
        },
        {
          id: 30,
          question: "What is the purpose of using the min-height property in CSS?",
          options: [
            "A) To set the minimum height of an element",
            "B) To define the maximum height of an element",
            "C) To specify the height of the viewport",
            "D) To create a gradient background",
          ],
          correctAnswer: "A) To set the minimum height of an element",
        },
      ],
      "3.3": [
        {
          id: 1,
          question: "What is the primary purpose of Flexbox in CSS?",
          options: [
            "A) Creating complex grid systems",
            "B) Implementing advanced layout techniques",
            "C) Creating flexible and responsive layouts",
            "D) Styling text and fonts",
          ],
          correctAnswer: "C) Creating flexible and responsive layouts",
        },
        {
          id: 2,
          question: "Which CSS property is used to define the direction of the main axis in a flex container?",
          options: [
            "A) flex-direction",
            "B) main-axis",
            "C) justify-content",
            "D) align-items",
          ],
          correctAnswer: "A) flex-direction",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "In Flexbox, which property is used to align items along the cross axis?",
          options: [
            "A) justify-content",
            "B) align-items",
            "C) align-content",
            "D) flex-align",
          ],
          correctAnswer: "B) align-items",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "Which value of flex-direction creates a horizontal layout in Flexbox?",
          options: [
            "A) row",
            "B) column",
            "C) row-reverse",
            "D) column-reverse",
          ],
          correctAnswer: "A) row",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "What does the flex-grow property determine in Flexbox?",
          options: [
            "A) The ability of a flex item to grow relative to other items",
            "B) The direction of the main axis",
            "C) The alignment of items along the cross axis",
            "D) The order of the flex item",
          ],
          correctAnswer: "A) The ability of a flex item to grow relative to other items",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 6,
          question: "Which property is used to align a flex container's content along the main axis?",
          options: [
            "A) justify-content",
            "B) align-items",
            "C) flex-align",
            "D) justify-items",
          ],
          correctAnswer: "A) justify-content",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 7,
          question: "In a grid layout, which property defines the number of columns an element should span?",
          options: [
            "A) grid-row",
            "B) grid-column",
            "C) grid-template-columns",
            "D) grid-column-span",
          ],
          correctAnswer: "B) grid-column",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 8,
          question: "What is the purpose of the fr unit in Grid layout?",
          options: [
            "A) Fractional unit used for defining flexible grid tracks",
            "B) Fixed unit for defining column widths",
            "C) Percentage unit for defining grid gaps",
            "D) Flexbox unit for item alignment",
          ],
          correctAnswer: "A) Fractional unit used for defining flexible grid tracks",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 9,
          question: "How do you create a gap between grid items in a grid container?",
          options: [
            "A) Use the grid-gap property",
            "B) Use the gap property",
            "C) Use the margin property",
            "D) Use the padding property",
          ],
          correctAnswer: "B) Use the gap property",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 10,
          question: "Which property is used to specify the alignment of an item within a grid cell?",
          options: [
            "A) justify-self",
            "B) align-self",
            "C) grid-item-align",
            "D) item-align",
          ],
          correctAnswer: "A) justify-self",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 11,
          question: "What is the purpose of the place-items property in Grid layout?",
          options: [
            "A) It is used to align grid items along the main axis.",
            "B) It is used to align grid items both along the block and inline axis.",
            "C) It is used to align the entire grid container within its parent container.",
            "D) It is used to control the size of grid items.",
          ],
          correctAnswer: "B) It is used to align grid items both along the block and inline axis.",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 12,
          question: "Which value of grid-template-columns will create a grid with three equal-width columns?",
          options: [
            "A) 1fr 1fr 1fr",
            "B) 1fr 2fr 1fr",
            "C) 1fr 3fr 1fr",
            "D) 1fr 1fr",
          ],
          correctAnswer: "A) 1fr 1fr 1fr",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 13,
          question: "In Flexbox, which property is used to reorder flex items within a flex container?",
          options: [
            "A) order",
            "B) flex-order",
            "C) reorder",
            "D) flex-item-order",
          ],
          correctAnswer: "A) order",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 14,
          question: "How can you make a flex item take up all available space along the main axis in Flexbox?",
          options: [
            "A) Set flex-grow to 1",
            "B) Set flex-shrink to 0",
            "C) Set flex-basis to 100%",
            "D) Set flex to 1 0 auto",
          ],
          correctAnswer: "A) Set flex-grow to 1",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 15,
          question: "Which CSS property is used to set the baseline alignment of grid items?",
          options: [
            "A) align-items",
            "B) align-content",
            "C) align-self",
            "D) baseline-align",
          ],
          correctAnswer: "C) align-self",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 16,
          question: "In Flexbox, which property is used to control the distribution of extra space along the main axis?",
          options: [
            "A) flex-grow",
            "B) flex-shrink",
            "C) flex-basis",
            "D) flex-wrap",
          ],
          correctAnswer: "A) flex-grow",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 17,
          question: "How do you center a flex container's content both horizontally and vertically?",
          options: [
            "A) justify-content: center; align-items: center;",
            "B) align-content: center; justify-items: center;",
            "C) align-items: center; justify-self: center;",
            "D) justify-content: center; align-self: center;",
          ],
          correctAnswer: "A) justify-content: center; align-items: center;",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 18,
          question: "Which property is used to create a gap between grid tracks in Grid layout?",
          options: [
            "A) grid-gap",
            "B) gap",
            "C) grid-row-gap",
            "D) grid-column-gap",
          ],
          correctAnswer: "B) gap",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 19,
          question: "How do you align the last item to the end of the main axis in a Flexbox container?",
          options: [
            "A) Use flex-start on the last item",
            "B) Use flex-end on the last item",
            "C) Use align-self: flex-end on the last item",
            "D) Use order: -1 on the last item",
          ],
          correctAnswer: "C) Use align-self: flex-end on the last item",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 20,
          question: "What does the grid-template-areas property allow you to do in Grid layout?",
          options: [
            "A) Define the arrangement of grid items using named areas",
            "B) Specify the number of rows in a grid container",
            "C) Set the height of a grid container",
            "D) Define the size of grid tracks",
          ],
          correctAnswer: "A) Define the arrangement of grid items using named areas",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 21,
          question: "How do you create a grid with 4 columns, where the first and last columns have a fixed width of 100px, and the middle columns take up equal remaining space?",
          options: [
            "A) grid-template-columns: 100px 1fr 1fr 100px;",
            "B) grid-template-columns: 1fr 1fr 1fr 1fr;",
            "C) grid-template-columns: 1fr 100px 1fr 100px;",
            "D) grid-template-columns: 100px 100px 1fr 1fr;",
          ],
          correctAnswer: "A) grid-template-columns: 100px 1fr 1fr 100px;",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 22,
          question: "What is the purpose of the grid-auto-flow property in Grid layout?",
          options: [
            "A) It determines the flow direction of grid items within a container",
            "B) It defines the size of grid items",
            "C) It controls the distribution of extra space along the main axis",
            "D) It sets the height of a grid container",
          ],
          correctAnswer: "A) It determines the flow direction of grid items within a container",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 23,
          question: "Which property is used to create a gap between flex items in a Flexbox container?",
          options: [
            "A) gap",
            "B) flex-gap",
            "C) margin",
            "D) padding",
          ],
          correctAnswer: "A) gap",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 24,
          question: "How can you make a grid item span multiple rows in Grid layout?",
          options: [
            "A) Use the grid-row property",
            "B) Use the grid-row-start and grid-row-end properties",
            "C) Use the grid-row-span property",
            "D) Use the grid-row: span shorthand",
          ],
          correctAnswer: "B) Use the grid-row-start and grid-row-end properties",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 25,
          question: "In Flexbox, how can you align a single flex item differently from the others in the same container?",
          options: [
            "A) Use the align-self property on the specific item",
            "B) Use the flex-order property on the specific item",
            "C) Use the flex-basis property on the specific item",
            "D) Use the order property on the specific item",
          ],
          correctAnswer: "A) Use the align-self property on the specific item",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 26,
          question: "Which property is used to determine the spacing between lines of text within a flex container?",
          options: [
            "A) line-height",
            "B) font-spacing",
            "C) letter-spacing",
            "D) text-spacing",
          ],
          correctAnswer: "A) line-height",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 27,
          question: "What is the purpose of the grid-template-rows property in Grid layout?",
          options: [
            "A) It defines the arrangement of grid items using named areas",
            "B) It specifies the number of rows in a grid container",
            "C) It sets the height of a grid container",
            "D) It defines the size of grid tracks",
          ],
          correctAnswer: "B) It specifies the number of rows in a grid container",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 28,
          question: "How do you align items along the block axis in a Flexbox container?",
          options: [
            "A) align-items",
            "B) justify-items",
            "C) align-content",
            "D) justify-content",
          ],
          correctAnswer: "A) align-items",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 29,
          question: "What does the flex-shrink property do in Flexbox?",
          options: [
            "A) Determines the ability of a flex item to grow relative to other items",
            "B) Specifies the initial size of a flex item",
            "C) Specifies the ability of a flex item to shrink relative to other items",
            "D) Controls the distribution of extra space along the main axis",
          ],
          correctAnswer: "C) Specifies the ability of a flex item to shrink relative to other items",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 30,
          question: "In Grid layout, what is the purpose of the grid-column property?",
          options: [
            "A) It specifies the number of columns an element should span",
            "B) It determines the flow direction of grid items within a container",
            "C) It defines the size of grid tracks",
            "D) It sets the alignment of an item within a grid cell",
          ],
          correctAnswer: "A) It specifies the number of columns an element should span",
        },
        
      ],
      // Add more subchapters for Chapter 1 as needed
    },


    //chapter 3 ended




    4: {
      // Chapter 1
      "4.1": [
        {
          id: 1,
          question: "What does the :hover pseudo-class target?",
          options: [
            "A) Active elements",
            "B) Elements when the mouse is over them",
            "C) Elements that are being clicked",
            "D) Elements with a specific class",
          ],
          correctAnswer: "B) Elements when the mouse is over them",
        },
        {
          id: 2,
          question: "Which pseudo-class is used to select an element when it is in focus?",
          options: [
            "A) :active",
            "B) :focus",
            "C) :hover",
            "D) :visited",
          ],
          correctAnswer: "B) :focus",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "What does the :nth-child pseudo-class allow you to do?",
          options: [
            "A) Select elements based on their position in a parent element",
            "B) Select the first child element",
            "C) Select the last child element",
            "D) Select all child elements",
          ],
          correctAnswer: "A) Select elements based on their position in a parent element",
        },
        {
          id: 4,
          question: "Which pseudo-class is used to select an element when it is the first child of its parent?",
          options: [
            "A) :first-child",
            "B) :last-child",
            "C) :nth-child(1)",
            "D) :only-child",
          ],
          correctAnswer: "A) :first-child",
        },
        {
          id: 5,
          question: "What does the :active pseudo-class target?",
          options: [
            "A) Elements when they are being clicked",
            "B) Elements when they are active in JavaScript",
            "C) Elements that are currently visible",
            "D) Elements with a specific class",
          ],
          correctAnswer: "A) Elements when they are being clicked",
        },
        {
          id: 6,
          question: "Which pseudo-class is used to select an element that is the last child of its parent?",
          options: [
            "A) :first-child",
            "B) :last-child",
            "C) :nth-child(1)",
            "D) :only-child",
          ],
          correctAnswer: "B) :last-child",
        },
        {
          id: 7,
          question: "What does the ::before pseudo-element allow you to do?",
          options: [
            "A) Insert content before the selected element",
            "B) Style the first line of text in an element",
            "C) Select the first child element",
            "D) Insert content after the selected element",
          ],
          correctAnswer: "A) Insert content before the selected element",
        },
        {
          id: 8,
          question: "Which pseudo-element is used to insert content after the selected element?",
          options: [
            "A) ::before",
            "B) ::after",
            "C) ::first-line",
            "D) ::last-line",
          ],
          correctAnswer: "B) ::after",
        },
        {
          id: 9,
          question: "What does the ::first-line pseudo-element target?",
          options: [
            "A) The first line of text in an element",
            "B) The first child element",
            "C) The last child element",
            "D) The first element with a specific class",
          ],
          correctAnswer: "A) The first line of text in an element",
        },
        {
          id: 10,
          question: "Which pseudo-element is used to style the first letter of a block-level element?",
          options: [
            "A) ::first-letter",
            "B) ::first-word",
            "C) ::initial-letter",
            "D) ::initial-word",
          ],
          correctAnswer: "A) ::first-letter",
        },
        {
          id: 11,
          question: "What does the ::selection pseudo-element target?",
          options: [
            "A) The selected text within an element",
            "B) The first child element",
            "C) The last child element",
            "D) The first element with a specific class",
          ],
          correctAnswer: "A) The selected text within an element",
        },
        {
          id: 12,
          question: "Which pseudo-class is used to select an element that is the only child of its parent?",
          options: [
            "A) :first-child",
            "B) :last-child",
            "C) :nth-child(1)",
            "D) :only-child",
          ],
          correctAnswer: "D) :only-child",
        },
        {
          id: 13,
          question: "What does the :not() pseudo-class allow you to do?",
          options: [
            "A) Exclude elements from being selected",
            "B) Style elements with a specific class",
            "C) Select the last child element",
            "D) Select the first child element",
          ],
          correctAnswer: "A) Exclude elements from being selected",
        },
        {
          id: 14,
          question: "Which pseudo-class is used to select an element that is the nth child of its parent, counting from the last child?",
          options: [
            "A) :nth-child",
            "B) :nth-last-child",
            "C) :nth-last-of-type",
            "D) :last-child",
          ],
          correctAnswer: "B) :nth-last-child",
        },
        {
          id: 15,
          question: "What does the :empty pseudo-class target?",
          options: [
            "A) Elements that are currently visible",
            "B) Elements with no child elements or text content",
            "C) Elements with a specific class",
            "D) Elements with a specific attribute",
          ],
          correctAnswer: "B) Elements with no child elements or text content",
        },
        {
          id: 16,
          question: "Which pseudo-class is used to select an element when a user has visited a link?",
          options: [
            "A) :link",
            "B) :visited",
            "C) :active",
            "D) :hover",
          ],
          correctAnswer: "B) :visited",
        },
        {
          id: 17,
          question: "What does the ::placeholder pseudo-element target?",
          options: [
            "A) The placeholder text in an input field",
            "B) The first line of text in an element",
            "C) The first letter of a block-level element",
            "D) The selected text within an element",
          ],
          correctAnswer: "A) The placeholder text in an input field",
        },
        {
          id: 18,
          question: "Which pseudo-class is used to select the first element of its type within a parent element?",
          options: [
            "A) :first-of-type",
            "B) :last-of-type",
            "C) :nth-of-type(1)",
            "D) :only-of-type",
          ],
          correctAnswer: "A) :first-of-type",
        },
        {
          id: 19,
          question: "What does the :nth-of-type pseudo-class allow you to do?",
          options: [
            "A) Select elements based on their position in a parent element",
            "B) Select the first element of its type",
            "C) Select the last element of its type",
            "D) Select all elements of a specific type",
          ],
          correctAnswer: "A) Select elements based on their position in a parent element",
        },
        {
          id: 20,
          question: "Which pseudo-class is used to select an element that is the last of its type within a parent element?",
          options: [
            "A) :first-of-type",
            "B) :last-of-type",
            "C) :nth-of-type(1)",
            "D) :only-of-type",
          ],
          correctAnswer: "B) :last-of-type",
        },
        {
          id: 21,
          question: "What does the :lang() pseudo-class target?",
          options: [
            "A) Elements with a specific language attribute",
            "B) Elements with a specific class",
            "C) Elements with a specific ID",
            "D) Elements with a specific attribute",
          ],
          correctAnswer: "A) Elements with a specific language attribute",
        },
        {
          id: 22,
          question: "Which pseudo-class is used to select an element when it has focus and is also checked (e.g., a checkbox)?",
          options: [
            "A) :focus",
            "B) :checked",
            "C) :active",
            "D) :enabled",
          ],
          correctAnswer: "B) :checked",
        },
        {
          id: 23,
          question: "What does the :enabled pseudo-class target?",
          options: [
            "A) Elements that are currently visible",
            "B) Elements with a specific class",
            "C) Elements that are in a state to be interacted with (e.g., not disabled)",
            "D) Elements with a specific attribute",
          ],
          correctAnswer: "C) Elements that are in a state to be interacted with (e.g., not disabled)",
        },
        {
          id: 24,
          question: "Which pseudo-class is used to select an element that is currently being dragged?",
          options: [
            "A) :dragged",
            "B) :active",
            "C) :focus",
            "D) :hover",
          ],
          correctAnswer: "A) :dragged",
        },
        {
          id: 25,
          question: "What does the :read-only pseudo-class target?",
          options: [
            "A) Elements that are currently visible",
            "B) Elements that can be edited by the user",
            "C) Elements with a specific class",
            "D) Elements with a specific attribute",
          ],
          correctAnswer: "B) Elements that can be edited by the user",
        },
        {
          id: 26,
          question: "Which pseudo-class is used to select an element that is being targeted by an anchor link?",
          options: [
            "A) :target",
            "B) :active",
            "C) :focus",
            "D) :hover",
          ],
          correctAnswer: "A) :target",
        },
        {
          id: 27,
          question: "What does the :root pseudo-class target?",
          options: [
            "A) The root element of the document (usually <html>)",
            "B) The first child element",
            "C) The last child element",
            "D) The first element with a specific class",
          ],
          correctAnswer: "A) The root element of the document (usually <html>)",
        },
        {
          id: 28,
          question: "Which pseudo-class is used to select an element that is being printed?",
          options: [
            "A) :print",
            "B) :screen",
            "C) :active",
            "D) :hover",
          ],
          correctAnswer: "A) :print",
        },
        {
          id: 29,
          question: "What does the :fullscreen pseudo-class target?",
          options: [
            "A) Elements that are currently visible on full screen",
            "B) Elements with a specific class",
            "C) Elements that are in a state to be interacted with (e.g., not disabled)",
            "D) Elements with a specific attribute",
          ],
          correctAnswer: "A) Elements that are currently visible on full screen",
        },
        {
          id: 30,
          question: "Which pseudo-class is used to select an element that is not in a state to be interacted with (e.g., disabled)?",
          options: [
            "A) :disabled",
            "B) :enabled",
            "C) :active",
            "D) :hover",
          ],
          correctAnswer: "A) :disabled",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "4.2": [
        {
          id: 1,
          question: "Which CSS property is used to apply a transition to an element?",
          options: [
            "A) transition-property",
            "B) transition-duration",
            "C) transition",
            "D) transition-effect",
          ],
          correctAnswer: "C) transition",
        },
        {
          id: 2,
          question: "What does the transition-timing-function property control?",
          options: [
            "A) The speed curve of the transition",
            "B) The duration of the transition",
            "C) The type of element to transition",
            "D) The color of the transition",
          ],
          correctAnswer: "A) The speed curve of the transition",
        },
        {
          id: 3,
          question: "Which value of transition-timing-function will make the transition start slow and end fast?",
          options: [
            "A) ease-in",
            "B) ease-out",
            "C) ease-in-out",
            "D) linear",
          ],
          correctAnswer: "B) ease-out",
        },
        {
          id: 4,
          question: "In CSS animations, what is a keyframe?",
          options: [
            "A) A specific point in time during an animation",
            "B) A property that defines animation duration",
            "C) A type of timing function",
            "D) A method to apply transitions",
          ],
          correctAnswer: "A) A specific point in time during an animation",
        },
        {
          id: 5,
          question: "How do you define a keyframe in CSS?",
          options: [
            "A) @keyframe",
            "B) @animate",
            "C) @frame",
            "D) @animation",
          ],
          correctAnswer: "A) @keyframe",
        },
        {
          id: 6,
          question: "Which property is used to specify the name of an animation?",
          options: [
            "A) animation-duration",
            "B) animation-name",
            "C) animation",
            "D) animation-iteration-count",
          ],
          correctAnswer: "B) animation-name",
        },
        {
          id: 7,
          question: "How can you make an animation run indefinitely?",
          options: [
            "A) Set animation-iteration-count to infinite",
            "B) Use animation-duration with a very large value",
            "C) Add multiple keyframes with different durations",
            "D) Use animation-infinite: true",
          ],
          correctAnswer: "A) Set animation-iteration-count to infinite",
        },
        {
          id: 8,
          question: "Which CSS property is used to delay the start of an animation?",
          options: [
            "A) animation-delay",
            "B) animation-duration",
            "C) animation-timing-function",
            "D) animation-play-state",
          ],
          correctAnswer: "A) animation-delay",
        },
        {
          id: 9,
          question: "How do you create a smooth transition effect on hover?",
          options: [
            "A) Use :hover selector along with transition property",
            "B) Use :hover selector along with animation property",
            "C) Use :hover selector along with keyframe property",
            "D) Use :hover selector along with transform property",
          ],
          correctAnswer: "A) Use :hover selector along with transition property",
        },
        {
          id: 10,
          question: "What is the purpose of the transition-property property?",
          options: [
            "A) It defines the CSS properties to be transitioned",
            "B) It sets the duration of the transition",
            "C) It controls the timing curve of the transition",
            "D) It specifies the element to transition",
          ],
          correctAnswer: "A) It defines the CSS properties to be transitioned",
        },
        {
          id: 11,
          question: "Which value of animation-fill-mode will apply the styles defined in the keyframe to the element before the animation starts?",
          options: [
            "A) forwards",
            "B) backwards",
            "C) both",
            "D) none",
          ],
          correctAnswer: "B) backwards",
        },
        {
          id: 12,
          question: "In CSS animations, what does the animation-iteration-count property control?",
          options: [
            "A) The number of times an animation plays",
            "B) The speed curve of the animation",
            "C) The timing of the animation",
            "D) The duration of the animation",
          ],
          correctAnswer: "A) The number of times an animation plays",
        },
        {
          id: 13,
          question: "How can you make an element move from left to right using CSS animations?",
          options: [
            "A) Define keyframes for both start and end positions",
            "B) Use transform: translateX() property",
            "C) Set animation-direction to alternate",
            "D) Use the left property along with position: absolute",
          ],
          correctAnswer: "A) Define keyframes for both start and end positions",
        },
        {
          id: 14,
          question: "What is the CSS property used to specify the duration of an animation?",
          options: [
            "A) animation-duration",
            "B) animation-time",
            "C) animation-length",
            "D) animation-delay",
          ],
          correctAnswer: "A) animation-duration",
        },
        {
          id: 15,
          question: "Which timing function will result in a linear animation progression?",
          options: [
            "A) linear",
            "B) ease-in",
            "C) ease-out",
            "D) ease-in-out",
          ],
          correctAnswer: "A) linear",
        },
        {
          id: 16,
          question: "How do you define multiple keyframes for an animation?",
          options: [
            "A) Use percentages to define the keyframes",
            "B) Use @keyframes followed by a name",
            "C) Use the keyframe() function",
            "D) Use the animate property",
          ],
          correctAnswer: "A) Use percentages to define the keyframes",
        },
        {
          id: 17,
          question: "Which CSS property is used to control the direction of an animation?",
          options: [
            "A) animation-direction",
            "B) animation-iteration-count",
            "C) animation-fill-mode",
            "D) animation-play-state",
          ],
          correctAnswer: "A) animation-direction",
        },
        {
          id: 18,
          question: "How do you make an element continuously bounce up and down using CSS animations?",
          options: [
            "A) Define keyframes for both upward and downward motion",
            "B) Use transform: translateY() property with alternating values",
            "C) Set animation-timing-function to ease-in-out",
            "D) Use position: relative with alternating top values",
          ],
          correctAnswer: "B) Use transform: translateY() property with alternating values",
        },
        {
          id: 19,
          question: "Which CSS property is used to specify the number of times an animation should play?",
          options: [
            "A) animation-iteration-count",
            "B) animation-play-state",
            "C) animation-fill-mode",
            "D) animation-direction",
          ],
          correctAnswer: "A) animation-iteration-count",
        },
        {
          id: 20,
          question: "What does the animation-fill-mode property do?",
          options: [
            "A) Specifies how an animation should apply styles before and after it is played",
            "B) Controls the timing curve of an animation",
            "C) Sets the duration of an animation",
            "D) Defines the CSS properties to be animated",
          ],
          correctAnswer: "A) Specifies how an animation should apply styles before and after it is played",
        },
        {
          id: 21,
          question: "Which CSS property is used to control the state of an animation (e.g., paused or running)?",
          options: [
            "A) animation-play-state",
            "B) animation-iteration-count",
            "C) animation-timing-function",
            "D) animation-fill-mode",
          ],
          correctAnswer: "A) animation-play-state",
        },
        {
          id: 22,
          question: "How can you create a pulsating effect using CSS animations?",
          options: [
            "A) Use @keyframes to define a scaling animation",
            "B) Use @keyframes to define a rotation animation",
            "C) Use @keyframes to define a color change animation",
            "D) Use @keyframes to define a translation animation",
          ],
          correctAnswer: "A) Use @keyframes to define a scaling animation",
        },
        {
          id: 23,
          question: "Which value of animation-direction will make an animation play in reverse?",
          options: [
            "A) reverse",
            "B) alternate",
            "C) normal",
            "D) alternate-reverse",
          ],
          correctAnswer: "A) reverse",
        },
        {
          id: 24,
          question: "How do you make an element fade in on page load using CSS animations?",
          options: [
            "A) Use @keyframes to define a fading animation",
            "B) Set opacity to 0 and use @keyframes to increase it to 1",
            "C) Use transition property with opacity and :hover selector",
            "D) Use @keyframes to define a rotating animation",
          ],
          correctAnswer: "B) Set opacity to 0 and use @keyframes to increase it to 1",
        },
        {
          id: 25,
          question: "Which timing function will result in an animation that starts fast and slows down towards the end?",
          options: [
            "A) ease-out",
            "B) ease-in",
            "C) ease-in-out",
            "D) linear",
          ],
          correctAnswer: "B) ease-in",
        },
        {
          id: 26,
          question: "What is the purpose of the animation-play-state property?",
          options: [
            "A) It controls whether an animation is running or paused",
            "B) It defines the number of times an animation plays",
            "C) It specifies the name of the animation",
            "D) It sets the duration of the animation",
          ],
          correctAnswer: "A) It controls whether an animation is running or paused",
        },
        {
          id: 27,
          question: "How can you create a typewriter effect using CSS animations?",
          options: [
            "A) Use @keyframes to animate the opacity of characters",
            "B) Use @keyframes to animate the position of characters",
            "C) Use @keyframes to animate the scale of characters",
            "D) Use @keyframes to animate the color of characters",
          ],
          correctAnswer: "B) Use @keyframes to animate the position of characters",
        },
        {
          id: 28,
          question: "What is the CSS property used to specify the delay before an animation starts?",
          options: [
            "A) animation-delay",
            "B) animation-duration",
            "C) animation-timing-function",
            "D) animation-fill-mode",
          ],
          correctAnswer: "A) animation-delay",
        },
        {
          id: 29,
          question: "How can you create a rotating loader using CSS animations?",
          options: [
            "A) Use @keyframes to define a rotation animation",
            "B) Use transform: rotate() property with alternating values",
            "C) Set animation-timing-function to linear",
            "D) Use position: absolute with alternating left values",
          ],
          correctAnswer: "A) Use @keyframes to define a rotation animation",
        },
        {
          id: 30,
          question: "Which value of animation-fill-mode will apply the styles defined in the keyframe both before and after the animation is played?",
          options: [
            "A) both",
            "B) none",
            "C) backwards",
            "D) forwards",
          ],
          correctAnswer: "A) both",
        },
      ],


      "4.3": [
       {
          id: 1,
          question: "Which CSS property is used to rotate an element?",
          options: [
            "A) transform",
            "B) rotate",
            "C) rotation",
            "D) rotation-transform",
          ],
          correctAnswer: "A) transform",
        },
        {
          id: 2,
          question: "To rotate an element by 45 degrees, what value would you use for the transform property?",
          options: [
            "A) rotate(45deg)",
            "B) rotate(90deg)",
            "C) rotate(180deg)",
            "D) rotate(360deg)",
          ],
          correctAnswer: "A) rotate(45deg)",
        },
        {
          id: 3,
          question: "How do you scale an element to be twice its original size?",
          options: [
            "A) scale(2)",
            "B) scale(0.5)",
            "C) scale(1.5)",
            "D) scale(0)",
          ],
          correctAnswer: "A) scale(2)",
        },
        {
          id: 4,
          question: "Which CSS property is used to skew an element along the X-axis?",
          options: [
            "A) skew-x",
            "B) skew-x-axis",
            "C) skewX",
            "D) skew-x-axis",
          ],
          correctAnswer: "C) skewX",
        },
        {
          id: 5,
          question: "What is the correct CSS syntax to translate an element 50 pixels to the right?",
          options: [
            "A) translateX(50px)",
            "B) moveX(50px)",
            "C) positionX(50px)",
            "D) shiftX(50px)",
          ],
          correctAnswer: "A) translateX(50px)",
        },
        {
          id: 6,
          question: "How do you apply multiple transformations to an element in CSS?",
          options: [
            "A) Separate them with commas",
            "B) Use multiple transform properties",
            "C) Use a nested transform function",
            "D) It's not possible to apply multiple transformations",
          ],
          correctAnswer: "A) Separate them with commas",
        },
        {
          id: 7,
          question: "Which CSS property is used to create a 3D effect by giving an element depth?",
          options: [
            "A) depth",
            "B) perspective",
            "C) 3d-effect",
            "D) transform-style",
          ],
          correctAnswer: "B) perspective",
        },
        {
          id: 8,
          question: "What does the perspective property determine in a 3D space?",
          options: [
            "A) The position of the observer",
            "B) The depth of the element",
            "C) The angle of rotation",
            "D) The scale of the element",
          ],
          correctAnswer: "A) The position of the observer",
        },
        {
          id: 9,
          question: "Which CSS property is used to control the appearance of an element's backface when it is rotated?",
          options: [
            "A) backface-visibility",
            "B) backface-display",
            "C) backface-appearance",
            "D) backface-style",
          ],
          correctAnswer: "A) backface-visibility",
        },
        {
          id: 10,
          question: "How would you create a 3D cube using CSS?",
          options: [
            "A) Use the transform property with rotate and scale",
            "B) Use the rotate property",
            "C) Use the skew property",
            "D) It's not possible to create a 3D cube with CSS",
          ],
          correctAnswer: "A) Use the transform property with rotate and scale",
        },
        {
          id: 11,
          question: "In CSS, how do you flip an element horizontally?",
          options: [
            "A) scaleX(-1)",
            "B) rotateY(180deg)",
            "C) flipX",
            "D) flipHorizontal",
          ],
          correctAnswer: "A) scaleX(-1)",
        },
        {
          id: 12,
          question: "Which value for the transform-origin property will rotate an element around its center?",
          options: [
            "A) 50% 50%",
            "B) center",
            "C) middle",
            "D) origin-center",
          ],
          correctAnswer: "A) 50% 50%",
        },
        {
          id: 13,
          question: "What happens if you apply both transform and transition properties to an element?",
          options: [
            "A) They will work together without any conflict",
            "B) The transformation will override the transition",
            "C) The transition will override the transformation",
            "D) It's not possible to apply both properties to the same element",
          ],
          correctAnswer: "A) They will work together without any conflict",
        },
        {
          id: 14,
          question: "How would you create a card-flip animation using CSS?",
          options: [
            "A) Use the transform property with rotateY",
            "B) Use the rotate property",
            "C) Use the flip property",
            "D) It's not possible to create a card-flip animation with CSS",
          ],
          correctAnswer: "A) Use the transform property with rotateY",
        },
        {
          id: 15,
          question: "Which property is used to control the perspective of child elements in a 3D transformed parent element?",
          options: [
            "A) perspective-origin",
            "B) child-perspective",
            "C) transform-origin",
            "D) perspective-child",
          ],
          correctAnswer: "A) perspective-origin",
        },
        {
          id: 16,
          question: "How do you apply a perspective to a child element that is different from its parent in CSS?",
          options: [
            "A) Use the transform property on the child element with perspective",
            "B) Use the perspective property on the child element",
            "C) It's not possible to apply a different perspective to a child element",
            "D) Use the child-perspective property",
          ],
          correctAnswer: "A) Use the transform property on the child element with perspective",
        },
        {
          id: 17,
          question: "Which CSS property is used to control the order in which 3D transformed elements are drawn on the screen?",
          options: [
            "A) z-index",
            "B) transform-order",
            "C) perspective-order",
            "D) 3d-z",
          ],
          correctAnswer: "B) transform-order",
        },
        {
          id: 18,
          question: "In a 3D transformed element, what does the z value control?",
          options: [
            "A) Depth",
            "B) Width",
            "C) Height",
            "D) Transparency",
          ],
          correctAnswer: "A) Depth",
        },
        {
          id: 19,
          question: "How would you create a rotating 3D carousel of images using CSS?",
          options: [
            "A) Use the transform property with rotateY",
            "B) Use the rotate property",
            "C) Use the carousel property",
            "D) It's not possible to create a rotating 3D carousel with CSS",
          ],
          correctAnswer: "A) Use the transform property with rotateY",
        },
        {
          id: 20,
          question: "What is the correct CSS syntax to apply a 3D transform to an element?",
          options: [
            "A) transform: rotateX(45deg) rotateY(45deg);",
            "B) transform: scale(2);",
            "C) transform: skew(30deg);",
            "D) transform: translateX(50px) translateY(50px);",
          ],
          correctAnswer: "A) transform: rotateX(45deg) rotateY(45deg);",
        },
        {
          id: 21,
          question: "How do you create a 3D effect that makes an element appear to pop out of the screen?",
          options: [
            "A) Use the perspective property",
            "B) Use the scale property",
            "C) Use the skew property",
            "D) Use the translate property",
          ],
          correctAnswer: "A) Use the perspective property",
        },
        {
          id: 22,
          question: "Which CSS property is used to control the visibility of an element when it is flipped?",
          options: [
            "A) backface-visibility",
            "B) flip-visibility",
            "C) front-visibility",
            "D) visibility",
          ],
          correctAnswer: "A) backface-visibility",
        },
        {
          id: 23,
          question: "What is the default value of the backface-visibility property?",
          options: [
            "A) visible",
            "B) hidden",
            "C) collapse",
            "D) inherit",
          ],
          correctAnswer: "A) visible",
        },
        {
          id: 24,
          question: "How would you create a 3D rotating cube with different content on each face using CSS?",
          options: [
            "A) Use the transform property with rotate and different content on each face",
            "B) Use the rotate property",
            "C) Use the skew property",
            "D) It's not possible to create a 3D rotating cube with CSS",
          ],
          correctAnswer: "A) Use the transform property with rotate and different content on each face",
        },
        {
          id: 25,
          question: "What is the correct CSS syntax to rotate an element 180 degrees along the X-axis?",
          options: [
            "A) transform: rotateX(180deg);",
            "B) transform: rotate(180deg);",
            "C) transform: rotateY(180deg);",
            "D) transform: rotateZ(180deg);",
          ],
          correctAnswer: "A) transform: rotateX(180deg);",
        },
        {
          id: 26,
          question: "How do you create a 3D flip animation that reveals a different element on the backside?",
          options: [
            "A) Use the transform property with rotateY and different content on the backside",
            "B) Use the rotate property",
            "C) Use the flip property",
            "D) It's not possible to create a 3D flip animation with CSS",
          ],
          correctAnswer: "A) Use the transform property with rotateY and different content on the backside",
        },
        {
          id: 27,
          question: "Which CSS property is used to control the order in which 3D transformed elements are drawn on the screen along the Z-axis?",
          options: [
            "A) z-index",
            "B) transform-order",
            "C) perspective-order",
            "D) 3d-z",
          ],
          correctAnswer: "A) z-index",
        },
        {
          id: 28,
          question: "In a 3D transformed element, how do you control the position along the X-axis?",
          options: [
            "A) translateX()",
            "B) translateY()",
            "C) translateZ()",
            "D) translate3d()",
          ],
          correctAnswer: "A) translateX()",
        },
        {
          id: 29,
          question: "How would you create a 3D rotating Earth using CSS?",
          options: [
            "A) Use the transform property with rotateY",
            "B) Use the rotate property",
            "C) Use an image of the Earth",
            "D) It's not possible to create a 3D rotating Earth with CSS",
          ],
          correctAnswer: "A) Use the transform property with rotateY",
        },
        {
          id: 30,
          question: "Which CSS property is used to control the appearance of an element's frontface when it is rotated?",
          options: [
            "A) frontface-visibility",
            "B) frontface-display",
            "C) frontface-appearance",
            "D) frontface-style",
          ],
          correctAnswer: "A) frontface-visibility",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },



    // chapter 4 ended





    5: {
      // Chapter 1
      "5.1": [
      
        {
          id: 1,
          question: "What is a preprocessor in CSS?",
          options: [
            "A) A tool to compile CSS to JavaScript",
            "B) A scripting language that extends the capabilities of CSS",
            "C) A browser extension for debugging CSS",
            "D) A tool to minify CSS files",
          ],
          correctAnswer: "B) A scripting language that extends the capabilities of CSS",
        },
        {
          id: 2,
          question: "Which of the following is an example of a CSS preprocessor?",
          options: [
            "A) HTML",
            "B) Sass",
            "C) JavaScript",
            "D) XML",
          ],
          correctAnswer: "B) Sass",
        },
        {
          id: 3,
          question: "What does a CSS preprocessor allow you to use that is not supported in traditional CSS?",
          options: [
            "A) Variables",
            "B) Functions",
            "C) Loops",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 4,
          question: "In a preprocessor, how do you define a variable?",
          options: [
            "A) $myVariable: value;",
            "B) #myVariable { value; }",
            "C) var myVariable = value;",
            "D) myVariable = value;",
          ],
          correctAnswer: "A) $myVariable: value;",
        },
        {
          id: 5,
          question: "Which of the following is an example of nesting in a preprocessor?",
          options: [
            "A) .container { background-color: red; }",
            "B) .container { &.active { background-color: blue; } }",
            "C) .container.active { background-color: blue; }",
            "D) .container.active { & { background-color: blue; } }",
          ],
          correctAnswer: "B) .container { &.active { background-color: blue; } }",
        },
        {
          id: 6,
          question: "What is the purpose of using mixins in a preprocessor?",
          options: [
            "A) To group styles together for reusability",
            "B) To create animations",
            "C) To apply vendor prefixes automatically",
            "D) To define variables",
          ],
          correctAnswer: "A) To group styles together for reusability",
        },
        {
          id: 7,
          question: "How do you include a mixin in a preprocessor stylesheet?",
          options: [
            "A) @include mixinName;",
            "B) .mixinName();",
            "C) .mixinName;",
            "D) @mixin mixinName;",
          ],
          correctAnswer: "A) @include mixinName;",
        },
        {
          id: 8,
          question: "Which of the following is an example of a mixin declaration in Sass?",
          options: [
            "A) @mixin myMixin { font-size: 16px; }",
            "B) .myMixin { font-size: 16px; }",
            "C) #myMixin { font-size: 16px; }",
            "D) mixin myMixin { font-size: 16px; }",
          ],
          correctAnswer: "A) @mixin myMixin { font-size: 16px; }",
        },
        {
          id: 9,
          question: "How do you compile a Sass file into CSS from the command line?",
          options: [
            "A) sass input.sass output.css",
            "B) sass input.css output.sass",
            "C) css input.sass output.css",
            "D) css input.css output.sass",
          ],
          correctAnswer: "A) sass input.sass output.css",
        },
        {
          id: 10,
          question: "What does a CSS preprocessor do before the styles are applied to a webpage?",
          options: [
            "A) It compiles the preprocessor code into regular CSS.",
            "B) It optimizes the images used in the styles.",
            "C) It minifies the JavaScript code.",
            "D) It converts HTML to XML.",
          ],
          correctAnswer: "A) It compiles the preprocessor code into regular CSS.",
        },
        {
          id: 11,
          question: "Which of the following is a valid Sass variable declaration?",
          options: [
            "A) $myVariable: #FF5733;",
            "B) #myVariable = #FF5733;",
            "C) .myVariable = #FF5733;",
            "D) @myVariable: #FF5733;",
          ],
          correctAnswer: "A) $myVariable: #FF5733;",
        },
        {
          id: 12,
          question: "In Sass, what is the purpose of using the & symbol?",
          options: [
            "A) It represents a logical AND operator.",
            "B) It refers to the current selector.",
            "C) It denotes the end of a block of code.",
            "D) It is used to define a mixin.",
          ],
          correctAnswer: "B) It refers to the current selector.",
        },
        {
          id: 13,
          question: "Which preprocessor feature is used to generate vendor prefixes automatically?",
          options: [
            "A) Variables",
            "B) Mixins",
            "C) Nesting",
            "D) Functions",
          ],
          correctAnswer: "B) Mixins",
        },
        {
          id: 14,
          question: "In Less, how do you define a variable?",
          options: [
            "A) @myVariable: value;",
            "B) $myVariable = value;",
            "C) #myVariable { value; }",
            "D) myVariable = value;",
          ],
          correctAnswer: "A) @myVariable: value;",
        },
        {
          id: 15,
          question: "What is the purpose of using the @import directive in a preprocessor?",
          options: [
            "A) To import external CSS files",
            "B) To include mixins from other files",
            "C) To import variables from other files",
            "D) To link to JavaScript libraries",
          ],
          correctAnswer: "C) To import variables from other files",
        },
        {
          id: 16,
          question: "Which of the following statements about preprocessing is true?",
          options: [
            "A) Preprocessing is done on the client-side.",
            "B) Preprocessing is a step that happens in the browser.",
            "C) Preprocessing is done before the final CSS is generated.",
            "D) Preprocessing is not used in modern web development.",
          ],
          correctAnswer: "C) Preprocessing is done before the final CSS is generated.",
        },
        {
          id: 17,
          question: "How do you nest selectors in Less?",
          options: [
            "A) .class1.class2 { property: value; }",
            "B) .class1 { .class2 { property: value; } }",
            "C) .class1 > .class2 { property: value; }",
            "D) .class1 .class2 { property: value; }",
          ],
          correctAnswer: "B) .class1 { .class2 { property: value; } }",
        },
        {
          id: 18,
          question: "What is the output of compiling the following Sass code?",
          code: "sass\nCopy code\n$color: blue;\n\n.button {\n  color: $color;\n}",
          options: [
            "A) .button { color: blue; }",
            "B) .button { color: $color; }",
            "C) .button { color: #blue; }",
            "D) Error: Undefined variable $color.",
          ],
          correctAnswer: "A) .button { color: blue; }",
        },
        {
          id: 19,
          question: "Which of the following statements about preprocessors is true?",
          options: [
            "A) Preprocessors are only used for styling HTML elements.",
            "B) Preprocessors are compiled into regular CSS before being used in a web page.",
            "C) Preprocessors can be executed directly by web browsers.",
            "D) Preprocessors are not widely used in modern web development.",
          ],
          correctAnswer: "B) Preprocessors are compiled into regular CSS before being used in a web page.",
        },
        {
          id: 20,
          question: "In Less, what is the correct way to define a mixin?",
          options: [
            "A) .myMixin() { property: value; }",
            "B) @mixin myMixin { property: value; }",
            "C) #myMixin { property: value; }",
            "D) mixin myMixin { property: value; }",
          ],
          correctAnswer: "B) @mixin myMixin { property: value; }",
        },
        {
          id: 21,
          question: "How do you pass arguments to a mixin in Sass?",
          options: [
            "A) @include mixinName;",
            "B) @include mixinName(argument1, argument2);",
            "C) mixinName(argument1, argument2);",
            "D) mixinName(argument1 argument2);",
          ],
          correctAnswer: "B) @include mixinName(argument1, argument2);",
        },
        {
          id: 22,
          question: "Which of the following is a valid Less mixin definition?",
          options: [
            "A) @mixin myMixin() { property: value; }",
            "B) .myMixin() { property: value; }",
            "C) #myMixin() { property: value; }",
            "D) mixin myMixin() { property: value; }",
          ],
          correctAnswer: "A) @mixin myMixin() { property: value; }",
        },
        {
          id: 23,
          question: "What is the purpose of using variables in a preprocessor stylesheet?",
          options: [
            "A) To store values that can be reused throughout the stylesheet.",
            "B) To apply animations to elements.",
            "C) To define media queries.",
            "D) To create JavaScript functions.",
          ],
          correctAnswer: "A) To store values that can be reused throughout the stylesheet.",
        },
        {
          id: 24,
          question: "In Sass, how do you perform mathematical operations on variables?",
          options: [
            "A) $result = $variable1 + $variable2;",
            "B) @result = @variable1 + @variable2;",
            "C) result = variable1 + variable2;",
            "D) result = $variable1 + $variable2;",
          ],
          correctAnswer: "A) $result = $variable1 + $variable2;",
        },
        {
          id: 25,
          question: "What is the purpose of using the @extend directive in a preprocessor stylesheet?",
          options: [
            "A) To include a mixin.",
            "B) To import external CSS files.",
            "C) To share a set of properties between different selectors.",
            "D) To apply a transition animation.",
          ],
          correctAnswer: "C) To share a set of properties between different selectors.",
        },
        {
          id: 26,
          question: "Which of the following statements about mixins is true?",
          options: [
            "A) Mixins are only used for animations.",
            "B) Mixins can contain a set of properties and can be reused in different selectors.",
            "C) Mixins can only be defined in the main stylesheet.",
            "D) Mixins are equivalent to regular CSS classes.",
          ],
          correctAnswer: "B) Mixins can contain a set of properties and can be reused in different selectors.",
        },
        {
          id: 27,
          question: "What is the output of compiling the following Less code?",
          code: "less\nCopy code\n@color: red;\n\n.button {\n  color: @color;\n}",
          options: [
            "A) .button { color: red; }",
            "B) .button { color: @color; }",
            "C) .button { color: #red; }",
            "D) Error: Undefined variable @color.",
          ],
          correctAnswer: "A) .button { color: red; }",
        },
        {
          id: 28,
          question: "In a preprocessor, how do you create a loop?",
          options: [
            "A) @for $i from 1 through 5 { ... }",
            "B) for $i in 1 to 5 { ... }",
            "C) loop($i, 1, 5) { ... }",
            "D) $i = 1 to 5 { ... }",
          ],
          correctAnswer: "A) @for $i from 1 through 5 { ... }",
        },
        {
          id: 29,
          question: "Which of the following is an example of a valid Sass function declaration?",
          options: [
            "A) @function myFunction() { return value; }",
            "B) $myFunction() { return value; }",
            "C) #myFunction() { return value; }",
            "D) function myFunction() { return value; }",
          ],
          correctAnswer: "A) @function myFunction() { return value; }",
        },
        {
          id: 30,
          question: "What is the purpose of using functions in a preprocessor stylesheet?",
          options: [
            "A) To perform calculations and return values.",
            "B) To create animations.",
            "C) To define media queries.",
            "D) To apply vendor prefixes automatically.",
          ],
          correctAnswer: "A) To perform calculations and return values.",
        },
      ],
      "5.2": [
       
        {
          id: 1,
          question: "What is the purpose of using a CSS framework like Bootstrap or Foundation?",
          options: [
            "A) To speed up the process of web development",
            "B) To replace HTML in web pages",
            "C) To enhance server-side scripting languages",
            "D) To create dynamic animations",
          ],
          correctAnswer: "A) To speed up the process of web development",
        },
        {
          id: 2,
          question: "Which CSS framework is known for its mobile-first approach?",
          options: [
            "A) Bootstrap",
            "B) Foundation",
            "C) Bulma",
            "D) Materialize",
          ],
          correctAnswer: "A) Bootstrap",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "How can you include Bootstrap in your HTML file?",
          options: [
            "A) Linking to the Bootstrap CDN",
            "B) Installing it using npm",
            "C) Downloading and linking the CSS file",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "Which CSS framework provides a grid system for layout management?",
          options: [
            "A) Foundation",
            "B) Bulma",
            "C) Tailwind CSS",
            "D) Semantic UI",
          ],
          correctAnswer: "A) Foundation",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "In Bootstrap, which class is used to create a responsive navigation bar?",
          options: [
            "A) .navbar",
            "B) .nav",
            "C) .navigation",
            "D) .navbar-collapse",
          ],
          correctAnswer: "A) .navbar",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 6,
          question: "How can you customize the colors in Bootstrap?",
          options: [
            "A) By overriding Bootstrap variables in a custom CSS file",
            "B) By directly modifying the Bootstrap source code",
            "C) By using inline styles in HTML",
            "D) By using JavaScript",
          ],
          correctAnswer: "A) By overriding Bootstrap variables in a custom CSS file",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 7,
          question: "Which class is used to create a full-width container in Bootstrap?",
          options: [
            "A) .container-full",
            "B) .container-fluid",
            "C) .container-wide",
            "D) .full-width-container",
          ],
          correctAnswer: "B) .container-fluid",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 8,
          question: "What is the purpose of the Foundation CLI (Command Line Interface)?",
          options: [
            "A) To generate a new Foundation project",
            "B) To compile Sass files into CSS",
            "C) To optimize images for the web",
            "D) To create a local server for development",
          ],
          correctAnswer: "A) To generate a new Foundation project",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 9,
          question: "Which CSS framework follows a utility-first approach?",
          options: [
            "A) Bulma",
            "B) Tailwind CSS",
            "C) Semantic UI",
            "D) Materialize",
          ],
          correctAnswer: "B) Tailwind CSS",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 10,
          question: "How can you customize the default styles in Foundation?",
          options: [
            "A) By using the _custom.scss file",
            "B) By directly editing the compiled CSS files",
            "C) By adding inline styles to HTML elements",
            "D) By using JavaScript",
          ],
          correctAnswer: "A) By using the _custom.scss file",
        },
        {
          id: 11,
          question: "Which CSS framework is known for its minimalist design and lightweight nature?",
          options: [
            "A) Bulma",
            "B) Skeleton",
            "C) UIKit",
            "D) Spectre.css",
          ],
          correctAnswer: "B) Skeleton",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 12
        {
          id: 12,
          question: "What is the purpose of a CSS reset or normalize stylesheet?",
          options: [
            "A) To provide a consistent default styling across different browsers",
            "B) To remove all CSS styles from a webpage",
            "C) To override default browser styles",
            "D) To add extra styling on top of existing styles",
          ],
          correctAnswer: "A) To provide a consistent default styling across different browsers",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 13
        {
          id: 13,
          question: "Which CSS framework is built on top of Google's Material Design?",
          options: [
            "A) Materialize",
            "B) Bulma",
            "C) Tailwind CSS",
            "D) UIKit",
          ],
          correctAnswer: "A) Materialize",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 14
        {
          id: 14,
          question: "What class can be used in Bootstrap to create a button group?",
          options: [
            "A) .btn-group",
            "B) .button-group",
            "C) .button-container",
            "D) .btn-container",
          ],
          correctAnswer: "A) .btn-group",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 15
        {
          id: 15,
          question: "How can you extend the functionality of Bootstrap using JavaScript?",
          options: [
            "A) By writing custom JavaScript code",
            "B) By including Bootstrap's JavaScript file",
            "C) By using jQuery with Bootstrap",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 16
        {
          id: 16,
          question: "Which CSS framework provides a built-in dark mode feature?",
          options: [
            "A) Semantic UI",
            "B) Bulma",
            "C) Materialize",
            "D) Tailwind CSS",
          ],
          correctAnswer: "C) Materialize",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 17
        {
          id: 17,
          question: "In Foundation, what class can be used to create a responsive menu?",
          options: [
            "A) .menu",
            "B) .nav",
            "C) .top-bar",
            "D) .menu-bar",
          ],
          correctAnswer: "C) .top-bar",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 18
        {
          id: 18,
          question: "How can you customize the default colors in Foundation?",
          options: [
            "A) By using Sass variables in the _settings.scss file",
            "B) By directly modifying the compiled CSS files",
            "C) By adding inline styles to HTML elements",
            "D) By using JavaScript",
          ],
          correctAnswer: "A) By using Sass variables in the _settings.scss file",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 19
        {
          id: 19,
          question: "Which CSS framework is known for its emphasis on flat design and simplicity?",
          options: [
            "A) Bulma",
            "B) Materialize",
            "C) UIKit",
            "D) Spectre.css",
          ],
          correctAnswer: "A) Bulma",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 20
        {
          id: 20,
          question: "In Bootstrap, which class is used to create a responsive grid system?",
          options: [
            "A) .grid",
            "B) .row",
            "C) .col",
            "D) .container",
          ],
          correctAnswer: "B) .row",
        },
        {
          id: 21,
          question: "How can you customize the default font in Bootstrap?",
          options: [
            "A) By overriding Bootstrap variables in a custom CSS file",
            "B) By directly editing the Bootstrap source code",
            "C) By using inline styles in HTML",
            "D) By using JavaScript",
          ],
          correctAnswer: "A) By overriding Bootstrap variables in a custom CSS file",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 22
        {
          id: 22,
          question: "Which CSS framework is known for its focus on semantic HTML and accessibility?",
          options: [
            "A) Semantic UI",
            "B) Bulma",
            "C) Materialize",
            "D) Foundation",
          ],
          correctAnswer: "A) Semantic UI",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 23
        {
          id: 23,
          question: "In Foundation, which class can be used to create a flexible video container?",
          options: [
            "A) .video-container",
            "B) .responsive-video",
            "C) .embed-container",
            "D) .flex-video",
          ],
          correctAnswer: "D) .flex-video",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 24
        {
          id: 24,
          question: "How can you customize the default styles in Bulma?",
          options: [
            "A) By using Sass variables in the _variables.scss file",
            "B) By directly modifying the compiled CSS files",
            "C) By adding inline styles to HTML elements",
            "D) By using JavaScript",
          ],
          correctAnswer: "A) By using Sass variables in the _variables.scss file",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 25
        {
          id: 25,
          question: "Which CSS framework provides a utility-first approach to styling?",
          options: [
            "A) Tailwind CSS",
            "B) UIKit",
            "C) Spectre.css",
            "D) Semantic UI",
          ],
          correctAnswer: "A) Tailwind CSS",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 26
        {
          id: 26,
          question: "What class can be used in Bootstrap to create a card component?",
          options: [
            "A) .card",
            "B) .panel",
            "C) .box",
            "D) .container",
          ],
          correctAnswer: "A) .card",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 27
        {
          id: 27,
          question: "How can you customize the default styles in Tailwind CSS?",
          options: [
            "A) By modifying the tailwind.config.js file",
            "B) By directly editing the compiled CSS files",
            "C) By adding inline styles to HTML elements",
            "D) By using JavaScript",
          ],
          correctAnswer: "A) By modifying the tailwind.config.js file",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 28
        {
          id: 28,
          question: "What class can be used in Bootstrap to create a card component?",
          options: [
            "A) .card",
            "B) .panel",
            "C) .box",
            "D) .container",
          ],
          correctAnswer: "A) .card",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 29
        {
          id: 29,
          question: "In Foundation, which class can be used to create a flexible video container?",
          options: [
            "A) .video-container",
            "B) .responsive-video",
            "C) .embed-container",
            "D) .flex-video",
          ],
          correctAnswer: "D) .flex-video",
        },
        // Add more questions for subchapter 1.1 as needed
  
        // Question 30
        {
          id: 30,
          question: "In Foundation, which class can be used to create a flexible video container?",
          options: [
            "A) .video-container",
            "B) .responsive-video",
            "C) .embed-container",
            "D) .flex-video",
          ],
          correctAnswer: "D) .flex-video",
        },
      ],
      
    },

    //chapter 5 ended





    6: {
      // Chapter 1
      "6.1": [
        {
          id: 1,
          question: "What does BEM stand for in CSS methodology?",
          options: [
            "A) Block Element Modifier",
            "B) Basic Element Model",
            "C) Bootstrap Element Module",
            "D) Block Extension Module",
          ],
          correctAnswer: "A) Block Element Modifier",
        },
        {
          id: 2,
          question: "Which CSS methodology focuses on categorizing CSS rules into five categories: Base, Layout, Module, State, and Theme?",
          options: [
            "A) BEM",
            "B) SMACSS",
            "C) OOCSS",
            "D) ITCSS",
          ],
          correctAnswer: "B) SMACSS",
        },
        {
          id: 3,
          question: "Which of the following is an example of a CSS anti-pattern?",
          options: [
            "A) Using inline styles",
            "B) Following the BEM methodology",
            "C) Grouping related styles together",
            "D) Avoiding the use of class selectors",
          ],
          correctAnswer: "A) Using inline styles",
        },
        {
          id: 4,
          question: "Which CSS anti-pattern refers to the practice of adding excessive specificity to selectors, making it difficult to override styles later?",
          options: [
            "A) Divitis",
            "B) Specificity wars",
            "C) IDitis",
            "D) Classitis",
          ],
          correctAnswer: "B) Specificity wars",
        },
        {
          id: 5,
          question: "In the BEM methodology, which of the following represents a block?",
          options: [
            "A) .header",
            "B) .header__logo",
            "C) .header--large",
            "D) .header-container",
          ],
          correctAnswer: "A) .header",
        },
        {
          id: 6,
          question: "Which of the following is a benefit of using CSS methodologies like BEM or SMACSS?",
          options: [
            "A) Increased browser compatibility",
            "B) Improved code organization and maintainability",
            "C) Faster page load times",
            "D) Enhanced SEO performance",
          ],
          correctAnswer: "B) Improved code organization and maintainability",
        },
        {
          id: 7,
          question: "In SMACSS, which category focuses on the high-level layout of a page?",
          options: [
            "A) Base",
            "B) Layout",
            "C) Module",
            "D) State",
          ],
          correctAnswer: "B) Layout",
        },
        {
          id: 8,
          question: "Which CSS anti-pattern refers to the practice of using overly generic class names that don't convey any meaningful information about the element's purpose?",
          options: [
            "A) Divitis",
            "B) Classitis",
            "C) Meaningless classes",
            "D) Descriptive naming",
          ],
          correctAnswer: "B) Classitis",
        },
        {
          id: 9,
          question: "Which of the following is an example of a BEM modifier class?",
          options: [
            "A) .button",
            "B) .button--primary",
            "C) .button__icon",
            "D) .button-container",
          ],
          correctAnswer: "B) .button--primary",
        },
        {
          id: 10,
          question: "Which CSS methodology emphasizes separating structure and skin, allowing for greater flexibility in design?",
          options: [
            "A) OOCSS",
            "B) ITCSS",
            "C) BEM",
            "D) SMACSS",
          ],
          correctAnswer: "A) OOCSS",
        },
        {
          id: 11,
          question: "What is the purpose of the 'O' in OOCSS?",
          options: [
            "A) Object",
            "B) Overlapping",
            "C) Outer",
            "D) Organic",
          ],
          correctAnswer: "A) Object",
        },
        {
          id: 12,
          question: "Which CSS methodology organizes stylesheets based on the specificity and inheritance of selectors?",
          options: [
            "A) OOCSS",
            "B) ITCSS",
            "C) BEM",
            "D) SMACSS",
          ],
          correctAnswer: "B) ITCSS",
        },
        {
          id: 13,
          question: "Which of the following is an example of the 'Single Responsibility Principle' in CSS?",
          options: [
            "A) Using a single class for both layout and styling",
            "B) Separating layout styles from presentation styles",
            "C) Applying multiple styles directly in the HTML file",
            "D) Using inline styles for all elements",
          ],
          correctAnswer: "B) Separating layout styles from presentation styles",
        },
        {
          id: 14,
          question: "In the BEM methodology, what does the '__' (double underscore) represent?",
          options: [
            "A) A modifier",
            "B) A block",
            "C) An element",
            "D) A state",
          ],
          correctAnswer: "C) An element",
        },
        {
          id: 15,
          question: "Which CSS anti-pattern refers to the excessive use of unnecessary <div> elements for styling purposes?",
          options: [
            "A) Divitis",
            "B) Specificity wars",
            "C) IDitis",
            "D) Classitis",
          ],
          correctAnswer: "A) Divitis",
        },
        {
          id: 16,
          question: "What is the primary goal of using a CSS methodology like BEM or SMACSS?",
          options: [
            "A) To eliminate the need for CSS altogether",
            "B) To improve code maintainability and scalability",
            "C) To enhance JavaScript performance",
            "D) To optimize server response times",
          ],
          correctAnswer: "B) To improve code maintainability and scalability",
        },
        {
          id: 17,
          question: "Which CSS methodology advocates for the separation of container and content elements?",
          options: [
            "A) BEM",
            "B) SMACSS",
            "C) OOCSS",
            "D) ITCSS",
          ],
          correctAnswer: "C) OOCSS",
        },
        {
          id: 18,
          question: "Which CSS anti-pattern refers to the practice of using IDs for styling, which can lead to specificity issues?",
          options: [
            "A) Divitis",
            "B) Specificity wars",
            "C) IDitis",
            "D) Classitis",
          ],
          correctAnswer: "C) IDitis",
        },
        {
          id: 19,
          question: "In SMACSS, which category focuses on the unique states or behaviors of individual modules?",
          options: [
            "A) Base",
            "B) Layout",
            "C) Module",
            "D) State",
          ],
          correctAnswer: "D) State",
        },
        {
          id: 20,
          question: "Which of the following is a key principle of writing maintainable CSS code?",
          options: [
            "A) Avoiding meaningful class names",
            "B) Using inline styles for all elements",
            "C) Keeping styles organized and modular",
            "D) Applying styles directly in the HTML file",
          ],
          correctAnswer: "C) Keeping styles organized and modular",
        },
        {
          id: 21,
          question: "In the BEM methodology, what does the '--' (double hyphen) represent?",
          options: [
            "A) A modifier",
            "B) A block",
            "C) An element",
            "D) A state",
          ],
          correctAnswer: "A) A modifier",
        },
        {
          id: 22,
          question: "Which CSS methodology emphasizes the use of reusable objects and components?",
          options: [
            "A) OOCSS",
            "B) ITCSS",
            "C) BEM",
            "D) SMACSS",
          ],
          correctAnswer: "A) OOCSS",
        },
        {
          id: 23,
          question: "What is the primary goal of avoiding CSS anti-patterns?",
          options: [
            "A) To make the code more difficult to understand",
            "B) To improve code maintainability and readability",
            "C) To increase file size",
            "D) To slow down page loading times",
          ],
          correctAnswer: "B) To improve code maintainability and readability",
        },
        {
          id: 24,
          question: "Which CSS anti-pattern refers to the practice of applying styles directly to elements using the style attribute?",
          options: [
            "A) Divitis",
            "B) Inline styling",
            "C) IDitis",
            "D) Classitis",
          ],
          correctAnswer: "B) Inline styling",
        },
        {
          id: 25,
          question: "Which CSS methodology is known for its 'cascading' nature, allowing styles to be inherited from parent elements?",
          options: [
            "A) OOCSS",
            "B) ITCSS",
            "C) BEM",
            "D) SMACSS",
          ],
          correctAnswer: "D) SMACSS",
        },
        {
          id: 26,
          question: "Which of the following is a benefit of using CSS methodologies like OOCSS or ITCSS?",
          options: [
            "A) Increased specificity conflicts",
            "B) Improved performance",
            "C) Reduced modularity",
            "D) Decreased scalability",
          ],
          correctAnswer: "B) Improved performance",
        },
        {
          id: 27,
          question: "In SMACSS, which category focuses on the lowest-level, most specific parts of the design?",
          options: [
            "A) Base",
            "B) Layout",
            "C) Module",
            "D) State",
          ],
          correctAnswer: "A) Base",
        },
        {
          id: 28,
          question: "Which CSS anti-pattern refers to the practice of using IDs in CSS selectors, which can lead to low reusability and maintainability?",
          options: [
            "A) Divitis",
            "B) Specificity wars",
            "C) IDitis",
            "D) Classitis",
          ],
          correctAnswer: "C) IDitis",
        },
        {
          id: 29,
          question: "Which CSS methodology focuses on the separation of concerns, with one stylesheet containing only structural styles and another containing skin styles?",
          options: [
            "A) OOCSS",
            "B) ITCSS",
            "C) BEM",
            "D) SMACSS",
          ],
          correctAnswer: "A) OOCSS",
        },
        {
          id: 30,
          question: "What is the primary goal of the ITCSS methodology?",
          options: [
            "A) To organize CSS based on specificity and inheritance",
            "B) To separate container and content elements",
            "C) To focus on the high-level layout of a page",
            "D) To create a scalable and maintainable architecture for CSS",
          ],
          correctAnswer: "D) To create a scalable and maintainable architecture for CSS",
        },
        
      ],
      
      
      
      "6.2": [
        {
          id: 1,
          question: "Which of the following techniques helps improve website performance by reducing the size of CSS files?",
          options: [
            "A) Minification",
            "B) Concatenation",
            "C) Compression",
            "D) All of the above",
          ],
          correctAnswer: "A) Minification",
        },
        {
          id: 2,
          question: "What does CSS minification primarily involve?",
          options: [
            "A) Combining multiple CSS files into one",
            "B) Removing whitespace, comments, and unnecessary characters",
            "C) Reducing the size of images",
            "D) Grouping CSS rules alphabetically",
          ],
          correctAnswer: "B) Removing whitespace, comments, and unnecessary characters",
        },
        {
          id: 3,
          question: "Which CSS property is used to combine multiple background images into a single image?",
          options: [
            "A) background-merge",
            "B) background-blend-mode",
            "C) background-attachment",
            "D) background-image",
          ],
          correctAnswer: "D) background-image",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "What is the purpose of concatenating CSS files?",
          options: [
            "A) To increase file size",
            "B) To improve page load speed",
            "C) To make CSS files more readable",
            "D) To add comments to CSS code",
          ],
          correctAnswer: "B) To improve page load speed",
        },
        {
          id: 5,
          question: "When should you consider reducing HTTP requests in CSS optimization?",
          options: [
            "A) Always, as it's a good practice",
            "B) Only for large websites",
            "C) Only for small websites",
            "D) Never, it has no impact on performance",
          ],
          correctAnswer: "A) Always, as it's a good practice",
        },
        {
          id: 6,
          question: "Which CSS property can help reduce the number of HTTP requests for font files?",
          options: [
            "A) font-family",
            "B) font-size",
            "C) font-display",
            "D) font-weight",
          ],
          correctAnswer: "C) font-display",
        },
        {
          id: 7,
          question: "What is the purpose of using CSS sprites?",
          options: [
            "A) To create complex animations",
            "B) To combine multiple images into a single image for reduced HTTP requests",
            "C) To style text with special effects",
            "D) To improve SEO",
          ],
          correctAnswer: "B) To combine multiple images into a single image for reduced HTTP requests",
        },
        {
          id: 8,
          question: "Which CSS preprocessor allows you to use variables and mixins for better code organization?",
          options: [
            "A) HTML",
            "B) CSS Grid",
            "C) SASS",
            "D) Flexbox",
          ],
          correctAnswer: "C) SASS",
        },
        {
          id: 9,
          question: "Which CSS property is used for specifying the order in which multiple background images are displayed?",
          options: [
            "A) background-position",
            "B) background-repeat",
            "C) background-clip",
            "D) background-order",
          ],
          correctAnswer: "A) background-position",
        },
        {
          id: 10,
          question: "In CSS, what is the purpose of using media queries?",
          options: [
            "A) To apply different styles based on user interaction",
            "B) To target specific elements with JavaScript",
            "C) To apply styles based on the device's characteristics, like screen size",
            "D) To control the order of CSS rules",
          ],
          correctAnswer: "C) To apply styles based on the device's characteristics, like screen size",
        },
        {
          id: 11,
          question: "How can you include an external CSS file in an HTML document?",
          options: [
            "A) Using the <script> tag",
            "B) Using the <link> tag",
            "C) Using the <style> tag",
            "D) Using the <css> tag",
          ],
          correctAnswer: "B) Using the <link> tag",
        },
        {
          id: 12,
          question: "Which CSS property is used to specify the time it takes for a CSS transition to complete?",
          options: [
            "A) transition-property",
            "B) transition-duration",
            "C) transition-delay",
            "D) transition-timing-function",
          ],
          correctAnswer: "B) transition-duration",
        },
        {
          id: 13,
          question: "To improve website performance, where should you place the CSS <link> element in an HTML document?",
          options: [
            "A) In the <head> section",
            "B) At the bottom of the <body> section",
            "C) Just before the closing </html> tag",
            "D) Anywhere within the document",
          ],
          correctAnswer: "A) In the <head> section",
        },
        {
          id: 14,
          question: "Which CSS property is used to specify the order in which multiple background images are stacked?",
          options: [
            "A) z-index",
            "B) layer-order",
            "C) background-order",
            "D) stack-order",
          ],
          correctAnswer: "C) background-order",
        },
        {
          id: 15,
          question: "What does the CSS property font-display: swap; do?",
          options: [
            "A) It swaps the font with an image.",
            "B) It swaps the font with another font if the specified font is unavailable.",
            "C) It swaps the font with a different color.",
            "D) It swaps the font with a background image.",
          ],
          correctAnswer: "B) It swaps the font with another font if the specified font is unavailable.",
        },
        {
          id: 16,
          question: "How can you prevent a specific CSS file from being cached by the browser?",
          options: [
            "A) By setting a high font-weight value",
            "B) By using a unique filename or query parameter",
            "C) By using the !important declaration",
            "D) By using inline CSS",
          ],
          correctAnswer: "B) By using a unique filename or query parameter",
        },
        {
          id: 17,
          question: "Which CSS property controls the space between the border and content of an element?",
          options: [
            "A) margin",
            "B) padding",
            "C) border-spacing",
            "D) spacing",
          ],
          correctAnswer: "B) padding",
        },
        {
          id: 18,
          question: "What is the purpose of the CSS property will-change?",
          options: [
            "A) It changes the text color of an element.",
            "B) It indicates to the browser that an element's property will change in the future, optimizing performance.",
            "C) It changes the order of elements in the DOM.",
            "D) It specifies the duration of a CSS transition.",
          ],
          correctAnswer: "B) It indicates to the browser that an element's property will change in the future, optimizing performance.",
        },
        {
          id: 19,
          question: "Which of the following is NOT a valid value for the background-repeat property in CSS?",
          options: [
            "A) repeat-x",
            "B) repeat-y",
            "C) no-repeat",
            "D) repeat-both",
          ],
          correctAnswer: "D) repeat-both",
        },
        {
          id: 20,
          question: "When using CSS animations, which property is used to specify the number of times an animation should repeat?",
          options: [
            "A) animation-direction",
            "B) animation-duration",
            "C) animation-iteration-count",
            "D) animation-timing-function",
          ],
          correctAnswer: "C) animation-iteration-count",
        },
        {
          id: 21,
          question: "Which CSS property is used to create a shadow effect for text or elements?",
          options: [
            "A) shadow-box",
            "B) text-shadow",
            "C) element-shadow",
            "D) box-shadow",
          ],
          correctAnswer: "B) text-shadow",
        },
        {
          id: 22,
          question: "What does the CSS property box-sizing: border-box; do?",
          options: [
            "A) It adds a border around the box.",
            "B) It adjusts the box size to include padding and border, not just the content.",
            "C) It makes the box transparent.",
            "D) It removes the box from the document flow.",
          ],
          correctAnswer: "B) It adjusts the box size to include padding and border, not just the content.",
        },
        {
          id: 23,
          question: "Which CSS selector is used to select all elements with a specific class?",
          options: [
            "A) #",
            "B) .",
            "C) :",
            "D) /",
          ],
          correctAnswer: "B) .",
        },
        {
          id: 24,
          question: "Which CSS unit of measurement is relative to the font size of the parent element?",
          options: [
            "A) em",
            "B) px",
            "C) %",
            "D) rem",
          ],
          correctAnswer: "A) em",
        },
        {
          id: 25,
          question: "What does the CSS property overflow: hidden; do?",
          options: [
            "A) It hides the element from view.",
            "B) It clips content that overflows the element's box.",
            "C) It adds a scroll bar to the element.",
            "D) It makes the element transparent.",
          ],
          correctAnswer: "B) It clips content that overflows the element's box.",
        },
        {
          id: 26,
          question: "How can you include an inline CSS style directly within an HTML element?",
          options: [
            "A) By using the <style> tag",
            "B) By using the style attribute",
            "C) By using the class attribute",
            "D) By using the id attribute",
          ],
          correctAnswer: "B) By using the style attribute",
        },
        {
          id: 27,
          question: "Which CSS property is used to specify the space between cells in a table?",
          options: [
            "A) table-space",
            "B) table-cell-spacing",
            "C) border-spacing",
            "D) cell-padding",
          ],
          correctAnswer: "C) border-spacing",
        },
        {
          id: 28,
          question: "When using CSS animations, which property is used to control the timing of the animation?",
          options: [
            "A) animation-duration",
            "B) animation-delay",
            "C) animation-timing-function",
            "D) animation-iteration-count",
          ],
          correctAnswer: "C) animation-timing-function",
        },
        {
          id: 29,
          question: "What is the purpose of CSS vendor prefixes like -webkit- and -moz-?",
          options: [
            "A) To add random prefixes to CSS properties",
            "B) To specify custom fonts",
            "C) To ensure compatibility with specific browsers during experimental CSS features",
            "D) To create hidden elements on the page",
          ],
          correctAnswer: "C) To ensure compatibility with specific browsers during experimental CSS features",
        },
        {
          id: 30,
          question: "Which CSS property is used to control the order in which elements are displayed in a flex container?",
          options: [
            "A) flex-direction",
            "B) order",
            "C) flex-wrap",
            "D) flex-flow",
          ],
          correctAnswer: "B) order",
        },
      ],
     
    },

    //chapter 6 ended
  },

  //subject 3 ended





  4: { //html
    // Module 2
    1: {
      // Chapter 1
      "1.1": [
        {
          id: 1,
          question: "What does HTML stand for?",
          options: [
            "A) Hyper Text Markup Language",
            "B) High-level Text Manipulation Language",
            "C) Hyper Transfer Markup Language",
            "D) Hyperlinking and Text Manipulation Language",
          ],
          correctAnswer: "A) Hyper Text Markup Language",
        },
        {
          id: 2,
          question: "A Web Server is responsible for displaying web pages to users. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "A _______ is a software that retrieves and displays web pages.",
          options: ["A) Web Browser", "B) Web Server", "C) Web Client", "D) Web Page"],
          correctAnswer: "A) Web Browser",
        },
        {
          id: 4,
          question: "Which of the following is an example of a static web content?",
          options: [
            "A) A live stock market ticker",
            "B) A blog with user comments",
            "C) A company's 'About Us' page",
            "D) A real-time weather forecast",
          ],
          correctAnswer: "C) A company's 'About Us' page",
        },
        {
          id: 5,
          question: "What is the primary difference between static and dynamic web content?",
          options: [
            "A) Static content is displayed using JavaScript, while dynamic content is not.",
            "B) Static content changes frequently, while dynamic content remains constant.",
            "C) Static content is fixed and doesn't change based on user interactions, while dynamic content can change based on user input or other factors.",
            "D) Dynamic content is only used for personal blogs, while static content is used for business websites.",
          ],
          correctAnswer: "C) Static content is fixed and doesn't change based on user interactions, while dynamic content can change based on user input or other factors.",
        },
        {
          id: 6,
          question: "A _______ is a collection of related web pages linked together and hosted on a web server.",
          options: ["A) Web Site", "B) Web Server", "C) Web Page", "D) Web Client"],
          correctAnswer: "A) Web Site",
        },
        {
          id: 7,
          question: "Which of the following is NOT a web browser?",
          options: ["A) Chrome", "B) Firefox", "C) Safari", "D) Apache"],
          correctAnswer: "D) Apache",
        },
        {
          id: 8,
          question: "A Web Page can be both static and dynamic simultaneously. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 9,
          question: "A _______ is a computer that stores and serves web pages to users over the internet.",
          options: ["A) Web Server", "B) Web Client", "C) Web Browser", "D) Web Page"],
          correctAnswer: "A) Web Server",
        },
        {
          id: 10,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Quiz</title>\n</head>\n<body>\n  <h1>Hello, World!</h1>\n</body>\n</html>",
          options: [
            "A) 'Quiz'",
            "B) 'Hello, World!'",
            "C) Nothing",
            "D) 'HTML'",
          ],
          correctAnswer: "B) 'Hello, World!'",
        },
        {
          id: 11,
          question: "A Web Client is responsible for hosting websites. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 12,
          question: "_________ web content can change based on user interactions or other factors.",
          options: ["Static", "Dynamic"],
          correctAnswer: "Dynamic",
        },
        {
          id: 13,
          question: "Which software is used to access web pages on the internet?",
          options: [
            "A) Web Server",
            "B) Web Client",
            "C) Web Page",
            "D) Web Browser",
          ],
          correctAnswer: "D) Web Browser",
        },
        {
          id: 14,
          question: "Static web content is more interactive than dynamic web content. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 15,
          question: "A _______ is a single, individual page on a website.",
          options: ["A) Web Site", "B) Web Server", "C) Web Page", "D) Web Client"],
          correctAnswer: "C) Web Page",
        },
        {
          id: 16,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Quiz</title>\n</head>\n<body>\n  <p>This is a web page.</p>\n</body>\n</html>",
          options: [
            "A) 'Quiz'",
            "B) 'This is a web page.'",
            "C) Nothing",
            "D) 'HTML'",
          ],
          correctAnswer: "B) 'This is a web page.'",
        },
        {
          id: 17,
          question: "What is a Web Server responsible for?",
          options: [
            "A) Displaying web pages to users",
            "B) Storing web pages",
            "C) Accessing web pages",
            "D) None of the above",
          ],
          correctAnswer: "B) Storing web pages",
        },
        {
          id: 18,
          question: "A Web Browser and a Web Page are the same thing. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 19,
          question: "A _______ is a program or application used to access web content.",
          options: ["A) Web Browser", "B) Web Server", "C) Web Client", "D) Web Page"],
          correctAnswer: "C) Web Client",
        },
        {
          id: 20,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Quiz</title>\n</head>\n<body>\n  <h2>Welcome to our website!</h2>\n</body>\n</html>",
          options: [
            "A) 'Welcome to our website!'",
            "B) 'Quiz'",
            "C) Nothing",
            "D) 'HTML'",
          ],
          correctAnswer: "A) 'Welcome to our website!'",
        },
        {
          id: 21,
          question: "Web browsers are responsible for hosting websites. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 22,
          question: "A _______ is a collection of related web pages linked together.",
          options: ["A) Web Site", "B) Web Server", "C) Web Page", "D) Web Client"],
          correctAnswer: "A) Web Site",
        },
        {
          id: 23,
          question: "Which of the following is an example of dynamic web content?",
          options: [
            "A) A company's contact information",
            "B) A real-time chat application",
            "C) A static product catalog",
            "D) A personal blog post",
          ],
          correctAnswer: "B) A real-time chat application",
        },
        {
          id: 24,
          question: "Static web content can change based on user interactions. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 25,
          question: "A _______ is a program or software that requests and displays web pages to users.",
          options: [
            "A) Web Browser",
            "B) Web Server",
            "C) Web Client",
            "D) Web Page",
          ],
          correctAnswer: "A) Web Browser",
        },
        {
          id: 26,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Quiz</title>\n</head>\n<body>\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2</li>\n    <li>Item 3</li>\n  </ul>\n</body>\n</html>",
          options: [
            "A) 'Quiz'",
            "B) 'Item 1, Item 2, Item 3'",
            "C) Nothing",
            "D) 'HTML'",
          ],
          correctAnswer: "B) 'Item 1, Item 2, Item 3'",
        },
        {
          id: 27,
          question: "Web servers are responsible for displaying web pages to users. (True/False)",
          options: ["True", "False"],
          correctAnswer: "False",
        },
        {
          id: 28,
          question: "A _______ is a type of web content that remains constant and doesn't change based on user interactions.",
          options: ["Static", "Dynamic"],
          correctAnswer: "Static",
        },
        {
          id: 29,
          question: "Which of the following is NOT a web server?",
          options: ["A) Apache", "B) Nginx", "C) Tomcat", "D) Chrome"],
          correctAnswer: "D) Chrome",
        },
        {
          id: 30,
          question: "Dynamic web content can change based on user input or other factors. (True/False)",
          options: ["True", "False"],
          correctAnswer: "True",
        },
      ],



      "1.2": [
        {
          id: 1,
          question: "What type of website primarily aims to provide information to users?",
          options: [
            "A) Personal website",
            "B) E-commerce website",
            "C) Informational website",
            "D) Entertainment website",
          ],
          correctAnswer: "C) Informational website",
        },
        {
          id: 2,
          question: "Which type of website is typically used to showcase an individual's portfolio or resume?",
          options: [
            "A) Commercial website",
            "B) Social networking site",
            "C) Personal website",
            "D) Forum",
          ],
          correctAnswer: "C) Personal website",
        },
        {
          id: 3,
          question: "Which type of website facilitates online buying and selling of products and services?",
          options: [
            "A) Entertainment website",
            "B) Commercial website",
            "C) Social networking site",
            "D) Search engine",
          ],
          correctAnswer: "B) Commercial website",
        },
        {
          id: 4,
          question: "What is the primary purpose of an entertainment website?",
          options: [
            "A) To provide information about products",
            "B) To sell goods and services",
            "C) To entertain and engage users with content",
            "D) To connect with friends and colleagues",
          ],
          correctAnswer: "C) To entertain and engage users with content",
        },
        {
          id: 5,
          question: "Which type of website allows users to create and share content with others, often in the form of text, images, and videos?",
          options: [
            "A) Forum",
            "B) Search engine",
            "C) Commercial website",
            "D) Social networking site",
          ],
          correctAnswer: "D) Social networking site",
        },
        {
          id: 6,
          question: "What is a forum on the internet?",
          options: [
            "A) A place to buy and sell products",
            "B) An online social network",
            "C) A website where users can discuss topics and share information",
            "D) A site for entertainment purposes only",
          ],
          correctAnswer: "C) A website where users can discuss topics and share information",
        },
        {
          id: 7,
          question: "Which type of website serves as a centralized location for searching the internet and accessing various web services?",
          options: [
            "A) Social networking site",
            "B) E-commerce website",
            "C) Forum",
            "D) Search engine",
          ],
          correctAnswer: "D) Search engine",
        },
        {
          id: 8,
          question: "What is the primary purpose of a web portal?",
          options: [
            "A) To provide entertainment content",
            "B) To connect with friends and family",
            "C) To offer a variety of services and information from a single entry point",
            "D) To sell products online",
          ],
          correctAnswer: "C) To offer a variety of services and information from a single entry point",
        },
        {
          id: 9,
          question: "Which type of website typically features user-generated content in the form of articles, reviews, or discussions?",
          options: [
            "A) Informational website",
            "B) E-commerce website",
            "C) Forum",
            "D) Personal website",
          ],
          correctAnswer: "C) Forum",
        },
        {
          id: 10,
          question: "What is the primary function of a personal website?",
          options: [
            "A) To provide news and information",
            "B) To offer e-commerce services",
            "C) To showcase an individual's interests, achievements, or projects",
            "D) To serve as a search engine",
          ],
          correctAnswer: "C) To showcase an individual's interests, achievements, or projects",
        },
        {
          id: 11,
          question: "Which type of website is designed for online shopping and transaction processing?",
          options: [
            "A) Informational website",
            "B) Personal website",
            "C) E-commerce website",
            "D) Commercial website",
          ],
          correctAnswer: "C) E-commerce website",
        },
        {
          id: 12,
          question: "Which of the following is an example of an e-commerce website?",
          options: [
            "A) Wikipedia",
            "B) Amazon",
            "C) Facebook",
            "D) Reddit",
          ],
          correctAnswer: "B) Amazon",
        },
        {
          id: 13,
          question: "What is the main objective of a commercial website?",
          options: [
            "A) To provide information",
            "B) To entertain users",
            "C) To generate revenue through online sales and advertising",
            "D) To connect with friends and colleagues",
          ],
          correctAnswer: "C) To generate revenue through online sales and advertising",
        },
        {
          id: 14,
          question: "Which type of website focuses on connecting individuals, allowing them to build personal and professional networks?",
          options: [
            "A) Personal website",
            "B) E-commerce website",
            "C) Social networking site",
            "D) Informational website",
          ],
          correctAnswer: "C) Social networking site",
        },
        {
          id: 15,
          question: "Which type of website is primarily used for sharing thoughts, opinions, and knowledge in the form of articles or posts?",
          options: [
            "A) Entertainment website",
            "B) Personal website",
            "C) Forum",
            "D) Search engine",
          ],
          correctAnswer: "C) Forum",
        },
        {
          id: 16,
          question: "Which type of website is most likely to feature product descriptions, pricing, and online shopping carts?",
          options: [
            "A) Personal website",
            "B) E-commerce website",
            "C) Social networking site",
            "D) Forum",
          ],
          correctAnswer: "B) E-commerce website",
        },
        {
          id: 17,
          question: "What is the primary function of an informational website?",
          options: [
            "A) To provide a platform for social interactions",
            "B) To sell products online",
            "C) To educate and inform users on specific topics",
            "D) To entertain users with multimedia content",
          ],
          correctAnswer: "C) To educate and inform users on specific topics",
        },
        {
          id: 18,
          question: "Which type of website is Wikipedia an example of?",
          options: [
            "A) E-commerce website",
            "B) Personal website",
            "C) Social networking site",
            "D) Informational website",
          ],
          correctAnswer: "D) Informational website",
        },
        {
          id: 19,
          question: "Which type of website is more likely to feature user reviews and ratings for products and services?",
          options: [
            "A) Personal website",
            "B) E-commerce website",
            "C) Social networking site",
            "D) Forum",
          ],
          correctAnswer: "B) E-commerce website",
        },
        {
          id: 20,
          question: "What is the primary objective of a social networking site?",
          options: [
            "A) To provide information about products and services",
            "B) To offer online shopping options",
            "C) To facilitate connections and interactions among users",
            "D) To serve as a search engine",
          ],
          correctAnswer: "C) To facilitate connections and interactions among users",
        },
        {
          id: 21,
          question: "Which type of website is YouTube, a platform for sharing videos, classified as?",
          options: [
            "A) Informational website",
            "B) Personal website",
            "C) E-commerce website",
            "D) Entertainment website",
          ],
          correctAnswer: "D) Entertainment website",
        },
        {
          id: 22,
          question: "Which type of website is LinkedIn, a platform for professional networking?",
          options: [
            "A) Forum",
            "B) E-commerce website",
            "C) Social networking site",
            "D) Informational website",
          ],
          correctAnswer: "C) Social networking site",
        },
        {
          id: 23,
          question: "What is the primary purpose of a blog on the internet?",
          options: [
            "A) To sell products",
            "B) To provide information and engage readers with regular posts",
            "C) To offer a wide range of services",
            "D) To serve as an entertainment platform",
          ],
          correctAnswer: "B) To provide information and engage readers with regular posts",
        },
        {
          id: 24,
          question: "Which type of website is Amazon, an online marketplace for buying and selling products?",
          options: [
            "A) Personal website",
            "B) Informational website",
            "C) E-commerce website",
            "D) Social networking site",
          ],
          correctAnswer: "C) E-commerce website",
        },
        {
          id: 25,
          question: "Which type of website typically includes features like user profiles, friend requests, and status updates?",
          options: [
            "A) Personal website",
            "B) E-commerce website",
            "C) Social networking site",
            "D) Forum",
          ],
          correctAnswer: "C) Social networking site",
        },
        {
          id: 26,
          question: "What is the primary function of a search engine?",
          options: [
            "A) To provide a platform for social interactions",
            "B) To generate revenue through online sales",
            "C) To facilitate online shopping",
            "D) To help users find information on the internet",
          ],
          correctAnswer: "D) To help users find information on the internet",
        },
        {
          id: 27,
          question: "Which type of website is eBay, an online marketplace for buying and selling various items?",
          options: [
            "A) Informational website",
            "B) Personal website",
            "C) E-commerce website",
            "D) Entertainment website",
          ],
          correctAnswer: "C) E-commerce website",
        },
        {
          id: 28,
          question: "Which of the following is a common feature of social networking sites?",
          options: [
            "A) Product reviews and ratings",
            "B) User profiles and connections",
            "C) Encyclopedia-style articles",
            "D) Online shopping carts",
          ],
          correctAnswer: "B) User profiles and connections",
        },
        {
          id: 29,
          question: "Which type of website is focused on providing a platform for open discussions on various topics?",
          options: [
            "A) Personal website",
            "B) E-commerce website",
            "C) Social networking site",
            "D) Forum",
          ],
          correctAnswer: "D) Forum",
        },
        {
          id: 30,
          question: "What is the primary purpose of a commercial website?",
          options: [
            "A) To provide a platform for online discussions",
            "B) To educate users on specific topics",
            "C) To generate revenue through online sales and advertising",
            "D) To serve as an entertainment platform",
          ],
          correctAnswer: "C) To generate revenue through online sales and advertising",
        },
      ],
    },
    //CHP 1 ENDED




    2: {
      // Chapter 1
      "2.1": [
        {
          id: 1,
          question: "What does HTML5 stand for?",
          options: [
            "A) Hyper Text Markup Language 5",
            "B) High-level Text Manipulation Language 5",
            "C) Hyper Transfer Markup Language 5",
            "D) Hyperlinking and Text Manipulation Language 5",
          ],
          correctAnswer: "A) Hyper Text Markup Language 5",
        },
        {
          id: 2,
          question: "The DOCTYPE declaration is used to specify the character encoding of an HTML document. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "_______ is used to declare the character encoding of an HTML document.",
          correctAnswer: "Character encoding",
        },
        {
          id: 4,
          question: "What are the main components of HTML5?",
          options: [
            "A) Elements, Styles, Scripts",
            "B) Elements, Tags, Attributes",
            "C) Head, Body, Footer",
            "D) Tables, Lists, Forms",
          ],
          correctAnswer: "B) Elements, Tags, Attributes",
        },
        {
          id: 5,
          question: "What will be displayed in the web browser when the above HTML5 code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML5 Example</title>\n</head>\n<body>\n  <h1>Hello, World!</h1>\n</body>\n</html>",
          options: [
            "A) 'HTML5 Example'",
            "B) 'Hello, World!'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'Hello, World!'",
        },
        {
          id: 6,
          question: "The DOCTYPE declaration is case-sensitive in HTML5. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 7,
          question: "In HTML, elements are enclosed in _______.",
          correctAnswer: "Tags",
        },
        {
          id: 8,
          question: "Which of the following is an example of an HTML5 attribute?",
          options: [
            "A) <h1>",
            "B) class='header'",
            "C) <body>",
            "D) <p>",
          ],
          correctAnswer: "B) class='header'",
        },
        {
          id: 9,
          question: "An HTML tag is always enclosed in angle brackets (< and >). (True/False)",
          correctAnswer: "True",
        },
        {
          id: 10,
          question: "The _______ element is used to define the structure of an HTML document.",
          correctAnswer: "<!DOCTYPE>",
        },
        {
          id: 11,
          question: "What will be displayed in the web browser when the above HTML5 code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <p>This is a paragraph.</p>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) 'This is a paragraph.'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'This is a paragraph.'",
        },
        {
          id: 12,
          question: "The <head> element of an HTML document contains the visible content of the web page. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 13,
          question: "HTML tags are used to mark up or _______ the content of a web page.",
          correctAnswer: "structure",
        },
        {
          id: 14,
          question: "What does the <p> tag represent in HTML?",
          options: [
            "A) A paragraph",
            "B) A link",
            "C) A heading",
            "D) An image",
          ],
          correctAnswer: "A) A paragraph",
        },
        {
          id: 15,
          question: "What will be displayed in the web browser when the above HTML5 code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Example</title>\n</head>\n<body>\n  <h2>Welcome to our website!</h2>\n</body>\n</html>",
          options: [
            "A) 'HTML Example'",
            "B) 'Welcome to our website!'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'Welcome to our website!'",
        },
        {
          id: 16,
          question: "Attributes provide additional information about HTML elements and are always visible in the web page. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 17,
          question: "The _______ element is used to create a clickable link in HTML.",
          correctAnswer: "<a>",
        },
        {
          id: 18,
          question: "Which HTML5 tag is used to define a heading?",
          options: [
            "A) <title>",
            "B) <h1>",
            "C) <p>",
            "D) <a>",
          ],
          correctAnswer: "B) <h1>",
        },
        {
          id: 19,
          question: "HTML elements can be nested inside other elements. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 20,
          question: "The _______ element is used to define the title of an HTML document.",
          correctAnswer: "<title>",
        },
        {
          id: 21,
          question: "What will be displayed in the web browser when the above HTML5 code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com'>Visit Example.com</a>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) 'Visit Example.com'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'Visit Example.com'",
        },
        {
          id: 22,
          question: "The <body> element contains the visible content of an HTML document. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The _______ attribute is used to specify the URL of a link in HTML.",
          correctAnswer: "href",
        },
        {
          id: 24,
          question: "Which HTML5 tag is used to create an unordered list?",
          options: [
            "A) <ul>",
            "B) <li>",
            "C) <ol>",
            "D) <p>",
          ],
          correctAnswer: "A) <ul>",
        },
        {
          id: 25,
          question: "What will be displayed in the web browser when the above HTML5 code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Example</title>\n</head>\n<body>\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2</li>\n    <li>Item 3</li>\n  </ul>\n</body>\n</html>",
          options: [
            "A) 'HTML Example'",
            "B) 'Item 1, Item 2, Item 3'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'Item 1, Item 2, Item 3'",
        },
        {
          id: 26,
          question: "The <ul> element is used to create a numbered list in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 27,
          question: "The _______ element is used to define an item in a list in HTML.",
          correctAnswer: "<li>",
        },
        {
          id: 28,
          question: "Which HTML5 tag is used to create an ordered list?",
          options: [
            "A) <ul>",
            "B) <li>",
            "C) <ol>",
            "D) <p>",
          ],
          correctAnswer: "C) <ol>",
        },
        {
          id: 29,
          question: "The <ol> element is used to create an unordered list in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 30,
          question: "The _______ element is used to group related HTML elements together.",
          correctAnswer: "<div>",
        },
      ],


      "2.2": [
        {
          id: 1,
          question: "Which HTML tag is used to define headings in a document?",
          options: [
            "A) <p>",
            "B) <h1>",
            "C) <br>",
            "D) <hr>",
          ],
          correctAnswer: "B) <h1>",
        },
        {
          id: 2,
          question: "The <p> tag is used to create a horizontal rule in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "The <br> tag is used to insert a _______ in the text.",
          correctAnswer: "line break",
        },
        {
          id: 4,
          question: "Which HTML tag is used to create a horizontal line?",
          options: [
            "A) <line>",
            "B) <break>",
            "C) <hr>",
            "D) <divider>",
          ],
          correctAnswer: "C) <hr>",
        },
        {
          id: 5,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <h2>Hello, World!</h2>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) 'Hello, World!'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'Hello, World!'",
        },
        {
          id: 6,
          question: "The <div> tag is used to define a block-level container for HTML elements. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <span> tag is used to apply styling or _______ to a specific part of the text.",
          correctAnswer: "formatting",
        },
        {
          id: 8,
          question: "Which HTML tag is used to display preformatted text?",
          options: [
            "A) <code>",
            "B) <pre>",
            "C) <span>",
            "D) <div>",
          ],
          correctAnswer: "B) <pre>",
        },
        {
          id: 9,
          question: "The <address> tag is used to define the footer of a web page. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 10,
          question: "The _______ tag is used to define a section of quoted text.",
          correctAnswer: "<blockquote>",
        },
        {
          id: 11,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <blockquote>This is a quoted text.</blockquote>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) 'This is a quoted text.'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'This is a quoted text.'",
        },
        {
          id: 12,
          question: "HTML comments are visible in the web page when it is loaded in a browser. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 13,
          question: "HTML comments are created using the _______ tag.",
          correctAnswer: "<!-- -->",
        },
        {
          id: 14,
          question: "Which HTML tag is used to define a paragraph?",
          options: [
            "A) <p>",
            "B) <line>",
            "C) <para>",
            "D) <text>",
          ],
          correctAnswer: "A) <p>",
        },
        {
          id: 15,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <p>This is a paragraph.</p>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) 'This is a paragraph.'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'This is a paragraph.'",
        },
        {
          id: 16,
          question: "The <div> tag is used to define inline elements in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 17,
          question: "The <header> tag is used to define a _______ section in an HTML document.",
          correctAnswer: "header",
        },
        {
          id: 18,
          question: "Which HTML tag is used to define the footer of a web page?",
          options: [
            "A) <foot>",
            "B) <footer>",
            "C) <end>",
            "D) <bottom>",
          ],
          correctAnswer: "B) <footer>",
        },
        {
          id: 19,
          question: "The <hr> tag is used to create a horizontal rule with a line break. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 20,
          question: "The <line break> tag is used to insert a _______.",
          correctAnswer: "line break",
        },
        {
          id: 21,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <hr>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) A horizontal line",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) A horizontal line",
        },
        {
          id: 22,
          question: "The <span> tag is used to group elements together for styling purposes. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The <pre> tag is used to display text exactly as it appears, preserving _______ and whitespace.",
          correctAnswer: "formatting",
        },
        {
          id: 24,
          question: "Which HTML tag is used to define a division or section of an HTML document?",
          options: [
            "A) <section>",
            "B) <div>",
            "C) <block>",
            "D) <area>",
          ],
          correctAnswer: "B) <div>",
        },
        {
          id: 25,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <div>This is a division.</div>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) 'This is a division.'",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) 'This is a division.'",
        },
        {
          id: 26,
          question: "The <blockquote> tag is used to define a section of quoted text that is indented. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "HTML comments are enclosed in _______.",
          correctAnswer: "<!-- -->",
        },
        {
          id: 28,
          question: "Which HTML tag is used to define a header for a section or page?",
          options: [
            "A) <head>",
            "B) <header>",
            "C) <title>",
            "D) <h1>",
          ],
          correctAnswer: "B) <header>",
        },
        {
          id: 29,
          question: "The <footer> tag is used to define the header of a web page. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 30,
          question: "The _______ tag is used to define a section of quoted text in HTML.",
          correctAnswer: "<blockquote>",
        },
      ],

      "2.3": [
        {
          id: 1,
          question: "Which HTML tag is used to make text bold?",
          options: [
            "A) <strong>",
            "B) <b>",
            "C) <bold>",
            "D) <em>",
          ],
          correctAnswer: "A) <strong>",
        },
        {
          id: 2,
          question: "The <italic> tag is used to make text italic in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "The <kbd> tag is used to define keyboard input with a _______ font.",
          correctAnswer: "monospace",
        },
        {
          id: 4,
          question: "Which HTML tag is used to make text italic?",
          options: [
            "A) <i>",
            "B) <italic>",
            "C) <em>",
            "D) <italics>",
          ],
          correctAnswer: "A) <i>",
        },
        {
          id: 5,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <strong>This is bold text.</strong>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) This is bold text.",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) This is bold text.",
        },
        {
          id: 6,
          question: "The <small> tag is used to make text smaller in HTML. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <ins> tag is used to indicate _______ text in HTML.",
          correctAnswer: "inserted",
        },
        {
          id: 8,
          question: "Which HTML tag is used to underline text?",
          options: [
            "A) <u>",
            "B) <underline>",
            "C) <ul>",
            "D) <line>",
          ],
          correctAnswer: "A) <u>",
        },
        {
          id: 9,
          question: "The <sup> tag is used to define subscript text in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 10,
          question: "The <sub> tag is used to define _______ text in HTML.",
          correctAnswer: "subscript",
        },
        {
          id: 11,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <u>This is underlined text.</u>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) This is underlined text.",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) This is underlined text.",
        },
        {
          id: 12,
          question: "The <del> tag is used to define deleted text in HTML. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 13,
          question: "The <em> tag is used to emphasize text in HTML and typically displays it in _______.",
          correctAnswer: "italics",
        },
        {
          id: 14,
          question: "Which HTML tag is used to represent keyboard input, like typing a key or key combination?",
          options: [
            "A) <kbd>",
            "B) <key>",
            "C) <input>",
            "D) <type>",
          ],
          correctAnswer: "A) <kbd>",
        },
        {
          id: 15,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <del>This is deleted text.</del>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) This is deleted text.",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) This is deleted text.",
        },
        {
          id: 16,
          question: "The <b> tag is used to make text bold in HTML. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 17,
          question: "The <u> tag is used to define _______ text in HTML.",
          correctAnswer: "underlined",
        },
        {
          id: 18,
          question: "Which HTML tag is used to indicate text that has been deleted or removed from a document?",
          options: [
            "A) <remove>",
            "B) <deleted>",
            "C) <del>",
            "D) <remove>",
          ],
          correctAnswer: "C) <del>",
        },
        {
          id: 19,
          question: "The <i> tag is used to define italic text in HTML. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 20,
          question: "The <small> tag is used to make text appear in a _______ font size.",
          correctAnswer: "smaller",
        },
        {
          id: 21,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <i>This is italic text.</i>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) This is italic text.",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) This is italic text.",
        },
        {
          id: 22,
          question: "The <sup> tag is used to define superscript text in HTML. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The <b> tag is used to make text appear in a _______ font weight.",
          correctAnswer: "bold",
        },
        {
          id: 24,
          question: "Which HTML tag is used to define text that should be emphasized or highlighted?",
          options: [
            "A) <strong>",
            "B) <highlight>",
            "C) <em>",
            "D) <important>",
          ],
          correctAnswer: "C) <em>",
        },
        {
          id: 25,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <kbd>Press Enter</kbd>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) Press Enter",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) Press Enter",
        },
        {
          id: 26,
          question: "The <sub> tag is used to define superscript text in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 27,
          question: "The <strong> tag is used to make text appear in a _______ font weight.",
          correctAnswer: "strong",
        },
        {
          id: 28,
          question: "Which HTML tag is used to define text that should be strongly emphasized or important?",
          options: [
            "A) <highlight>",
            "B) <strong>",
            "C) <em>",
            "D) <important>",
          ],
          correctAnswer: "B) <strong>",
        },
        {
          id: 29,
          question: "The <kbd> tag is used to define text that represents user input such as keyboard keys or key combinations. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 30,
          question: "HTML special character entities are used to represent _______ characters.",
          correctAnswer: "special",
        },
      ],

      "2.4": [
        {
          id: 1,
          question: "Which HTML tag represents the body of an HTML document?",
          options: [
            "A) <head>",
            "B) <body>",
            "C) <html>",
            "D) <title>",
          ],
          correctAnswer: "B) <body>",
        },
        {
          id: 2,
          question: "The <body> tag is used to define the title of a web page. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "The <ul> tag is used to create a _______ list in HTML.",
          correctAnswer: "unordered",
        },
        {
          id: 4,
          question: "Which HTML tag is used to create a numbered list?",
          options: [
            "A) <nl>",
            "B) <li>",
            "C) <ol>",
            "D) <ul>",
          ],
          correctAnswer: "C) <ol>",
        },
        {
          id: 5,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <ol>\n    <li>Item 1</li>\n    <li>Item 2</li>\n    <li>Item 3</li>\n  </ol>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) Item 1, Item 2, Item 3",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) Item 1, Item 2, Item 3",
        },
        {
          id: 6,
          question: "The <ol> tag is used to create an unordered list in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 7,
          question: "The <li> tag is used to define list _______ in HTML.",
          correctAnswer: "items",
        },
        {
          id: 8,
          question: "Which HTML tag is used to create a nested list?",
          options: [
            "A) <nl>",
            "B) <li>",
            "C) <ol>",
            "D) <ul>",
          ],
          correctAnswer: "D) <ul>",
        },
        {
          id: 9,
          question: "Nested lists are lists that are not indented within other lists. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 10,
          question: "In an HTML ordered list (<ol>), list items are automatically numbered with _______.",
          correctAnswer: "numbers",
        },
        {
          id: 11,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <ul>\n    <li>Item 1</li>\n    <li>Item 2\n      <ul>\n        <li>Subitem 1</li>\n        <li>Subitem 2</li>\n      </ul>\n    </li>\n    <li>Item 3</li>\n  </ul>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) Item 1, Item 2, Item 3",
            "C) Subitem 1, Subitem 2",
            "D) Nothing",
          ],
          correctAnswer: "B) Item 1, Item 2, Item 3",
        },
        {
          id: 12,
          question: "In an HTML unordered list (<ul>), list items are automatically numbered with bullets. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 13,
          question: "The <dl> tag is used to create a _______ list in HTML.",
          correctAnswer: "definition",
        },
        {
          id: 14,
          question: "Which HTML tag is used to define a term in a definition list?",
          options: [
            "A) <dt>",
            "B) <dd>",
            "C) <term>",
            "D) <definition>",
          ],
          correctAnswer: "A) <dt>",
        },
        {
          id: 15,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <dl>\n    <dt>Term 1</dt>\n    <dd>Definition 1</dd>\n    <dt>Term 2</dt>\n    <dd>Definition 2</dd>\n  </dl>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) Term 1, Definition 1, Term 2, Definition 2",
            "C) Nothing",
            "D) 'HTML5'",
          ],
          correctAnswer: "B) Term 1, Definition 1, Term 2, Definition 2",
        },
        {
          id: 16,
          question: "In a definition list (<dl>), a term is followed by its definition using the <dfn> tag. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 17,
          question: "The <dd> tag is used to define the _______ of a term in a definition list.",
          correctAnswer: "definition",
        },
        {
          id: 18,
          question: "Which HTML tag is used to create a nested list within an ordered or unordered list?",
          options: [
            "A) <nl>",
            "B) <li>",
            "C) <ol>",
            "D) <ul>",
          ],
          correctAnswer: "D) <ul>",
        },
        {
          id: 19,
          question: "Nested lists can only be created within ordered lists (<ol>), not unordered lists (<ul>). (True/False)",
          correctAnswer: "False",
        },
        {
          id: 20,
          question: "The <ul> tag is used to create a _______ list in HTML.",
          correctAnswer: "unordered",
        },
        {
          id: 21,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <ol>\n    <li>Item 1\n      <ul>\n        <li>Subitem 1</li>\n        <li>Subitem 2</li>\n      </ul>\n    </li>\n    <li>Item 2</li>\n  </ol>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) Item 1, Item 2",
            "C) Subitem 1, Subitem 2",
            "D) Nothing",
          ],
          correctAnswer: "B) Item 1, Item 2",
        },
        {
          id: 22,
          question: "In an ordered list (<ol>), list items are automatically numbered sequentially. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The <li> tag is used to define _______ items in HTML lists.",
          correctAnswer: "list",
        },
        {
          id: 24,
          question: "Which HTML tag is used to create a term in a definition list?",
          options: [
            "A) <term>",
            "B) <dt>",
            "C) <definition>",
            "D) <def>",
          ],
          correctAnswer: "B) <dt>",
        },
        {
          id: 25,
          question: "What will be displayed in the web browser when the above HTML code is opened?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <ul>\n    <li>Item 1\n      <ol>\n        <li>Nested Item 1</li>\n        <li>Nested Item 2</li>\n      </ol>\n    </li>\n    <li>Item 2</li>\n  </ul>\n</body>\n</html>",
          options: [
            "A) 'HTML Quiz'",
            "B) Item 1, Item 2",
            "C) Nested Item 1, Nested Item 2",
            "D) Nothing",
          ],
          correctAnswer: "B) Item 1, Item 2",
        },
        {
          id: 26,
          question: "In a definition list (<dl>), a term is followed by its definition using the <dd> tag. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "The <dfn> tag is used to define the _______ of a term in a definition list.",
          correctAnswer: "definition",
        },
        {
          id: 28,
          question: "Which HTML tag is used to create a definition in a definition list?",
          options: [
            "A) <define>",
            "B) <def>",
            "C) <description>",
            "D) <dd>",
          ],
          correctAnswer: "D) <dd>",
        },
        {
          id: 29,
          question: "The <ul> tag is used to create a numbered list in HTML. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 30,
          question: "The <ol> tag is used to create a _______ list in HTML.",
          correctAnswer: "numbered",
        },
      ],

    },

    //CHP 2 ENDED


    3: {
      // Chapter 1
      "3.1": [
        {
          id: 1,
          question: "What does URL stand for?",
          options: [
            "A) Uniform Resource Locator",
            "B) Universal Resource Link",
            "C) Unified Resource Location",
            "D) Unique Resource Listing",
          ],
          correctAnswer: "A) Uniform Resource Locator",
        },
        {
          id: 2,
          question: "A URL is used to identify the location of a web resource on the internet. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "A complete web address, including the protocol, domain name, and path, is known as a _______.",
          correctAnswer: "Absolute URL",
        },
        {
          id: 4,
          question: "Which of the following is not a valid protocol in a URL?",
          options: [
            "A) http",
            "B) www",
            "C) https",
            "D) ftp",
          ],
          correctAnswer: "B) www",
        },
        {
          id: 5,
          question: "What happens when the 'Visit Example' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com'>Visit Example</a>\n</body>\n</html>",
          options: [
            "A) It opens a new tab with 'https://www.example.com.'",
            "B) It downloads a file from 'https://www.example.com.'",
            "C) It displays 'https://www.example.com' as plain text.",
            "D) Nothing happens.",
          ],
          correctAnswer: "A) It opens a new tab with 'https://www.example.com.'",
        },
        {
          id: 6,
          question: "An absolute URL specifies the complete path to a web resource, including the protocol (e.g., http or https). (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "In an absolute URL, the _______ specifies the location of the web resource.",
          correctAnswer: "domain name",
        },
        {
          id: 8,
          question: "Which attribute in the anchor tag is used to specify the URL to which the link points?",
          options: [
            "A) href",
            "B) src",
            "C) link",
            "D) url",
          ],
          correctAnswer: "A) href",
        },
        {
          id: 9,
          question: "The target attribute in the anchor tag is used to specify the name of the link's target window or frame. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 10,
          question: "The download attribute in the anchor tag is used to suggest a _______ name for the downloaded file.",
          correctAnswer: "filename",
        },
        {
          id: 11,
          question: "What happens when the 'Visit Example' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com' target='_blank'>Visit Example</a>\n</body>\n</html>",
          options: [
            "A) It opens 'https://www.example.com' in the same tab.",
            "B) It opens 'https://www.example.com' in a new tab.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "B) It opens 'https://www.example.com' in a new tab.",
        },
        {
          id: 12,
          question: "The title attribute in the anchor tag is used to specify the text that appears when the mouse hovers over the link. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 13,
          question: "A _______ URL specifies the path to a web resource relative to the current page's location.",
          correctAnswer: "Relative URL",
        },
        {
          id: 14,
          question: "Which attribute in the anchor tag is used to specify the text that is displayed as the link?",
          options: [
            "A) link",
            "B) text",
            "C) display",
            "D) title",
          ],
          correctAnswer: "D) title",
        },
        {
          id: 15,
          question: "What happens when the 'Go to Relative Page' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='relative-page.html'>Go to Relative Page</a>\n</body>\n</html>",
          options: [
            "A) It opens 'relative-page.html' in a new tab.",
            "B) It opens 'relative-page.html' in the same tab.",
            "C) It displays 'relative-page.html' as plain text.",
            "D) Nothing happens.",
          ],
          correctAnswer: "B) It opens 'relative-page.html' in the same tab.",
        },
        {
          id: 16,
          question: "A relative URL specifies the complete path to a web resource, including the domain name and protocol. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 17,
          question: "In a relative URL, the path to the web resource is specified _______ to the current page's location.",
          correctAnswer: "relative",
        },
        {
          id: 18,
          question: "Which attribute in the anchor tag is used to open the linked document in a new browser window or tab?",
          options: [
            "A) href",
            "B) src",
            "C) target",
            "D) rel",
          ],
          correctAnswer: "C) target",
        },
        {
          id: 19,
          question: "The download attribute in the anchor tag is used to force the browser to download the linked file instead of navigating to it. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 20,
          question: "The title attribute in the anchor tag is used to provide _______ information about the linked resource.",
          correctAnswer: "additional",
        },
        {
          id: 21,
          question: "What happens when the 'Download Example PDF' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com' download='example.pdf'>Download Example PDF</a>\n</body>\n</html>",
          options: [
            "A) It opens 'https://www.example.com' in a new tab.",
            "B) It opens 'https://www.example.com' in the same tab.",
            "C) It downloads a file named 'example.pdf' from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "C) It downloads a file named 'example.pdf' from 'https://www.example.com.'",
        },
        {
          id: 22,
          question: "The download attribute is used to specify the name of the linked file, but it doesn't affect the actual file download. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 23,
          question: "In an anchor tag, the _______ attribute is used to specify the URL to which the link points.",
          correctAnswer: "href",
        },
        {
          id: 24,
          question: "Which attribute in the anchor tag is used to specify the relationship between the current document and the linked document?",
          options: [
            "A) href",
            "B) src",
            "C) target",
            "D) rel",
          ],
          correctAnswer: "D) rel",
        },
        {
          id: 25,
          question: "What does the rel='nofollow' attribute do in the 'Visit Example' link?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com' rel='nofollow'>Visit Example</a>\n</body>\n</html>",
          options: [
            "A) It opens 'https://www.example.com' in a new tab.",
            "B) It prevents search engines from following the link.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "B) It prevents search engines from following the link.",
        },
        {
          id: 26,
          question: "The rel attribute is used to specify the text that is displayed as the link. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 27,
          question: "In a relative URL, the path to the web resource is specified _______ to the current page's location.",
          correctAnswer: "relative",
        },
        {
          id: 28,
          question: "Which attribute in the anchor tag is used to specify the text that is displayed as the link?",
          options: [
            "A) link",
            "B) text",
            "C) display",
            "D) title",
          ],
          correctAnswer: "D) title",
        },
        {
          id: 29,
          question: "The target attribute in the anchor tag is used to specify the name of the linked file. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 30,
          question: "The download attribute in the anchor tag is used to suggest a _______ name for the downloaded file.",
          correctAnswer: "filename",
        },
      ],


      "3.2": [
        {
          id: 1,
          question: "Which HTML tag is used to create a hyperlink?",
          options: [
            "A) <link>",
            "B) <a>",
            "C) <url>",
            "D) <href>",
          ],
          correctAnswer: "B) <a>",
        },
        {
          id: 2,
          question: "Hyperlinks are used to navigate between web pages or different sections within a web page. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "A hyperlink typically consists of two parts: the _______ and the destination URL.",
          correctAnswer: "anchor text",
        },
        {
          id: 4,
          question: "What does the <a> tag stand for in HTML?",
          options: [
            "A) Anchor",
            "B) Access",
            "C) Attachment",
            "D) Absolute",
          ],
          correctAnswer: "A) Anchor",
        },
        {
          id: 5,
          question: "What happens when the 'Visit Example' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com'>Visit Example</a>\n</body>\n</html>",
          options: [
            "A) It opens a new tab with 'https://www.example.com.'",
            "B) It opens 'https://www.example.com' in the same tab.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "A) It opens a new tab with 'https://www.example.com.'",
        },
        {
          id: 6,
          question: "The href attribute in the anchor tag is used to specify the text that is displayed as the link. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 7,
          question: "In a relative URL, the path to the web resource is specified _______ to the current page's location.",
          correctAnswer: "relative",
        },
        {
          id: 8,
          question: "Which attribute in the anchor tag is used to specify the relationship between the current document and the linked document?",
          options: [
            "A) href",
            "B) src",
            "C) target",
            "D) rel",
          ],
          correctAnswer: "D) rel",
        },
        {
          id: 9,
          question: "The target attribute in the anchor tag is used to specify the name of the linked file. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 10,
          question: "The download attribute in the anchor tag is used to suggest a _______ name for the downloaded file.",
          correctAnswer: "filename",
        },
        {
          id: 11,
          question: "What happens when the 'Go to Section 1' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='#section1'>Go to Section 1</a>\n  <h2 id='section1'>Section 1</h2>\n</body>\n</html>",
          options: [
            "A) It opens a new tab with 'https://www.example.com.'",
            "B) It scrolls the page to Section 1.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "B) It scrolls the page to Section 1.",
        },
        {
          id: 12,
          question: "The id attribute is used to uniquely identify an HTML element, such as a section. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 13,
          question: "A complete web address, including the protocol, domain name, and path, is known as a _______ URL.",
          correctAnswer: "Absolute URL",
        },
        {
          id: 14,
          question: "Which of the following is not a valid protocol in a URL?",
          options: [
            "A) http",
            "B) www",
            "C) https",
            "D) ftp",
          ],
          correctAnswer: "B) www",
        },
        {
          id: 15,
          question: "What happens when the 'Go to Relative Page' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='relative-page.html'>Go to Relative Page</a>\n</body>\n</html>",
          options: [
            "A) It opens 'relative-page.html' in a new tab.",
            "B) It opens 'relative-page.html' in the same tab.",
            "C) It displays 'relative-page.html' as plain text.",
            "D) Nothing happens.",
          ],
          correctAnswer: "B) It opens 'relative-page.html' in the same tab.",
        },
        {
          id: 16,
          question: "An absolute URL specifies the complete path to a web resource, including the protocol (e.g., http or https). (True/False)",
          correctAnswer: "True",
        },
        {
          id: 17,
          question: "In an absolute URL, the _______ specifies the location of the web resource.",
          correctAnswer: "domain name",
        },
        {
          id: 18,
          question: "Which attribute in the anchor tag is used to specify the text that is displayed as the link?",
          options: [
            "A) link",
            "B) text",
            "C) display",
            "D) title",
          ],
          correctAnswer: "D) title",
        },
        {
          id: 19,
          question: "The target attribute in the anchor tag is used to specify the name of the linked file, but it doesn't affect the actual file download. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 20,
          question: "In an anchor tag, the _______ attribute is used to specify the URL to which the link points.",
          correctAnswer: "href",
        },
        {
          id: 21,
          question: "What does the <a> tag stand for in HTML?",
          options: [
            "A) Anchor",
            "B) Access",
            "C) Attachment",
            "D) Absolute",
          ],
          correctAnswer: "A) Anchor",
        },
        {
          id: 22,
          question: "What happens when the 'Download Example PDF' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com' download='example.pdf'>Download Example PDF</a>\n</body>\n</html>",
          options: [
            "A) It opens 'https://www.example.com' in a new tab.",
            "B) It opens 'https://www.example.com' in the same tab.",
            "C) It downloads a file named 'example.pdf' from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "C) It downloads a file named 'example.pdf' from 'https://www.example.com.'",
        },
        {
          id: 23,
          question: "The rel attribute in the anchor tag is used to specify the text that is displayed as the link. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 24,
          question: "In a relative URL, the path to the web resource is specified _______ to the current page's location.",
          correctAnswer: "relative",
        },
        {
          id: 25,
          question: "Which attribute in the anchor tag is used to specify the relationship between the current document and the linked document?",
          options: [
            "A) href",
            "B) src",
            "C) target",
            "D) rel",
          ],
          correctAnswer: "D) rel",
        },
        {
          id: 26,
          question: "The target attribute in the anchor tag is used to specify the name of the linked file. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 27,
          question: "The download attribute in the anchor tag is used to suggest a _______ name for the downloaded file.",
          correctAnswer: "filename",
        },
        {
          id: 28,
          question: "What happens when the 'Go to Section 1' link is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='#section1'>Go to Section 1</a>\n  <h2 id='section1'>Section 1</h2>\n</body>\n</html>",
          options: [
            "A) It opens a new tab with 'https://www.example.com.'",
            "B) It scrolls the page to Section 1.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "B) It scrolls the page to Section 1.",
        },
        {
          id: 29,
          question: "The id attribute is used to uniquely identify an HTML element, such as a section. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 30,
          question: "A complete web address, including the protocol, domain name, and path, is known as a _______ URL.",
          correctAnswer: "Absolute URL",
        },
      ],

      "3.3": [
        {
          id: 1,
          question: "Which HTML tag is used to display an image?",
          options: [
            "A) <img>",
            "B) <image>",
            "C) <picture>",
            "D) <media>",
          ],
          correctAnswer: "A) <img>",
        },
        {
          id: 2,
          question: "The src attribute in the <img> tag is used to specify the image's source URL. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "The alt attribute in the <img> tag is used to provide _______ for the image.",
          options: [
            "A) description",
            "B) caption",
            "C) alternative text",
            "D) title",
          ],
          correctAnswer: "C) alternative text",
        },
        {
          id: 4,
          question: "What is the purpose of the alt attribute in the <img> tag?",
          options: [
            "A) It defines the width of the image.",
            "B) It specifies the image's source URL.",
            "C) It provides alternative text for the image.",
            "D) It sets the image as a hyperlink.",
          ],
          correctAnswer: "C) It provides alternative text for the image.",
        },
        {
          id: 5,
          question: "What is the purpose of the alt attribute in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <img src='cat.jpg' alt='A cute cat'>\n</body>\n</html>",
          options: [
            "A) It sets the image source to 'cat.jpg.'",
            "B) It provides alternative text for the image.",
            "C) It displays the image as 'A cute cat.'",
            "D) It creates a hyperlink to 'A cute cat.'",
          ],
          correctAnswer: "B) It provides alternative text for the image.",
        },
        {
          id: 6,
          question: "The height and width attributes in the <img> tag are used to specify the physical dimensions (in inches) of the image. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 7,
          question: "The height and width attributes in the <img> tag are used to specify the _______ dimensions of the image.",
          options: [
            "A) physical",
            "B) pixel",
            "C) relative",
            "D) percentage",
          ],
          correctAnswer: "B) pixel",
        },
        {
          id: 8,
          question: "Which of the following attributes in the <img> tag is used to set the height of the image in pixels?",
          options: [
            "A) size",
            "B) height",
            "C) width",
            "D) dimensions",
          ],
          correctAnswer: "B) height",
        },
        {
          id: 9,
          question: "If the alt attribute is omitted in the <img> tag, the image will not be displayed. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 10,
          question: "The src attribute in the <img> tag is used to specify the _______ of the image.",
          options: [
            "A) location",
            "B) source URL",
            "C) description",
            "D) title",
          ],
          correctAnswer: "B) source URL",
        },
        {
          id: 11,
          question: "What happens when the image in the above HTML code is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com'>\n    <img src='example.png' alt='Example Image'>\n  </a>\n</body>\n</html>",
          options: [
            "A) It opens 'https://www.example.com' in a new tab.",
            "B) It displays 'https://www.example.com' as plain text.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "A) It opens 'https://www.example.com' in a new tab.",
        },
        {
          id: 12,
          question: "An image can be used as a link by placing it inside an anchor <a> tag. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 13,
          question: "The <map> tag is used to define an _______ map for an image.",
          options: [
            "A) image",
            "B) area",
            "C) navigation",
            "D) attribute",
          ],
          correctAnswer: "A) image",
        },
        {
          id: 14,
          question: "What is the purpose of an image map?",
          options: [
            "A) To display images in a gallery.",
            "B) To create clickable regions within an image.",
            "C) To resize images dynamically.",
            "D) To rotate images on hover.",
          ],
          correctAnswer: "B) To create clickable regions within an image.",
        },
        {
          id: 15,
          question: "What happens when the 'New York' area of the image map is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <img src='usa-map.png' alt='USA Map' usemap='#usamap'>\n  <map name='usamap'>\n    <area shape='circle' coords='50,50,30' href='newyork.html' alt='New York'>\n    <area shape='circle' coords='150,150,30' href='losangeles.html' alt='Los Angeles'>\n  </map>\n</body>\n</html>",
          options: [
            "A) It opens 'newyork.html' in a new tab.",
            "B) It displays 'newyork.html' as plain text.",
            "C) It downloads a file from 'newyork.html.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "A) It opens 'newyork.html' in a new tab.",
        },
        {
          id: 16,
          question: "The usemap attribute in the <img> tag is used to specify the image map to be used with the image. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 17,
          question: "The coords attribute in the <area> tag of an image map is used to define the _______ of the clickable area.",
          options: [
            "A) size",
            "B) shape",
            "C) coordinates",
            "D) source URL",
          ],
          correctAnswer: "C) coordinates",
        },
        {
          id: 18,
          question: "Which attribute in the <area> tag of an image map is used to specify the shape of the clickable area?",
          options: [
            "A) shape",
            "B) coords",
            "C) href",
            "D) alt",
          ],
          correctAnswer: "A) shape",
        },
        {
          id: 19,
          question: "The alt attribute in the <area> tag of an image map is used to specify the alternative text for the clickable area. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 20,
          question: "The <map> tag is used to define clickable areas within an _______ image.",
          options: [
            "A) interactive",
            "B) animated",
            "C) raster",
            "D) vector",
          ],
          correctAnswer: "C) raster",
        },
        {
          id: 21,
          question: "What happens when the 'Europe' area of the image map is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <img src='world-map.png' alt='World Map' usemap='#worldmap'>\n  <map name='worldmap'>\n    <area shape='rect' coords='0,0,100,100' href='europe.html' alt='Europe'>\n    <area shape='rect' coords='100,100,200,200' href='asia.html' alt='Asia'>\n  </map>\n</body>\n</html>",
          options: [
            "A) It opens 'europe.html' in a new tab.",
            "B) It displays 'europe.html' as plain text.",
            "C) It downloads a file from 'europe.html.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "A) It opens 'europe.html' in a new tab.",
        },
        {
          id: 22,
          question: "The usemap attribute in the <img> tag is used to specify the image source URL. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 23,
          question: "The coords attribute in the <area> tag of an image map is used to define the _______ of the clickable area.",
          options: [
            "A) size",
            "B) shape",
            "C) coordinates",
            "D) source URL",
          ],
          correctAnswer: "C) coordinates",
        },
        {
          id: 24,
          question: "Which attribute in the <area> tag of an image map is used to specify the shape of the clickable area?",
          options: [
            "A) shape",
            "B) coords",
            "C) href",
            "D) alt",
          ],
          correctAnswer: "A) shape",
        },
        {
          id: 25,
          question: "The alt attribute in the <area> tag of an image map is used to specify the alternative text for the clickable area. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 26,
          question: "The <map> tag is used to define clickable areas within an _______ image.",
          options: [
            "A) interactive",
            "B) animated",
            "C) raster",
            "D) vector",
          ],
          correctAnswer: "C) raster",
        },
        {
          id: 27,
          question: "What happens when the image in the above HTML code is clicked in the web browser?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <a href='https://www.example.com'>\n    <img src='example.png' alt='Example Image' usemap='#examplemap'>\n  </a>\n  <map name='examplemap'>\n    <area shape='rect' coords='0,0,100,100' href='example.html' alt='Example Link'>\n  </map>\n</body>\n</html>",
          options: [
            "A) It opens 'https://www.example.com' in a new tab.",
            "B) It displays 'https://www.example.com' as plain text.",
            "C) It downloads a file from 'https://www.example.com.'",
            "D) Nothing happens.",
          ],
          correctAnswer: "A) It opens 'https://www.example.com' in a new tab.",
        },
        {
          id: 28,
          question: "The usemap attribute in the <img> tag is used to specify the image map to be used with the image. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 29,
          question: "The coords attribute in the <area> tag of an image map is used to define the _______ of the clickable area.",
          options: [
            "A) size",
            "B) shape",
            "C) coordinates",
            "D) source URL",
          ],
          correctAnswer: "C) coordinates",
        },
        {
          id: 30,
          question: "Which attribute in the <area> tag of an image map is used to specify the relationship between the current document and the linked document?",
          options: [
            "A) shape",
            "B) coords",
            "C) href",
            "D) rel",
          ],
          correctAnswer: "D) rel",
        },
      ],


    },

    //CHP 3 ENDED



    4: {
      // Chapter 1
      "4.1": [
        {
          id: 1,
          question: "Which HTML tag is used to create a table?",
          options: [
            "A) <table>",
            "B) <tab>",
            "C) <tr>",
            "D) <t>",
          ],
          correctAnswer: "A) <table>",
        },
        {
          id: 2,
          question: "In HTML tables, <tr> elements are used to define rows. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "The <th> tag is used to define _______ in an HTML table.",
          correctAnswer: "table headers",
        },
        {
          id: 4,
          question: "What is the purpose of the <caption> tag in an HTML table?",
          options: [
            "A) It defines the title of the web page.",
            "B) It specifies the width of the table.",
            "C) It provides a caption or title for the table.",
            "D) It defines the footer of the table.",
          ],
          correctAnswer: "C) It provides a caption or title for the table.",
        },
        {
          id: 5,
          question: "What does the <caption> tag in the above HTML code display?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <caption>Sample Table</caption>\n    <tr>\n      <th>Header 1</th>\n      <th>Header 2</th>\n    </tr>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 'Sample Table'",
            "B) 'Header 1'",
            "C) 'Header 2'",
            "D) 'Data 1'",
          ],
          correctAnswer: "A) 'Sample Table'",
        },
        {
          id: 6,
          question: "In an HTML table, each row is defined using the <tr> tag. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <th> tag is used to define table _______.",
          correctAnswer: "headers",
        },
        {
          id: 8,
          question: "Which HTML tag is used to define data cells in a table?",
          options: [
            "A) <table>",
            "B) <th>",
            "C) <tr>",
            "D) <td>",
          ],
          correctAnswer: "D) <td>",
        },
        {
          id: 9,
          question: "The <caption> tag is used to specify the data within a table cell. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 10,
          question: "In an HTML table, the content of individual cells is defined using the _______ tag.",
          correctAnswer: "<td>",
        },
        {
          id: 11,
          question: "What is displayed as the first column header in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <th>Header 1</th>\n      <th>Header 2</th>\n    </tr>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 'Header 1'",
            "B) 'Header 2'",
            "C) 'Data 1'",
            "D) 'Data 2'",
          ],
          correctAnswer: "A) 'Header 1'",
        },
        {
          id: 12,
          question: "The <th> tag is used to define data cells in an HTML table. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 13,
          question: "In an HTML table, the <tr> tag is used to define _______.",
          correctAnswer: "rows",
        },
        {
          id: 14,
          question: "What is the purpose of the <caption> tag in an HTML table?",
          options: [
            "A) It defines the title of the web page.",
            "B) It specifies the width of the table.",
            "C) It provides a caption or title for the table.",
            "D) It defines the footer of the table.",
          ],
          correctAnswer: "C) It provides a caption or title for the table.",
        },
        {
          id: 15,
          question: "What does the <caption> tag in the above HTML code display?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <caption>Sample Table</caption>\n    <tr>\n      <th>Header 1</th>\n      <th>Header 2</th>\n    </tr>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 'Sample Table'",
            "B) 'Header 1'",
            "C) 'Header 2'",
            "D) 'Data 1'",
          ],
          correctAnswer: "A) 'Sample Table'",
        },
        {
          id: 16,
          question: "In an HTML table, each row is defined using the <tr> tag. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 17,
          question: "The <th> tag is used to define table _______.",
          correctAnswer: "headers",
        },
        {
          id: 18,
          question: "Which HTML tag is used to define data cells in a table?",
          options: [
            "A) <table>",
            "B) <th>",
            "C) <tr>",
            "D) <td>",
          ],
          correctAnswer: "D) <td>",
        },
        {
          id: 19,
          question: "The <caption> tag is used to specify the data within a table cell. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 20,
          question: "In an HTML table, the content of individual cells is defined using the _______ tag.",
          correctAnswer: "<td>",
        },
        {
          id: 21,
          question: "What is displayed as the first column header in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <th>Header 1</th>\n      <th>Header 2</th>\n    </tr>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 'Header 1'",
            "B) 'Header 2'",
            "C) 'Data 1'",
            "D) 'Data 2'",
          ],
          correctAnswer: "A) 'Header 1'",
        },
        {
          id: 22,
          question: "The <th> tag is used to define data cells in an HTML table. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 23,
          question: "In an HTML table, the <tr> tag is used to define _______.",
          correctAnswer: "rows",
        },
        {
          id: 24,
          question: "What is the purpose of the <caption> tag in an HTML table?",
          options: [
            "A) It defines the title of the web page.",
            "B) It specifies the width of the table.",
            "C) It provides a caption or title for the table.",
            "D) It defines the footer of the table.",
          ],
          correctAnswer: "C) It provides a caption or title for the table.",
        },
        {
          id: 25,
          question: "What does the <caption> tag in the above HTML code display?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <caption>Sample Table</caption>\n    <tr>\n      <th>Header 1</th>\n      <th>Header 2</th>\n    </tr>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 'Sample Table'",
            "B) 'Header 1'",
            "C) 'Header 2'",
            "D) 'Data 1'",
          ],
          correctAnswer: "A) 'Sample Table'",
        },
        {
          id: 26,
          question: "In an HTML table, each row is defined using the <tr> tag. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "The <th> tag is used to define table _______.",
          correctAnswer: "headers",
        },
        {
          id: 28,
          question: "Which HTML tag is used to define data cells in a table?",
          options: [
            "A) <table>",
            "B) <th>",
            "C) <tr>",
            "D) <td>",
          ],
          correctAnswer: "D) <td>",
        },
        {
          id: 29,
          question: "The <caption> tag is used to specify the data within a table cell. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 30,
          question: "In an HTML table, the content of individual cells is defined using the _______ tag.",
          correctAnswer: "<td>",
        },
      ],


      "4.2": [
        {
          id: 1,
          question: "Which HTML attribute is used to merge two or more table cells horizontally?",
          options: [
            "A) colspan",
            "B) rowspan",
            "C) merge",
            "D) cellmerge",
          ],
          correctAnswer: "A) colspan",
        },
        {
          id: 2,
          question: "The rowspan attribute is used to merge table cells horizontally. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "The colspan attribute is used to specify the number of _______ a cell should span.",
          correctAnswer: "columns",
        },
        {
          id: 4,
          question: "What is the purpose of the colspan attribute in an HTML table cell?",
          options: [
            "A) It defines the width of the cell.",
            "B) It specifies the number of rows a cell should span.",
            "C) It specifies the number of columns a cell should span.",
            "D) It defines the content of the cell.",
          ],
          correctAnswer: "C) It specifies the number of columns a cell should span.",
        },
        {
          id: 5,
          question: "How many columns does the 'Merged Cell' span in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <td>Cell 1</td>\n      <td>Cell 2</td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">Merged Cell</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "B) 2",
        },
        {
          id: 6,
          question: "The rowspan attribute is used to merge table cells vertically. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The rowspan attribute is used to specify the number of _______ a cell should span.",
          correctAnswer: "rows",
        },
        {
          id: 8,
          question: "What is the purpose of the rowspan attribute in an HTML table cell?",
          options: [
            "A) It defines the width of the cell.",
            "B) It specifies the number of rows a cell should span.",
            "C) It specifies the number of columns a cell should span.",
            "D) It defines the content of the cell.",
          ],
          correctAnswer: "B) It specifies the number of rows a cell should span.",
        },
        {
          id: 9,
          question: "How many rows does the 'Merged Cell' span in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <td>Cell 1</td>\n      <td rowspan=\"2\">Merged Cell</td>\n    </tr>\n    <tr>\n      <td>Cell 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "B) 2",
        },
        {
          id: 10,
          question: "Both colspan and rowspan attributes can be applied to the same table cell simultaneously. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 11,
          question: "The colspan attribute is used to specify the number of _______ a cell should span.",
          correctAnswer: "columns",
        },
        {
          id: 12,
          question: "What is the purpose of the colspan attribute in an HTML table cell?",
          options: [
            "A) It defines the width of the cell.",
            "B) It specifies the number of rows a cell should span.",
            "C) It specifies the number of columns a cell should span.",
            "D) It defines the content of the cell.",
          ],
          correctAnswer: "C) It specifies the number of columns a cell should span.",
        },
        {
          id: 13,
          question: "How many columns does the 'Merged Cell' span in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <td colspan=\"2\" rowspan=\"2\">Merged Cell</td>\n      <td>Cell 1</td>\n    </tr>\n    <tr>\n      <td>Cell 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "B) 2",
        },
        {
          id: 14,
          question: "The rowspan attribute is used to merge table cells horizontally. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 15,
          question: "The rowspan attribute is used to specify the number of _______ a cell should span.",
          correctAnswer: "rows",
        },
        {
          id: 16,
          question: "What is the purpose of the rowspan attribute in an HTML table cell?",
          options: [
            "A) It defines the width of the cell.",
            "B) It specifies the number of rows a cell should span.",
            "C) It specifies the number of columns a cell should span.",
            "D) It defines the content of the cell.",
          ],
          correctAnswer: "B) It specifies the number of rows a cell should span.",
        },
        {
          id: 17,
          question: "How many rows does the 'Merged Cell' span in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <td>Cell 1</td>\n      <td rowspan=\"2\">Merged Cell</td>\n    </tr>\n    <tr>\n      <td>Cell 2</td>\n    </tr>\n  </table>\n</body>\n</html>",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "B) 2",
        },
        {
          id: 18,
          question: "Both colspan and rowspan attributes can be applied to the same table cell simultaneously. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 19,
          question: "The colspan attribute is used to specify the number of _______ a cell should span.",
          correctAnswer: "columns",
        },
        {
          id: 20,
          question: "What is the purpose of the colspan attribute in an HTML table cell?",
          options: [
            "A) It defines the width of the cell.",
            "B) It specifies the number of rows a cell should span.",
            "C) It specifies the number of columns a cell should span.",
            "D) It defines the content of the cell.",
          ],
          correctAnswer: "C) It specifies the number of columns a cell should span.",
        },
      ],

      "4.3": [
        {
          id: 1,
          question: "Which HTML tag is used to create a form?",
          options: [
            "A) <input>",
            "B) <form>",
            "C) <button>",
            "D) <select>",
          ],
          correctAnswer: "B) <form>",
        },
        {
          id: 2,
          question: "The action attribute in the <form> tag specifies the URL where the form data will be submitted. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "The <form> tag is used to create _______ in HTML.",
          correctAnswer: "forms",
        },
        {
          id: 4,
          question: "What is the purpose of the action attribute in the <form> tag?",
          options: [
            "A) It defines the form's name.",
            "B) It specifies the form's method.",
            "C) It specifies the URL where the form data will be submitted.",
            "D) It defines the form's action on submission.",
          ],
          correctAnswer: "C) It specifies the URL where the form data will be submitted.",
        },
        {
          id: 5,
          question: "Where will the form data be submitted when the 'Submit' button is clicked in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form action=\"submit.php\" method=\"POST\">\n    <!-- Form fields go here -->\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) submit.html",
            "B) submit.php",
            "C) The current web page (index.html)",
            "D) It will not be submitted anywhere.",
          ],
          correctAnswer: "B) submit.php",
        },
        {
          id: 6,
          question: "The method attribute in the <form> tag specifies how the form data should be submitted, either using GET or POST. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <form> tag is used to create _______ in HTML.",
          correctAnswer: "forms",
        },
        {
          id: 8,
          question: "What is the purpose of the action attribute in the <form> tag?",
          options: [
            "A) It defines the form's name.",
            "B) It specifies the form's method.",
            "C) It specifies the URL where the form data will be submitted.",
            "D) It defines the form's action on submission.",
          ],
          correctAnswer: "C) It specifies the URL where the form data will be submitted.",
        },
        {
          id: 9,
          question: "Where will the form data be submitted when the 'Submit' button is clicked in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form action=\"submit.php\" method=\"POST\">\n    <!-- Form fields go here -->\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) submit.html",
            "B) submit.php",
            "C) The current web page (index.html)",
            "D) It will not be submitted anywhere.",
          ],
          correctAnswer: "B) submit.php",
        },
        {
          id: 10,
          question: "The method attribute in the <form> tag specifies how the form data should be submitted, either using GET or POST. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 11,
          question: "The method attribute in the <form> tag specifies whether the form data should be submitted using _______ or _______.",
          correctAnswer: "GET, POST",
        },
        {
          id: 12,
          question: "Which of the following HTTP methods appends form data to the URL and is visible in the address bar?",
          options: [
            "A) GET",
            "B) POST",
            "C) PUT",
            "D) DELETE",
          ],
          correctAnswer: "A) GET",
        },
        {
          id: 13,
          question: "The method attribute in the <form> tag is required, and if not specified, the form will not work. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 14,
          question: "The method attribute in the <form> tag specifies whether the form data should be submitted using _______ or _______.",
          correctAnswer: "GET, POST",
        },
        {
          id: 15,
          question: "Which of the following HTTP methods appends form data to the URL and is visible in the address bar?",
          options: [
            "A) GET",
            "B) POST",
            "C) PUT",
            "D) DELETE",
          ],
          correctAnswer: "A) GET",
        },
        {
          id: 16,
          question: "The method attribute in the <form> tag is required, and if not specified, the form will not work. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 17,
          question: "The <form> tag is used to create _______ in HTML.",
          correctAnswer: "forms",
        },
        {
          id: 18,
          question: "What is the purpose of the action attribute in the <form> tag?",
          options: [
            "A) It defines the form's name.",
            "B) It specifies the form's method.",
            "C) It specifies the URL where the form data will be submitted.",
            "D) It defines the form's action on submission.",
          ],
          correctAnswer: "C) It specifies the URL where the form data will be submitted.",
        },
        {
          id: 19,
          question: "Where will the form data be submitted when the 'Submit' button is clicked in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form action=\"submit.php\" method=\"POST\">\n    <!-- Form fields go here -->\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) submit.html",
            "B) submit.php",
            "C) The current web page (index.html)",
            "D) It will not be submitted anywhere.",
          ],
          correctAnswer: "B) submit.php",
        },
        {
          id: 20,
          question: "The method attribute in the <form> tag specifies how the form data should be submitted, either using GET or POST. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 21,
          question: "The method attribute in the <form> tag specifies whether the form data should be submitted using _______ or _______.",
          correctAnswer: "GET, POST",
        },
        {
          id: 22,
          question: "Which of the following HTTP methods appends form data to the URL and is visible in the address bar?",
          options: [
            "A) GET",
            "B) POST",
            "C) PUT",
            "D) DELETE",
          ],
          correctAnswer: "A) GET",
        },
        {
          id: 23,
          question: "The method attribute in the <form> tag is required, and if not specified, the form will not work. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 24,
          question: "The method attribute in the <form> tag specifies whether the form data should be submitted using _______ or _______.",
          correctAnswer: "GET, POST",
        },
        {
          id: 25,
          question: "Which of the following HTTP methods appends form data to the URL and is visible in the address bar?",
          options: [
            "A) GET",
            "B) POST",
            "C) PUT",
            "D) DELETE",
          ],
          correctAnswer: "A) GET",
        },
        {
          id: 26,
          question: "The method attribute in the <form> tag is required, and if not specified, the form will not work. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 27,
          question: "The <form> tag is used to create _______ in HTML.",
          correctAnswer: "forms",
        },
        {
          id: 28,
          question: "What is the purpose of the action attribute in the <form> tag?",
          options: [
            "A) It defines the form's name.",
            "B) It specifies the form's method.",
            "C) It specifies the URL where the form data will be submitted.",
            "D) It defines the form's action on submission.",
          ],
          correctAnswer: "C) It specifies the URL where the form data will be submitted.",
        },
        {
          id: 29,
          question: "Where will the form data be submitted when the 'Submit' button is clicked in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form action=\"submit.php\" method=\"POST\">\n    <!-- Form fields go here -->\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) submit.html",
            "B) submit.php",
            "C) The current web page (index.html)",
            "D) It will not be submitted anywhere.",
          ],
          correctAnswer: "B) submit.php",
        },
        {
          id: 30,
          question: "The method attribute in the <form> tag specifies how the form data should be submitted, either using GET or POST. (True/False)",
          correctAnswer: "True",
        },
      ],

      "4.4": [
        {
          id: 1,
          question: "Which HTML element is used to create a single-line text input field in a form?",
          options: [
            "A) <input>",
            "B) <textarea>",
            "C) <select>",
            "D) <button>",
          ],
          correctAnswer: "A) <input>",
        },
        {
          id: 2,
          question: "The <textarea> element is used for single-line text input. (True/False)",
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 4,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 5,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 6,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 8,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 9,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 10,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 11,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 12,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 13,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 14,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 15,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 16,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 17,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 18,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 19,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 20,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 21,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 22,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 24,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 25,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 26,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "The <input> element is used to create various types of form controls, including text input fields and _______.",
          correctAnswer: "buttons",
        },
        {
          id: 28,
          question: "Which attribute is used with the <input> element to specify a default value for the input field?",
          options: [
            "A) default",
            "B) value",
            "C) placeholder",
            "D) text",
          ],
          correctAnswer: "B) value",
        },
        {
          id: 29,
          question: "What is the default value displayed in the text input field in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <form>\n    <input type=\"text\" value=\"Hello, World!\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</body>\n</html>",
          options: [
            "A) \"Hello, World!\"",
            "B) An empty field",
            "C) \"Submit\"",
            "D) None of the above",
          ],
          correctAnswer: "A) \"Hello, World!\"",
        },
        {
          id: 30,
          question: "The <textarea> element is used for multiline text input. (True/False)",
          correctAnswer: "True",
        },
      ],

      "4.5": [
        {
          id: 1,
          question: "Which HTML input type is used for entering text?",
          options: ["A) text", "B) checkbox", "C) radio", "D) date",],
          correctAnswer: "A) text",
        },
        {
          id: 2,
          question: "The checkbox input type is used for selecting multiple options from a list. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "The <input> element with type=\"checkbox\" is used for creating _______ fields.",
          options: ["checkboxes", "radio buttons", "text fields", "date fields",],
          correctAnswer: "checkboxes",
        },
        {
          id: 4,
          question: "Which HTML input type is used for selecting a single option from a list?",
          options: ["A) text", "B) checkbox", "C) radio", "D) date",],
          correctAnswer: "C) radio",
        },
        {
          id: 5,
          question: "In the above HTML code, how many radio buttons are there for selecting gender?",
          options: ["A) 1", "B) 2", "C) 3", "D) None",],
          correctAnswer: "C) 3",
        },
        {
          id: 6,
          question: "The date input type is used for entering a date. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <input> element with type=\"date\" is used for creating date _______ fields.",
          options: ["input", "text", "checkbox", "radio",],
          correctAnswer: "input",
        },
        {
          id: 8,
          question: "Which HTML input type is used for entering an email address?",
          options: ["A) text", "B) checkbox", "C) email", "D) search",],
          correctAnswer: "C) email",
        },
        {
          id: 9,
          question: "In the above HTML code, what is the purpose of the placeholder attribute?",
          options: [
            "A) It sets the initial value of the email field.",
            "B) It specifies the email input type.",
            "C) It provides a hint to the user about what to enter.",
            "D) It defines the maximum length of the email.",
          ],
          correctAnswer: "C) It provides a hint to the user about what to enter.",
        },
        {
          id: 10,
          question: "The search input type is used for entering search queries. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 11,
          question: "The <input> element with type=\"search\" is used for creating _______ input fields.",
          options: ["search", "text", "checkbox", "radio",],
          correctAnswer: "search",
        },
        {
          id: 12,
          question: "Which HTML input type is used for entering numeric values?",
          options: ["A) text", "B) checkbox", "C) number", "D) password",],
          correctAnswer: "C) number",
        },
        {
          id: 13,
          question: "In the above HTML code, what is the purpose of the min and max attributes?",
          options: [
            "A) They specify the input type.",
            "B) They define the minimum and maximum values allowed for the input.",
            "C) They set the initial value of the number field.",
            "D) They provide a hint to the user about what to enter.",
          ],
          correctAnswer: "B) They define the minimum and maximum values allowed for the input.",
        },
        {
          id: 14,
          question: "The password input type is used for entering passwords, and the entered text is usually masked. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 15,
          question: "The <input> element with type=\"password\" is used for creating password input _______ fields.",
          options: ["fields", "boxes", "areas", "lines",],
          correctAnswer: "fields",
        },
        {
          id: 16,
          question: "Which HTML input type is used for selecting a value from a range?",
          options: ["A) text", "B) checkbox", "C) number", "D) range",],
          correctAnswer: "D) range",
        },
        {
          id: 17,
          question: "In the above HTML code, what is the purpose of the step attribute?",
          options: [
            "A) It specifies the input type.",
            "B) It defines the minimum and maximum values allowed for the input.",
            "C) It sets the initial value of the range.",
            "D) It determines the increment value when changing the range.",
          ],
          correctAnswer: "D) It determines the increment value when changing the range.",
        },
        {
          id: 18,
          question: "The submit input type is used for submitting a form. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 19,
          question: "The <input> element with type=\"submit\" is used for creating _______ buttons.",
          options: ["submit", "reset", "button", "click",],
          correctAnswer: "submit",
        },
        {
          id: 20,
          question: "Which HTML input type is used for resetting a form to its initial values?",
          options: ["A) text", "B) checkbox", "C) reset", "D) button",],
          correctAnswer: "C) reset",
        },
        {
          id: 21,
          question: "In the above HTML code, what does the \"Reset Form\" button do when clicked?",
          options: [
            "A) Submits the form.",
            "B) Clears the form's contents.",
            "C) Validates the form.",
            "D) Closes the form.",
          ],
          correctAnswer: "B) Clears the form's contents.",
        },
        {
          id: 22,
          question: "The button input type is used for creating clickable buttons that can perform custom actions when clicked. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The <input> element with type=\"button\" is used for creating _______ buttons.",
          options: ["custom", "default", "special", "hidden",],
          correctAnswer: "custom",
        },
        {
          id: 24,
          question: "Which attribute is used to specify the maximum number of characters allowed in a text input field?",
          options: ["A) maxlength", "B) minlength", "C) maxchars", "D) length",],
          correctAnswer: "A) maxlength",
        },
        {
          id: 25,
          question: "In the above HTML code, what is the maximum number of characters allowed in the \"username\" input field?",
          options: ["A) 5", "B) 10", "C) 15", "D) Unlimited",],
          correctAnswer: "B) 10",
        },
        {
          id: 26,
          question: "The min attribute is used to specify the minimum value allowed for a number input field. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "The <input> element with type=\"number\" is used for creating number input fields, and the min attribute specifies the _______ value allowed.",
          options: ["minimum", "maximum", "initial", "exact",],
          correctAnswer: "minimum",
        },
        {
          id: 28,
          question: "Which attribute is used to specify the name of the input field, which is used to identify the field in the form data when submitted?",
          options: ["A) name", "B) id", "C) label", "D) placeholder",],
          correctAnswer: "A) name",
        },
        {
          id: 29,
          question: "In the above HTML code, what is the purpose of the name attribute in the \"fullname\" input field?",
          options: [
            "A) It sets the initial value of the field.",
            "B) It specifies the input type.",
            "C) It provides a hint to the user about what to enter.",
            "D) It identifies the field in the form data when submitted.",
          ],
          correctAnswer: "D) It identifies the field in the form data when submitted.",
        },
        {
          id: 30,
          question: "The required attribute is used to indicate that an input field must be filled out before submitting the form. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
      ],




    },


    //CHP 4 ENDED


    5: {
      // Chapter 1
      "5.1": [
        {
          id: 1,
          question: "What is the purpose of using frames in HTML?",
          options: [
            "A) To style text and images.",
            "B) To create responsive web layouts.",
            "C) To divide a web page into multiple independent sections.",
            "D) To embed videos in a webpage.",
          ],
          correctAnswer: "C) To divide a web page into multiple independent sections.",
        },
        {
          id: 2,
          question: "Frames are no longer supported in modern web development. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 4,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 5,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 6,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 7,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 8,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 9,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 10,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 11,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 12,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 13,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 14,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 15,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 16,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 17,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 18,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 19,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 20,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 21,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 22,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 23,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 24,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 25,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 26,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 27,
          question: "The <iframe> tag is used to embed another _______ into the current web page.",
          options: ["A) webpage", "B) element", "C) script", "D) image",],
          correctAnswer: "A) webpage",
        },
        {
          id: 28,
          question: "Which attribute of the <iframe> tag specifies the source URL of the embedded content?",
          options: ["A) src", "B) height", "C) name", "D) width",],
          correctAnswer: "A) src",
        },
        {
          id: 29,
          question: "What will be displayed inside the <iframe> in the above HTML code?\n\n<!DOCTYPE html>\n<html>\n<head>\n  <title>HTML Quiz</title>\n</head>\n<body>\n  <iframe src=\"https://www.example.com\"></iframe>\n</body>\n</html>",
          options: [
            "A) The content of the current webpage.",
            "B) The content of \"https://www.example.com.\"",
            "C) An empty frame.",
            "D) An error message.",
          ],
          correctAnswer: "B) The content of \"https://www.example.com.\"",
        },
        {
          id: 30,
          question: "The height attribute of the <iframe> tag specifies the width of the frame. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
      ],
    },


    //CHP 5 ENDED

    6: {
      // Chapter 1

      "6.1": [
        {
          id: 1,
          question: "Which HTML element is used to embed audio content in a web page?",
          options: [
            "A) <audio>",
            "B) <video>",
            "C) <embed>",
            "D) <sound>",
          ],
          correctAnswer: "A) <audio>",
        },
        {
          id: 2,
          question: "The autoplay attribute in the <audio> and <video> tags specifies that the media should start playing as soon as the web page loads. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 3,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 4,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 5,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 6,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 8,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 9,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 10,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 11,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 12,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 13,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 14,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 15,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 16,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 17,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 18,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 19,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 20,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 21,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 22,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 24,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 25,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 26,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "The <audio> and <video> elements support the _______ attribute, which allows you to specify the source URL of the media file.",
          options: [
            "A) src",
            "B) link",
            "C) href",
            "D) url",
          ],
          correctAnswer: "A) src",
        },
        {
          id: 28,
          question: "Which attribute in the <audio> and <video> tags is used to specify the width of the media player?",
          options: [
            "A) width",
            "B) size",
            "C) height",
            "D) autoplay",
          ],
          correctAnswer: "A) width",
        },
        {
          id: 29,
          question: `What will be displayed in the web page in the above HTML code?
      
            <!DOCTYPE html>
            <html>
            <head>
              <title>HTML Quiz</title>
            </head>
            <body>
              <audio src="music.mp3" controls></audio>
            </body>
            </html>`,
          options: [
            "A) The audio player with controls for playing the \"music.mp3\" file.",
            "B) The audio file \"music.mp3\" will automatically start playing.",
            "C) An empty audio player.",
            "D) An error message.",
          ],
          correctAnswer: "A) The audio player with controls for playing the \"music.mp3\" file.",
        },
        {
          id: 30,
          question: "The controls attribute in the <audio> and <video> tags adds playback controls (such as play, pause, and volume) to the media player. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
      ],


      "6.2": [
        {
          id: 1,
          question: "What is the process of making a website accessible on the Internet called?",
          options: [
            "A) Web development",
            "B) Web publishing",
            "C) Web hosting",
            "D) Web design",
          ],
          correctAnswer: "B) Web publishing",
        },
        {
          id: 2,
          question: "Web hosting is the process of creating a website. (True/False)",
          options: ["True", "False",],
          correctAnswer: "False",
        },
        {
          id: 3,
          question: "Web hosting involves renting space on a _______ server.",
          options: [
            "A) web",
            "B) cloud",
            "C) local",
            "D) private",
          ],
          correctAnswer: "A) web",
        },
        {
          id: 4,
          question: "Which of the following is NOT a common method for uploading files to a web server?",
          options: [
            "A) FTP (File Transfer Protocol)",
            "B) SSH (Secure Shell)",
            "C) HTTP (Hypertext Transfer Protocol)",
            "D) Control Panel File Manager",
          ],
          correctAnswer: "C) HTTP (Hypertext Transfer Protocol)",
        },
        {
          id: 5,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 6,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 7,
          question: "The process of renting server space to make a website accessible on the Internet is known as web _______.",
          options: [
            "A) hosting",
            "B) designing",
            "C) developing",
            "D) programming",
          ],
          correctAnswer: "A) hosting",
        },
        {
          id: 8,
          question: "What does FTP stand for?",
          options: [
            "A) File Transfer Protocol",
            "B) File Testing Platform",
            "C) File Text Processor",
            "D) Fast Track Publishing",
          ],
          correctAnswer: "A) File Transfer Protocol",
        },
        {
          id: 9,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 10,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 11,
          question: "The process of renting server space to make a website accessible on the Internet is known as web _______.",
          options: [
            "A) hosting",
            "B) designing",
            "C) developing",
            "D) programming",
          ],
          correctAnswer: "A) hosting",
        },
        {
          id: 12,
          question: "What does FTP stand for?",
          options: [
            "A) File Transfer Protocol",
            "B) File Testing Platform",
            "C) File Text Processor",
            "D) Fast Track Publishing",
          ],
          correctAnswer: "A) File Transfer Protocol",
        },
        {
          id: 13,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 14,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 15,
          question: "The process of renting server space to make a website accessible on the Internet is known as web _______.",
          options: [
            "A) hosting",
            "B) designing",
            "C) developing",
            "D) programming",
          ],
          correctAnswer: "A) hosting",
        },
        {
          id: 16,
          question: "What does FTP stand for?",
          options: [
            "A) File Transfer Protocol",
            "B) File Testing Platform",
            "C) File Text Processor",
            "D) Fast Track Publishing",
          ],
          correctAnswer: "A) File Transfer Protocol",
        },
        {
          id: 17,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 18,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 19,
          question: "The process of renting server space to make a website accessible on the Internet is known as web _______.",
          options: [
            "A) hosting",
            "B) designing",
            "C) developing",
            "D) programming",
          ],
          correctAnswer: "A) hosting",
        },
        {
          id: 20,
          question: "What does FTP stand for?",
          options: [
            "A) File Transfer Protocol",
            "B) File Testing Platform",
            "C) File Text Processor",
            "D) Fast Track Publishing",
          ],
          correctAnswer: "A) File Transfer Protocol",
        },
        {
          id: 21,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 22,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 23,
          question: "The process of renting server space to make a website accessible on the Internet is known as web _______.",
          options: [
            "A) hosting",
            "B) designing",
            "C) developing",
            "D) programming",
          ],
          correctAnswer: "A) hosting",
        },
        {
          id: 24,
          question: "What does FTP stand for?",
          options: [
            "A) File Transfer Protocol",
            "B) File Testing Platform",
            "C) File Text Processor",
            "D) Fast Track Publishing",
          ],
          correctAnswer: "A) File Transfer Protocol",
        },
        {
          id: 25,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 26,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
        {
          id: 27,
          question: "The process of renting server space to make a website accessible on the Internet is known as web _______.",
          options: [
            "A) hosting",
            "B) designing",
            "C) developing",
            "D) programming",
          ],
          correctAnswer: "A) hosting",
        },
        {
          id: 28,
          question: "What does FTP stand for?",
          options: [
            "A) File Transfer Protocol",
            "B) File Testing Platform",
            "C) File Text Processor",
            "D) Fast Track Publishing",
          ],
          correctAnswer: "A) File Transfer Protocol",
        },
        {
          id: 29,
          question: "Which protocol is commonly used for uploading and managing files on a web server?",
          options: [
            "A) HTTP",
            "B) FTP",
            "C) SMTP",
            "D) POP3",
          ],
          correctAnswer: "B) FTP",
        },
        {
          id: 30,
          question: "SSH is a secure protocol commonly used for remotely accessing and managing web servers. (True/False)",
          options: ["True", "False",],
          correctAnswer: "True",
        },
      ],
    },

    //CHP 6 ENDED



  },

  //subject 4 ended





  5: {
    // Module 2
    1: {
      // Chapter 1
      "1.1": [
        {
          id: 1,
          question: "What is the primary focus of Procedure Oriented Programming (POP)?",
          options: [
            "A) Data",
            "B) Procedures",
            "C) Objects",
            "D) Algorithms"
          ],
          correctAnswer: "B) Procedures",
        },
        {
          id: 2,
          question: "Which of the following is a characteristic of POP?",
          options: [
            "A) Emphasis on data",
            "B) Emphasis on functions",
            "C) Emphasis on objects",
            "D) Emphasis on classes"
          ],
          correctAnswer: "B) Emphasis on functions",
        },
        {
          id: 3,
          question: "In POP, functions are also known as:",
          options: [
            "A) Subroutines",
            "B) Objects",
            "C) Classes",
            "D) Variables"
          ],
          correctAnswer: "A) Subroutines",
        },
        {
          id: 4,
          question: "What is the main drawback of using POP?",
          options: [
            "A) Difficult to debug",
            "B) Limited code reusability",
            "C) Inefficient memory usage",
            "D) Limited scalability"
          ],
          correctAnswer: "B) Limited code reusability",
        },
        {
          id: 5,
          question: "Which programming language is primarily associated with POP?",
          options: [
            "A) C++",
            "B) Python",
            "C) COBOL",
            "D) Java"
          ],
          correctAnswer: "C) COBOL",
        },
        {
          id: 6,
          question: "Which of the following best describes the flow of control in POP?",
          options: [
            "A) Sequential",
            "B) Object-oriented",
            "C) Event-driven",
            "D) Hierarchical"
          ],
          correctAnswer: "A) Sequential",
        },
        {
          id: 7,
          question: "Which concept in POP allows a function to call itself?",
          options: [
            "A) Recursion",
            "B) Iteration",
            "C) Inheritance",
            "D) Polymorphism"
          ],
          correctAnswer: "A) Recursion",
        },
        {
          id: 8,
          question: "Which type of data is not typically used in POP?",
          options: [
            "A) Abstract Data Types",
            "B) Arrays",
            "C) Structures",
            "D) Objects"
          ],
          correctAnswer: "D) Objects",
        },
        {
          id: 9,
          question: "Which of the following is not a characteristic of POP?",
          options: [
            "A) Focuses on actions",
            "B) Uses a top-down approach",
            "C) Functions can access global data",
            "D) Emphasis on data and objects"
          ],
          correctAnswer: "D) Emphasis on data and objects",
        },
        {
          id: 10,
          question: "Which programming paradigm is known for its modularity and reusability of code?",
          options: [
            "A) Object-Oriented Programming (OOP)",
            "B) Procedure-Oriented Programming (POP)",
            "C) Functional Programming (FP)",
            "D) Event-Driven Programming (EDP)"
          ],
          correctAnswer: "A) Object-Oriented Programming (OOP)",
        },
        {
          id: 11,
          question: "Which statement best describes the purpose of a procedure in POP?",
          options: [
            "A) To store data",
            "B) To perform a specific task",
            "C) To define an object",
            "D) To declare a class"
          ],
          correctAnswer: "B) To perform a specific task",
        },
        {
          id: 12,
          question: "What is a potential disadvantage of using recursion in POP?",
          options: [
            "A) Increased code complexity",
            "B) Reduced code readability",
            "C) Limited algorithmic capability",
            "D) Improved memory efficiency"
          ],
          correctAnswer: "A) Increased code complexity",
        },
        {
          id: 13,
          question: "In POP, what is used to pass information between functions?",
          options: [
            "A) Parameters",
            "B) Objects",
            "C) Attributes",
            "D) Variables"
          ],
          correctAnswer: "A) Parameters",
        },
        {
          id: 14,
          question: "Which of the following is not a valid data type in POP?",
          options: [
            "A) Integer",
            "B) Float",
            "C) String",
            "D) Class"
          ],
          correctAnswer: "D) Class",
        },
        {
          id: 15,
          question: "Which programming paradigm is more suited for complex, real-world applications?",
          options: [
            "A) Procedure-Oriented Programming (POP)",
            "B) Object-Oriented Programming (OOP)",
            "C) Functional Programming (FP)",
            "D) Event-Driven Programming (EDP)"
          ],
          correctAnswer: "B) Object-Oriented Programming (OOP)",
        },
        {
          id: 16,
          question: "Which concept in POP allows a function to return multiple values?",
          options: [
            "A) Pointers",
            "B) Arrays",
            "C) Structures",
            "D) Classes"
          ],
          correctAnswer: "C) Structures",
        },
        {
          id: 17,
          question: "Which characteristic of POP makes it easier to debug?",
          options: [
            "A) Emphasis on data",
            "B) Limited code reusability",
            "C) Sequential flow of control",
            "D) Use of objects"
          ],
          correctAnswer: "C) Sequential flow of control",
        },
        {
          id: 18,
          question: "In POP, what is a function that does not return any value called?",
          options: [
            "A) Void function",
            "B) Null function",
            "C) Empty function",
            "D) Non-functional"
          ],
          correctAnswer: "A) Void function",
        },
        {
          id: 19,
          question: "Which programming language is considered a hybrid of POP and OOP?",
          options: [
            "A) C",
            "B) Java",
            "C) Python",
            "D) Ruby"
          ],
          correctAnswer: "A) C",
        },
        {
          id: 20,
          question: "Which type of error is most likely to occur in POP due to incorrect syntax?",
          options: [
            "A) Compilation error",
            "B) Logical error",
            "C) Runtime error",
            "D) None of the above"
          ],
          correctAnswer: "A) Compilation error",
        },
        {
          id: 21,
          question: "Which programming paradigm emphasizes immutability and pure functions?",
          options: [
            "A) Object-Oriented Programming (OOP)",
            "B) Procedure-Oriented Programming (POP)",
            "C) Functional Programming (FP)",
            "D) Event-Driven Programming (EDP)"
          ],
          correctAnswer: "C) Functional Programming (FP)",
        },
        {
          id: 22,
          question: "Which characteristic of POP makes it less suitable for managing large, complex systems?",
          options: [
            "A) Emphasis on modularity",
            "B) Limited code reusability",
            "C) Emphasis on data",
            "D) Limited scalability"
          ],
          correctAnswer: "D) Limited scalability",
        },
        {
          id: 23,
          question: "Which programming paradigm is commonly used for GUI applications?",
          options: [
            "A) Procedure-Oriented Programming (POP)",
            "B) Object-Oriented Programming (OOP)",
            "C) Functional Programming (FP)",
            "D) Event-Driven Programming (EDP)"
          ],
          correctAnswer: "D) Event-Driven Programming (EDP)",
        },
        {
          id: 24,
          question: "Which concept allows a function to modify the original data passed to it?",
          options: [
            "A) Pass by Value",
            "B) Pass by Reference",
            "C) Pass by Pointer",
            "D) Pass by Object"
          ],
          correctAnswer: "B) Pass by Reference",
        },
        {
          id: 25,
          question: "In POP, which control structure is used for repetitive tasks?",
          options: [
            "A) If-else",
            "B) Switch",
            "C) Loop",
            "D) Function"
          ],
          correctAnswer: "C) Loop",
        },
        {
          id: 26,
          question: "Which of the following is a real-world scenario where POP might be more suitable than OOP?",
          options: [
            "A) Developing a game engine",
            "B) Writing a device driver",
            "C) Creating a social media platform",
            "D) Building a banking application"
          ],
          correctAnswer: "B) Writing a device driver",
        },
        {
          id: 27,
          question: "Which programming paradigm encourages the use of stateless, pure functions?",
          options: [
            "A) Object-Oriented Programming (OOP)",
            "B) Procedure-Oriented Programming (POP)",
            "C) Functional Programming (FP)",
            "D) Event-Driven Programming (EDP)"
          ],
          correctAnswer: "C) Functional Programming (FP)",
        },
        {
          id: 28,
          question: "In POP, which type of function does not change the state of the program?",
          options: [
            "A) Pure function",
            "B) Impure function",
            "C) Recursive function",
            "D) Static function"
          ],
          correctAnswer: "A) Pure function",
        },
        {
          id: 29,
          question: "Which characteristic of POP makes it suitable for mathematical computations?",
          options: [
            "A) Emphasis on data",
            "B) Limited code reusability",
            "C) Emphasis on algorithms",
            "D) Limited scalability"
          ],
          correctAnswer: "C) Emphasis on algorithms",
        },
        {
          id: 30,
          question: "In POP, which concept involves breaking down a problem into smaller, manageable tasks?",
          options: [
            "A) Abstraction",
            "B) Modularity",
            "C) Encapsulation",
            "D) Inheritance"
          ],
          correctAnswer: "B) Modularity",
        },
      ],


      "1.2": [
        {
          id: 1,
          question: "What is the primary focus of Object-Oriented Programming (OOP)?",
          options: ["A) Data", "B) Objects", "C) Procedures", "D) Algorithms"],
          correctAnswer: "B) Objects",
        },
        {
          id: 2,
          question: "Which of the following is a characteristic of OOP?",
          options: ["A) Emphasis on data", "B) Emphasis on functions", "C) Emphasis on objects", "D) Emphasis on algorithms"],
          correctAnswer: "C) Emphasis on objects",
        },
        {
          id: 3,
          question: "In OOP, objects can have:",
          options: ["A) Data and functions", "B) Data only", "C) Functions only", "D) Variables and loops"],
          correctAnswer: "A) Data and functions",
        },
        {
          id: 4,
          question: "What is the main benefit of using OOP?",
          options: ["A) Limited code reusability", "B) Enhanced code maintainability", "C) Emphasis on procedures", "D) Limited modularity"],
          correctAnswer: "B) Enhanced code maintainability",
        },
        {
          id: 5,
          question: "Which programming language is primarily associated with OOP?",
          options: ["A) C", "B) COBOL", "C) Java", "D) Fortran"],
          correctAnswer: "C) Java",
        },
        {
          id: 6,
          question: "Which of the following best describes the flow of control in OOP?",
          options: ["A) Sequential", "B) Object-oriented", "C) Event-driven", "D) Hierarchical"],
          correctAnswer: "B) Object-oriented",
        },
        {
          id: 7,
          question: "Which concept in OOP allows a class to inherit attributes and methods from another class?",
          options: ["A) Encapsulation", "B) Inheritance", "C) Polymorphism", "D) Abstraction"],
          correctAnswer: "B) Inheritance",
        },
        {
          id: 8,
          question: "Which type of data is heavily used in OOP?",
          options: ["A) Abstract Data Types", "B) Arrays", "C) Structures", "D) Functions"],
          correctAnswer: "A) Abstract Data Types",
        },
        {
          id: 9,
          question: "Which of the following is not a characteristic of OOP?",
          options: ["A) Focuses on actions", "B) Uses a bottom-up approach", "C) Objects can access global data", "D) Emphasis on classes and objects"],
          correctAnswer: "B) Uses a bottom-up approach",
        },
        {
          id: 10,
          question: "Which programming paradigm is known for its flexibility and adaptability?",
          options: ["A) Object-Oriented Programming (OOP)", "B) Procedure-Oriented Programming (POP)", "C) Functional Programming (FP)", "D) Event-Driven Programming (EDP)"],
          correctAnswer: "A) Object-Oriented Programming (OOP)",
        },
        {
          id: 11,
          question: "Differences between OOP and POP:",
          options: ["A) Functions", "B) Objects", "C) Procedures", "D) Variables"],
          correctAnswer: "B) Objects",
        },
        {
          id: 12,
          question: "Which programming paradigm is more suitable for managing large, complex systems?",
          options: ["A) OOP", "B) POP", "C) Both are equally suitable", "D) Neither is suitable"],
          correctAnswer: "A) OOP",
        },
        {
          id: 13,
          question: "Which concept allows a function to call itself in POP but with a different meaning in OOP?",
          options: ["A) Recursion", "B) Inheritance", "C) Abstraction", "D) Encapsulation"],
          correctAnswer: "B) Inheritance",
        },
        {
          id: 14,
          question: "Which characteristic of OOP makes it easier to maintain and update code?",
          options: ["A) Emphasis on data", "B) Limited code reusability", "C) Use of objects and classes", "D) Sequential flow of control"],
          correctAnswer: "C) Use of objects and classes",
        },
        {
          id: 15,
          question: "In OOP, what is used to pass information between objects?",
          options: ["A) Parameters", "B) Objects", "C) Attributes", "D) Variables"],
          correctAnswer: "B) Objects",
        },
        {
          id: 16,
          question: "Which type of error is most likely to occur in OOP due to incorrect syntax?",
          options: ["A) Compilation error", "B) Logical error", "C) Runtime error", "D) None of the above"],
          correctAnswer: "A) Compilation error",
        },
        {
          id: 17,
          question: "Which programming paradigm is more suitable for GUI applications?",
          options: ["A) OOP", "B) POP", "C) Both are equally suitable", "D) Neither is suitable"],
          correctAnswer: "A) OOP",
        },
        {
          id: 18,
          question: "In OOP, which concept involves grouping data and functions that operate on the data?",
          options: ["A) Encapsulation", "B) Inheritance", "C) Abstraction", "D) Polymorphism"],
          correctAnswer: "A) Encapsulation",
        },
        {
          id: 19,
          question: "Which programming paradigm encourages the use of stateless, pure functions?",
          options: ["A) OOP", "B) POP", "C) Both equally encourage it", "D) Neither encourages it"],
          correctAnswer: "B) POP",
        },
        {
          id: 20,
          question: "In OOP, which concept allows a class to have multiple forms or implementations?",
          options: ["A) Encapsulation", "B) Inheritance", "C) Abstraction", "D) Polymorphism"],
          correctAnswer: "D) Polymorphism",
        },
        {
          id: 21,
          question: "Which concept in OOP allows a class to implement the same method in different ways for different data types?",
          options: ["A) Overloading", "B) Overriding", "C) Polymorphism", "D) Abstraction"],
          correctAnswer: "C) Polymorphism",
        },
        {
          id: 22,
          question: "In OOP, which concept allows a class to define a general structure that can be inherited by multiple subclasses?",
          options: ["A) Overloading", "B) Overriding", "C) Inheritance", "D) Encapsulation"],
          correctAnswer: "C) Inheritance",
        },
        {
          id: 23,
          question: "Which programming paradigm is known for its emphasis on actions and operations?",
          options: ["A) OOP", "B) POP", "C) Both equally emphasize actions", "D) Neither emphasizes actions"],
          correctAnswer: "B) POP",
        },
        {
          id: 24,
          question: "Which programming paradigm is known for its emphasis on data and data structures?",
          options: ["A) OOP", "B) POP", "C) Both equally emphasize data", "D) Neither emphasizes data"],
          correctAnswer: "A) OOP",
        },
        {
          id: 25,
          question: "Which concept in OOP allows a class to hide the internal details of its implementation?",
          options: ["A) Abstraction", "B) Inheritance", "C) Polymorphism", "D) Encapsulation"],
          correctAnswer: "D) Encapsulation",
        },
        {
          id: 26,
          question: "Which programming paradigm is more suitable for real-world scenarios with dynamic, changing data?",
          options: ["A) OOP", "B) POP", "C) Both are equally suitable", "D) Neither is suitable"],
          correctAnswer: "A) OOP",
        },
        {
          id: 27,
          question: "Which concept in OOP allows a class to implement the same method with the same name but different parameters?",
          options: ["A) Overloading", "B) Overriding", "C) Polymorphism", "D) Abstraction"],
          correctAnswer: "A) Overloading",
        },
        {
          id: 28,
          question: "Which concept in OOP allows a class to implement the same method with the same name but different implementations?",
          options: ["A) Overloading", "B) Overriding", "C) Polymorphism", "D) Abstraction"],
          correctAnswer: "B) Overriding",
        },
        {
          id: 29,
          question: "In OOP, which concept involves breaking down a problem into smaller, manageable objects?",
          options: ["A) Abstraction", "B) Modularity", "C) Encapsulation", "D) Inheritance"],
          correctAnswer: "B) Modularity",
        },
        {
          id: 30,
          question: "Which programming paradigm is known for its emphasis on functions as the primary building blocks?",
          options: ["A) OOP", "B) POP", "C) Both equally emphasize functions", "D) Neither emphasizes functions"],
          correctAnswer: "B) POP",
        },
      ],


      "1.3": [
        {
          id: 1,
          question: "What is a class in Object-Oriented Programming (OOP)?",
          options: [
            "A) A blueprint for creating objects",
            "B) An instance of an object",
            "C) A predefined data type",
            "D) A function within an object",
          ],
          correctAnswer: "A) A blueprint for creating objects",
        },
        {
          id: 2,
          question: "Which of the following best defines an object in OOP?",
          options: [
            "A) A collection of variables",
            "B) An instance of a class",
            "C) A function within a class",
            "D) A predefined data type",
          ],
          correctAnswer: "B) An instance of a class",
        },
        {
          id: 3,
          question: "What is the purpose of inheritance in OOP?",
          options: [
            "A) To create new objects",
            "B) To reuse code and create new classes based on existing ones",
            "C) To define a class",
            "D) To hide the implementation details",
          ],
          correctAnswer: "B) To reuse code and create new classes based on existing ones",
        },
        {
          id: 4,
          question: "What does polymorphism refer to in OOP?",
          options: [
            "A) The ability of a class to have multiple forms or implementations",
            "B) The process of creating a class hierarchy",
            "C) The act of hiding implementation details",
            "D) The process of defining methods in a class",
          ],
          correctAnswer: "A) The ability of a class to have multiple forms or implementations",
        },
        {
          id: 5,
          question: "What is data abstraction in OOP?",
          options: [
            "A) The process of defining private variables in a class",
            "B) The act of hiding implementation details and exposing only relevant information",
            "C) The ability of a class to have multiple forms or implementations",
            "D) The process of creating a class hierarchy",
          ],
          correctAnswer: "B) The act of hiding implementation details and exposing only relevant information",
        },
        {
          id: 6,
          question: "Which concept allows a class to implement the same method with different behavior in different subclasses?",
          options: [
            "A) Inheritance",
            "B) Polymorphism",
            "C) Encapsulation",
            "D) Abstraction",
          ],
          correctAnswer: "B) Polymorphism",
        },
        {
          id: 7,
          question: "What does encapsulation refer to in OOP?",
          options: [
            "A) The process of creating a class hierarchy",
            "B) The act of bundling data and methods together within a class",
            "C) The process of defining private variables in a class",
            "D) The act of hiding implementation details and exposing only relevant information",
          ],
          correctAnswer: "B) The act of bundling data and methods together within a class",
        },
        {
          id: 8,
          question: "What is the term for passing a message from one object to another in OOP?",
          options: [
            "A) Messaging",
            "B) Communication",
            "C) Message Passing",
            "D) Signal Handling",
          ],
          correctAnswer: "C) Message Passing",
        },
        {
          id: 9,
          question: "Which concept allows the selection of a method to be executed at runtime in OOP?",
          options: [
            "A) Static binding",
            "B) Early binding",
            "C) Dynamic binding",
            "D) Late binding",
          ],
          correctAnswer: "C) Dynamic binding",
        },
        {
          id: 10,
          question: "What is the term for the ability to change the behavior of a method in a subclass?",
          options: [
            "A) Overloading",
            "B) Overriding",
            "C) Encapsulation",
            "D) Abstraction",
          ],
          correctAnswer: "B) Overriding",
        },
        {
          id: 11,
          question: "Which of the following is not a basic concept of OOP?",
          options: [
            "A) Abstraction",
            "B) Concurrency",
            "C) Inheritance",
            "D) Polymorphism",
          ],
          correctAnswer: "B) Concurrency",
        },
        {
          id: 12,
          question: "What is the primary purpose of a constructor in a class?",
          options: [
            "A) To allocate memory for an object",
            "B) To initialize the object's data members",
            "C) To define the object's methods",
            "D) To delete an object",
          ],
          correctAnswer: "B) To initialize the object's data members",
        },
        {
          id: 13,
          question: "In OOP, what does the 'this' pointer refer to?",
          options: [
            "A) It refers to the current object",
            "B) It refers to the current class",
            "C) It refers to the parent class",
            "D) It refers to the derived class",
          ],
          correctAnswer: "A) It refers to the current object",
        },
        {
          id: 14,
          question: "Which keyword is used to create a subclass in C++?",
          options: [
            "A) subclass",
            "B) extends",
            "C) inherit",
            "D) derived",
          ],
          correctAnswer: "D) derived",
        },
        {
          id: 15,
          question: "In OOP, what is used to pass information between objects?",
          options: [
            "A) Parameters",
            "B) Objects",
            "C) Attributes",
            "D) Variables",
          ],
          correctAnswer: "B) Objects",
        },
        {
          id: 16,
          question: "Which operator is used to access members of an object in C++?",
          options: [
            "A) ->",
            "B) ::",
            "C) .",
            "D) /",
          ],
          correctAnswer: "C) .",
        },
        {
          id: 17,
          question: "What is the term for a function defined within a class in C++?",
          options: [
            "A) Method",
            "B) Procedure",
            "C) Subroutine",
            "D) Function",
          ],
          correctAnswer: "A) Method",
        },
        {
          id: 18,
          question: "What is the purpose of a destructor in a C++ class?",
          options: [
            "A) To initialize the object",
            "B) To perform cleanup tasks before an object is destroyed",
            "C) To define the object's methods",
            "D) To allocate memory for an object",
          ],
          correctAnswer: "B) To perform cleanup tasks before an object is destroyed",
        },
        {
          id: 19,
          question: "Which keyword is used to prevent a class from being inherited in C++?",
          options: [
            "A) virtual",
            "B) final",
            "C) sealed",
            "D) private",
          ],
          correctAnswer: "B) final",
        },
        {
          id: 20,
          question: "In C++, which access specifier allows members to be accessed by any function?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) friend",
          ],
          correctAnswer: "A) public",
        },
        {
          id: 21,
          question: "Which of the following best defines an object in OOP?",
          options: [
            "A) A collection of variables",
            "B) An instance of a class",
            "C) A function within a class",
            "D) A predefined data type",
          ],
          correctAnswer: "B) An instance of a class",
        },
        {
          id: 22,
          question: "What is the primary focus of Object-Oriented Programming (OOP)?",
          options: [
            "A) Data",
            "B) Objects",
            "C) Procedures",
            "D) Algorithms",
          ],
          correctAnswer: "B) Objects",
        },
        {
          id: 23,
          question: "What is the main benefit of using OOP?",
          options: [
            "A) Limited code reusability",
            "B) Enhanced code maintainability",
            "C) Emphasis on procedures",
            "D) Limited modularity",
          ],
          correctAnswer: "B) Enhanced code maintainability",
        },
        {
          id: 24,
          question: "In OOP, which concept allows a class to have multiple forms or implementations?",
          options: [
            "A) Encapsulation",
            "B) Inheritance",
            "C) Abstraction",
            "D) Polymorphism",
          ],
          correctAnswer: "D) Polymorphism",
        },
        {
          id: 25,
          question: "Which concept in OOP allows a class to implement the same method with the same name but different parameters?",
          options: [
            "A) Overloading",
            "B) Overriding",
            "C) Polymorphism",
            "D) Abstraction",
          ],
          correctAnswer: "A) Overloading",
        },
        {
          id: 26,
          question: "What is a potential disadvantage of using recursion in OOP?",
          options: [
            "A) Increased code complexity",
            "B) Reduced code readability",
            "C) Limited algorithmic capability",
            "D) Improved memory efficiency",
          ],
          correctAnswer: "A) Increased code complexity",
        },
        {
          id: 27,
          question: "In OOP, which type of function does not return any value called?",
          options: [
            "A) Void function",
            "B) Null function",
            "C) Empty function",
            "D) Non-functional",
          ],
          correctAnswer: "A) Void function",
        },
        {
          id: 28,
          question: "Which programming language is considered a hybrid of POP and OOP?",
          options: [
            "A) C",
            "B) Java",
            "C) Python",
            "D) Ruby",
          ],
          correctAnswer: "A) C",
        },
        {
          id: 29,
          question: "Which type of error is most likely to occur in OOP due to incorrect syntax?",
          options: [
            "A) Compilation error",
            "B) Logical error",
            "C) Runtime error",
            "D) None of the above",
          ],
          correctAnswer: "A) Compilation error",
        },
        {
          id: 30,
          question: "What is the primary focus of Object-Oriented Programming (OOP)?",
          options: [
            "A) Data",
            "B) Objects",
            "C) Procedures",
            "D) Algorithms",
          ],
          correctAnswer: "B) Objects",
        },
      ],
      // Add more subchapters for Chapter 1 as needed
    },

    //chapter 1 completed


    2: {
      "2.1": [
        {
          id: 1,
          question: "Question 1 for subchapter 1.1",
          options: ["Option 1", "Option 2", "Option 3", "Option 4"],
          correctAnswer: "Option 1",
        },
        {
          id: 2,
          question: "Question 2 for subchapter 1.1",
          options: ["Option 1", "Option 2", "Option 3", "Option 4"],
          correctAnswer: "Option 3",
        },
        {
          id: 3,
          question: "Which header file is used in C++ for input and output operations?",
          options: ["A) iostream", "B) iomanip", "C) ifstream", "D) ostream"],
          correctAnswer: "A) iostream",
        },
        {
          id: 4,
          question: "What is the purpose of the cin object in C++?",
          options: ["A) Output stream object", "B) Input stream object", "C) Manipulator object", "D) File stream object"],
          correctAnswer: "B) Input stream object",
        },
        {
          id: 5,
          question: "Which operator is used for cascading input in C++?",
          options: ["A) <<", "B) >>", "C) &&", "D) ||"],
          correctAnswer: "B) >>",
        },
        {
          id: 6,
          question: "What does the following line of code do in C++```cpcout << \"Hello, World!\";",
          options: ["A) Prints \"Hello, World!\"", "B) Takes input \"Hello, World!\"", "C) Compiles with an error", "D) None of the above"],
          correctAnswer: "A) Prints \"Hello, World!\"",
        },
        {
          id: 7,
          question: "Which of the following is a valid way to add a comment in C++?",
          options: ["A) # This is a comment", "B) // This is a comment", "C) /* This is a comment */", "D) ' This is a comment '"],
          correctAnswer: "B) // This is a comment",
        },
        {
          id: 8,
          question: "What is the purpose of tokens in C++ programming?",
          options: ["A) They are used for authorization", "B) They are the building blocks of a program", "C) They are used for encryption", "D) They are used for database operations"],
          correctAnswer: "B) They are the building blocks of a program",
        },
        {
          id: 9,
          question: "Which of the following is a C++ keyword?",
          options: ["A) main", "B) function", "C) variable", "D) declare"],
          correctAnswer: "A) main",
        },
        {
          id: 10,
          question: "Which of the following is a valid C++ identifier?",
          options: ["A) 123variable", "B) _variable", "C) class", "D) break"],
          correctAnswer: "B) _variable",
        },
        {
          id: 11,
          question: "What will be the output of the following C++ code snippet```cpconst int PI = 3.14;",
          options: ["A) Compilation error", "B) Runtime error", "C) PI will be assigned the value 3.14", "D) PI will be assigned the value 3"],
          correctAnswer: "A) Compilation error",
        },
        {
          id: 12,
          question: "Which of the following is a valid constant in C++?",
          options: ["A) 3.14", "B) \"Hello, World!\"", "C) true", "D) int"],
          correctAnswer: "A) 3.14",
        },
        {
          id: 13,
          question: "What will be the output of the following C++ code snippet```cpint x = 5std::cout << x;",
          options: ["A) 5", "B) x", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) 5",
        },
        {
          id: 14,
          question: "Which of the following is used for user-defined input in C++?",
          options: ["A) cin", "B) cout", "C) getline", "D) printf"],
          correctAnswer: "A) cin",
        },
        {
          id: 15,
          question: "What will be the output of the following C++ code snippet```cpint x = 10, y = 20std::cout << x << \" \" << y;",
          options: ["A) 10 20", "B) x y", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) 10 20",
        },
        {
          id: 16,
          question: "Which operator is used for logical AND in C++?",
          options: ["A) &&", "B) ||", "C) !", "D) &"],
          correctAnswer: "A) &&",
        },
        {
          id: 17,
          question: "What will be the output of the following C++ code snippet```cpint x = 5std::cout << x++ << \" \" << x;",
          options: ["A) 5 5", "B) 5 6", "C) 6 6", "D) 6 5"],
          correctAnswer: "B) 5 6",
        },
        {
          id: 18,
          question: "Which keyword is used to define a constant in C++?",
          options: ["A) const", "B) constant", "C) define", "D) final"],
          correctAnswer: "A) const",
        },
        {
          id: 19,
          question: "What will be the output of the following C++ code snippet```cpint x = 5std::cout << ++x << \" \" << x;",
          options: ["A) 5 6", "B) 6 5", "C) 6 6", "D) 5 5"],
          correctAnswer: "C) 6 6",
        },
        {
          id: 20,
          question: "Which of the following is not a valid data type in C++?",
          options: ["A) float", "B) char", "C) string", "D) double"],
          correctAnswer: "C) string",
        },
        {
          id: 21,
          question: "What will be the output of the following C++ code snippet```cpint x = 10std::cout << (x > 5 ? \"Greater\" : \"Smaller\");",
          options: ["A) Greater", "B) Smaller", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) Greater",
        },
        {
          id: 22,
          question: "Which of the following is an incorrect way to declare a variable in C++?",
          options: ["A) int x = 5;", "B) float y;", "C) x = 5;", "D) char z;"],
          correctAnswer: "C) x = 5;",
        },
        {
          id: 23,
          question: "What will be the output of the following C++ code snippet```cpint x = 5std::cout << sizeof(x);",
          options: ["A) 2", "B) 4", "C) 8", "D) Depends on the system"],
          correctAnswer: "B) 4",
        },
        {
          id: 24,
          question: "Which header file is used for mathematical operations in C++?",
          options: ["A) math.h", "B) cmath", "C) iomanip", "D) stdlib.h"],
          correctAnswer: "B) cmath",
        },
        {
          id: 25,
          question: "What will be the output of the following C++ code snippet```cpstd::cout << 10/3;",
          options: ["A) 3", "B) 3.33", "C) 3.0", "D) Compilation error"],
          correctAnswer: "C) 3.0",
        },
        {
          id: 26,
          question: "Which of the following correctly defines a multi-line comment in C++?",
          options: ["A) /* This is a comment */", "B) // This is a comment //", "C) ' This is a comment '", "D) # This is a comment"],
          correctAnswer: "A) /* This is a comment */",
        },
        {
          id: 27,
          question: "What will be the output of the following C++ code snippet```cpint x = 5, y = 3std::cout << x % y;",
          options: ["A) 2", "B) 1", "C) 1.67", "D) Compilation error"],
          correctAnswer: "B) 1",
        },
        {
          id: 28,
          question: "Which of the following is a valid way to include a library in C++?",
          options: ["A) include <library>", "B) import <library>", "C) #include \"library\"", "D) include \"library\""],
          correctAnswer: "C) #include \"library\"",
        },
        {
          id: 29,
          question: "What will be the output of the following C++ code snippet```cpint x = 5, y = 3std::cout << x + y * 2;",
          options: ["A) 11", "B) 16", "C) 21", "D) 26"],
          correctAnswer: "B) 16",
        },
        {
          id: 30,
          question: "Which of the following is used to define a block of code in C++?",
          options: ["A) { }", "B) [ ]", "C) ( )", "D) < >"],
          correctAnswer: "A) { }",
        },
      ],


      "2.2": [
        {
          id: 1,
          question: "What is the largest possible value for an int in C++?",
          options: ["A) 32767", "B) 2147483647", "C) 9223372036854775807", "D) It depends on the system"],
          correctAnswer: "D) It depends on the system",
        },
        {
          id: 2,
          question: "Which data type is used to represent decimal numbers in C++?",
          options: ["A) int", "B) float", "C) double", "D) char"],
          correctAnswer: "B) float",
        },
        {
          id: 3,
          question: "What is the size of a char data type in C++?",
          options: ["A) 1 byte", "B) 2 bytes", "C) 4 bytes", "D) Depends on the system"],
          correctAnswer: "A) 1 byte",
        },
        {
          id: 4,
          question: "Which data type is used to store true or false values in C++?",
          options: ["A) bool", "B) int", "C) char", "D) double"],
          correctAnswer: "A) bool",
        },
        {
          id: 5,
          question: "What is the range of values for a char data type in C++?",
          options: ["A) -128 to 127", "B) 0 to 255", "C) 0 to 65535", "D) 0 to 4294967295"],
          correctAnswer: "B) 0 to 255",
        },
        {
          id: 6,
          question: "Which data type is used to store a single character in C++?",
          options: ["A) char", "B) int", "C) float", "D) bool"],
          correctAnswer: "A) char",
        },
        {
          id: 7,
          question: "What will be the output of the following C++ code snippetint x = 5 / 2std::cout << x;",
          options: ["A) 2.5", "B) 2", "C) 2.0", "D) 2.25"],
          correctAnswer: "B) 2",
        },
        {
          id: 8,
          question: "Which data type is used to store whole numbers in C++?",
          options: ["A) int", "B) float", "C) double", "D) bool"],
          correctAnswer: "A) int",
        },
        {
          id: 9,
          question: "What is the size of a double data type in C++?",
          options: ["A) 4 bytes", "B) 8 bytes", "C) 16 bytes", "D) Depends on the system"],
          correctAnswer: "B) 8 bytes",
        },
        {
          id: 10,
          question: "What will be the output of the following C++ code snippetdouble x = 5 / 2std::cout << x;",
          options: ["A) 2.5", "B) 2", "C) 2.0", "D) 2.25"],
          correctAnswer: "C) 2.0",
        },
        {
          id: 11,
          question: "Which data type is used to store true or false values in C++?",
          options: ["A) bool", "B) int", "C) char", "D) double"],
          correctAnswer: "A) bool",
        },
        {
          id: 12,
          question: "What is the size of a long data type in C++?",
          options: ["A) 2 bytes", "B) 4 bytes", "C) 8 bytes", "D) Depends on the system"],
          correctAnswer: "B) 4 bytes",
        },
        {
          id: 13,
          question: "Which data type is used to store decimal numbers with higher precision than float in C++?",
          options: ["A) int", "B) float", "C) double", "D) long double"],
          correctAnswer: "D) long double",
        },
        {
          id: 14,
          question: "What will be the output of the following C++ code snippetchar ch = 'A'std::cout << (int)ch;",
          options: ["A) A", "B) 65", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "B) 65",
        },
        {
          id: 15,
          question: "Which data type is used to represent a wide character in C++?",
          options: ["A) wchar_t", "B) wstring", "C) widechar", "D) wchar"],
          correctAnswer: "A) wchar_t",
        },
        {
          id: 16,
          question: "What will be the output of the following C++ code snippetwchar_t ch = L'A'std::wcout << ch;",
          options: ["A) A", "B) 65", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) A",
        },
        {
          id: 17,
          question: "Which data type is used to store text strings in C++?",
          options: ["A) char", "B) string", "C) text", "D) str"],
          correctAnswer: "B) string",
        },
        {
          id: 18,
          question: "What will be the output of the following C++ code snippetstd::string name = \"John Doe\"std::cout << name.length();",
          options: ["A) 8", "B) 9", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) 8",
        },
        {
          id: 19,
          question: "Which data type is used to store large whole numbers in C++?",
          options: ["A) int", "B) long", "C) long long", "D) mega int"],
          correctAnswer: "C) long long",
        },
        {
          id: 20,
          question: "What will be the output of the following C++ code snippetlong long num = 1234567890123456789std::cout << num;",
          options: ["A) 1234567890123456789", "B) 12345678901234567890", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) 1234567890123456789",
        },
        {
          id: 21,
          question: "Which data type is used to store the result of a comparison in C++?",
          options: ["A) int", "B) bool", "C) char", "D) double"],
          correctAnswer: "B) bool",
        },
        {
          id: 22,
          question: "What will be the output of the following C++ code snippetbool flag = truestd::cout << std::boolalpha << flag;",
          options: ["A) true", "B) 1", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) true",
        },
        {
          id: 23,
          question: "Which data type is used to represent pointers in C++?",
          options: ["A) int*", "B) pointer", "C) ptr", "D) address"],
          correctAnswer: "A) int*",
        },
        {
          id: 24,
          question: "What will be the output of the following C++ code snippetint* ptrstd::cout << ptr;",
          options: ["A) Garbage value", "B) 0", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) Garbage value",
        },
        {
          id: 25,
          question: "Which data type is used to represent complex numbers in C++?",
          options: ["A) complex", "B) real", "C) imaginary", "D) std::complex"],
          correctAnswer: "D) std::complex",
        },
        {
          id: 26,
          question: "What will be the output of the following C++ code snippetstd::complex<double> z(3.0, 4.0)std::cout << std::abs(z);",
          options: ["A) 5", "B) 7", "C) 25", "D) 16"],
          correctAnswer: "A) 5",
        },
        {
          id: 27,
          question: "Which data type is used to store dates and times in C++?",
          options: ["A) date", "B) time", "C) datetime", "D) std::chrono::time_point"],
          correctAnswer: "D) std::chrono::time_point",
        },
        {
          id: 28,
          question: "What will be the output of the following C++ code snippetauto now = std::chrono::system_clock::now()std::time_t t = std::chrono::system_clock::to_time_t(now)std::cout << std::ctime(&t)(Assuming current time is 12:34:56 on 1st January 2023)",
          options: ["A) Sun Jan 1 12:34:56 2023", "B) 12:34:56", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) Sun Jan 1 12:34:56 2023",
        },
        {
          id: 29,
          question: "Which data type is used to represent monetary values in C++?",
          options: ["A) currency", "B) money", "C) std::money", "D) std::chrono::duration"],
          correctAnswer: "C) std::money",
        },
        {
          id: 30,
          question: "What will be the output of the following C++ code snippetstd::money_put<char> moneyPunct(std::cout.imbue(std::locale(\"en_US.UTF-8\")))std::cout << moneyPunct.put(std::cout, false, 12345.67, '$', true)(Assuming the locale uses comma as a thousands separator and period as a decimal point)",
          options: ["A) $12,345.67", "B) 12,345.67$", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) $12,345.67",
        },
      ],


      "2.3": [
        {
          id: 1,
          question: "Question 1 for subchapter 1.1",
          options: ["Option 1", "Option 2", "Option 3", "Option 4"],
          correctAnswer: "Option 1",
        },
        {
          id: 2,
          question: "Question 2 for subchapter 1.1",
          options: ["Option 1", "Option 2", "Option 3", "Option 4"],
          correctAnswer: "Option 3",
        },
        {
          id: 3,
          question: "What is the purpose of declaring a variable in C++?",
          options: [
            "A) To initialize it with a value",
            "B) To allocate memory for it",
            "C) To provide a name to a value",
            "D) To perform mathematical operations",
          ],
          correctAnswer: "C) To provide a name to a value",
        },
        {
          id: 4,
          question: "Which keyword is used to declare a constant in C++?",
          options: ["A) var", "B) constant", "C) const", "D) readonly"],
          correctAnswer: "C) const",
        },
        {
          id: 5,
          question: "Which of the following is a valid way to declare a symbolic constant in C++?",
          options: [
            "A) constant int MAX_VALUE = 100;",
            "B) const MAX_VALUE = 100;",
            "C) define MAX_VALUE 100",
            "D) const int MAX_VALUE = 100;",
          ],
          correctAnswer: "D) const int MAX_VALUE = 100;",
        },
        {
          id: 6,
          question: "What is the purpose of using symbolic constants in C++?",
          options: [
            "A) To declare variables",
            "B) To improve code readability and maintainability",
            "C) To perform arithmetic operations",
            "D) To declare functions",
          ],
          correctAnswer: "B) To improve code readability and maintainability",
        },
        {
          id: 7,
          question: "Which operator is used to perform dynamic initialization of variables in C++?",
          options: ["A) =", "B) ()", "C) {}", "D) >"],
          correctAnswer: "C) {}",
        },
        {
          id: 8,
          question: "What is the main advantage of dynamic initialization of variables in C++?",
          options: [
            "A) It allows variables to be declared without a data type.",
            "B) It allows variables to be initialized at runtime.",
            "C) It allows variables to be declared without a name.",
            "D) It allows variables to be declared globally.",
          ],
          correctAnswer: "B) It allows variables to be initialized at runtime.",
        },
        {
          id: 9,
          question: "Which of the following is a correct way to dynamically initialize an array in C++?",
          options: ["A) int numbers[5] = {1, 2, 3, 4, 5};", "B) int numbers[] = {1, 2, 3, 4, 5};", "C) int numbers[5]; numbers = {1, 2, 3, 4, 5};", "D) int[] numbers = {1, 2, 3, 4, 5};"],
          correctAnswer: "A) int numbers[5] = {1, 2, 3, 4, 5};",
        },
        {
          id: 10,
          question: "What is the primary purpose of reference variables in C++?",
          options: [
            "A) To create new variables",
            "B) To provide alternative names for existing variables",
            "C) To store multiple values",
            "D) To declare constants",
          ],
          correctAnswer: "B) To provide alternative names for existing variables",
        },
        {
          id: 11,
          question: "Which operator is used to declare a reference variable in C++?",
          options: ["A) &", "B) *", "C) #", "D) %"],
          correctAnswer: "A) &",
        },
        {
          id: 12,
          question: "What happens if you try to modify a reference variable to refer to a different variable after it has been initialized?",
          options: [
            "A) It results in a compilation error.",
            "B) The reference variable will be automatically updated to refer to the new variable.",
            "C) It causes a runtime error.",
            "D) The original variable will be destroyed.",
          ],
          correctAnswer: "B) The reference variable will be automatically updated to refer to the new variable.",
        },
        {
          id: 13,
          question: "What is the difference between a pointer and a reference variable in C++?",
          options: [
            "A) Pointers can be null, but reference variables cannot.",
            "B) Reference variables can be null, but pointers cannot.",
            "C) Pointers cannot be used as function parameters, but reference variables can.",
            "D) There is no difference; they are synonymous.",
          ],
          correctAnswer: "A) Pointers can be null, but reference variables cannot.",
        },
        {
          id: 14,
          question: "Which of the following correctly declares a reference variable that refers to an integer variable x?",
          options: ["A) int &ref = x;", "B) int ref = &x;", "C) ref int x;", "D) int x & = ref;"],
          correctAnswer: "A) int &ref = x;",
        },
        {
          id: 15,
          question: "What will be the output of the following C++ code snippetconst int a = 10int &b = astd::cout << b;",
          options: ["A) 10", "B) Compilation error", "C) Runtime error", "D) Undefined behavior"],
          correctAnswer: "B) Compilation error",
        },
        {
          id: 16,
          question: "In C++, which of the following data types can be used as reference variables?",
          options: ["A) int", "B) float", "C) char", "D) All of the above"],
          correctAnswer: "D) All of the above",
        },
        {
          id: 17,
          question: "What will be the output of the following C++ code snippetint x = 5int &y = xx = 10std::cout << y;",
          options: ["A) 5", "B) 10", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "B) 10",
        },
        {
          id: 18,
          question: "Which keyword is used to declare a constant reference in C++?",
          options: ["A) const", "B) ref", "C) reference", "D) readonly"],
          correctAnswer: "A) const",
        },
        {
          id: 19,
          question: "What is the primary advantage of using constant references in C++?",
          options: [
            "A) They allow modification of the referenced variable.",
            "B) They prevent modification of the referenced variable.",
            "C) They allow reference to null values.",
            "D) They allow dynamic initialization of variables.",
          ],
          correctAnswer: "B) They prevent modification of the referenced variable.",
        },
        {
          id: 20,
          question: "What is the purpose of the const keyword in C++?",
          options: ["A) To declare a constant variable", "B) To declare a reference variable", "C) To declare a dynamic variable", "D) To declare a pointer variable"],
          correctAnswer: "A) To declare a constant variable",
        },
        {
          id: 21,
          question: "Which of the following is an example of a constant reference to a string in C++?",
          options: [
            'A) const string &name = "John";',
            'B) string &const name = "John";',
            'C) string const &name = "John";',
            'D) string &name = const "John";',
          ],
          correctAnswer: 'C) string const &name = "John";',
        },
        {
          id: 22,
          question: "What will be the output of the following C++ code snippetconst int x = 5int &y = const_cast<int&>(x)y = 10std::cout << x;",
          options: ["A) 5", "B) 10", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) 5",
        },
        {
          id: 23,
          question: "Which of the following is an example of using const_cast in C++?",
          options: [
            "A) Converting a constant reference to a non-constant reference",
            "B) Converting a non-constant reference to a constant reference",
            "C) Converting a character to an integer",
            "D) Converting an integer to a character",
          ],
          correctAnswer: "B) Converting a non-constant reference to a constant reference",
        },
        {
          id: 24,
          question: "In C++, when is it appropriate to use const_cast?",
          options: [
            "A) To remove the const qualifier from a variable",
            "B) To add the const qualifier to a variable",
            "C) To convert between different data types",
            "D) It should be avoided as much as possible",
          ],
          correctAnswer: "A) To remove the const qualifier from a variable",
        },
        {
          id: 25,
          question: "Which of the following correctly declares a constant pointer to an integer variable x?",
          options: ["A) const int *ptr = &x;", "B) int const *ptr = &x;", "C) int *const ptr = &x;", "D) const int *const ptr = &x;"],
          correctAnswer: "A) const int *ptr = &x;",
        },
        {
          id: 26,
          question: "What will be the output of the following C++ code snippetint x = 5const int *ptr = &xx = 10std::cout << *ptr;",
          options: ["A) 5", "B) 10", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "B) 10",
        },
        {
          id: 27,
          question: "Which of the following statements about constant pointers in C++ is true?",
          options: [
            "A) A constant pointer cannot be re-assigned to point to a different memory location.",
            "B) A constant pointer cannot be dereferenced.",
            "C) A constant pointer cannot have its value changed.",
            "D) A constant pointer is the same as a pointer to a constant.",
          ],
          correctAnswer: "A) A constant pointer cannot be re-assigned to point to a different memory location.",
        },
        {
          id: 28,
          question: "What is the purpose of using volatile keyword in C++?",
          options: ["A) To declare a constant variable", "B) To indicate that a variable may change its value unexpectedly", "C) To indicate that a variable cannot be changed", "D) To declare a dynamic variable"],
          correctAnswer: "B) To indicate that a variable may change its value unexpectedly",
        },
        {
          id: 29,
          question: "In C++, when is it appropriate to use volatile keyword?",
          options: [
            "A) When working with hardware registers or memory-mapped I/O",
            "B) When declaring constants",
            "C) When using dynamic initialization of variables",
            "D) When working with constant pointers",
          ],
          correctAnswer: "A) When working with hardware registers or memory-mapped I/O",
        },
        {
          id: 30,
          question: "Which of the following is an example of declaring a volatile pointer in C++?",
          options: ["A) int volatile *ptr;", "B) volatile int *ptr;", "C) int *volatile ptr;", "D) volatile int *volatile ptr;"],
          correctAnswer: "A) int volatile *ptr;",
        },
      ],


      "2.4": [
        {
          id: 1,
          question: "What is the result of the expression 5 + 3 * 2 in C++?",
          options: ["A) 16", "B) 11", "C) 10", "D) 13"],
          correctAnswer: "B) 11",
        },
        {
          id: 2,
          question: "Which operator is used for exponentiation in C++?",
          options: ["A) **", "B) ^", "C) **", "D) ^"],
          correctAnswer: "B) ^",
        },
        {
          id: 3,
          question: "What will be the value of x after the following code is executed in C++```cpint x = 10x += 5;```",
          options: ["A) 5", "B) 10", "C) 15", "D) 20"],
          correctAnswer: "C) 15",
        },
        {
          id: 4,
          question: "Which of the following is a logical operator in C++?",
          options: ["A) &", "B) ||", "C) +", "D) ~"],
          correctAnswer: "B) ||",
        },
        {
          id: 5,
          question: "What will be the output of the following C++ code snippet```cpbool a = true, b = falsestd::cout << (a && b);```",
          options: ["A) true", "B) false", "C) 1", "D) 0"],
          correctAnswer: "B) false",
        },
        {
          id: 6,
          question: "Which operator is used to check if two values are not equal in C++?",
          options: ["A) ==", "B) !=", "C) <=", "D) >"],
          correctAnswer: "B) !=",
        },
        {
          id: 7,
          question: "What will be the value of x after the following code is executed in C++```cpint x = 10x++;```",
          options: ["A) 9", "B) 10", "C) 11", "D) 12"],
          correctAnswer: "C) 11",
        },
        {
          id: 8,
          question: "Which operator is used for performing integer division in C++?",
          options: ["A) /", "B) //", "C) �", "D) %"],
          correctAnswer: "B) //",
        },
        {
          id: 9,
          question: "What will be the output of the following C++ code snippet```cpint x = 10, y = 3std::cout << (x % y);```",
          options: ["A) 1", "B) 3", "C) 0", "D) 2"],
          correctAnswer: "A) 1",
        },
        {
          id: 10,
          question: "Which operator is used to access the address of a variable in C++?",
          options: ["A) &", "B) *", "C) %", "D) #"],
          correctAnswer: "A) &",
        },
        {
          id: 11,
          question: "What will be the value of y after the following code is executed in C++```cpint x = 5, yy = x++;```",
          options: ["A) 4", "B) 5", "C) 6", "D) 7"],
          correctAnswer: "B) 5",
        },
        {
          id: 12,
          question: "Which operator is used to perform bitwise OR in C++?",
          options: ["A) |", "B) &", "C) ^", "D) ~"],
          correctAnswer: "A) |",
        },
        {
          id: 13,
          question: "What will be the output of the following C++ code snippet```cpint x = 5, y = 3std::cout << (x | y);```",
          options: ["A) 7", "B) 6", "C) 3", "D) 5"],
          correctAnswer: "A) 7",
        },
        {
          id: 14,
          question: "Which operator is used to perform logical NOT in C++?",
          options: ["A) !", "B) &&", "C) ||", "D) ~"],
          correctAnswer: "A) !",
        },
        {
          id: 15,
          question: "What will be the value of x after the following code is executed in C++```cpint x = 10x *= 2;```",
          options: ["A) 10", "B) 20", "C) 5", "D) 40"],
          correctAnswer: "B) 20",
        },
        {
          id: 16,
          question: "Which operator is used to perform bitwise XOR in C++?",
          options: ["A) ^", "B) &", "C) |", "D) ~"],
          correctAnswer: "A) ^",
        },
        {
          id: 17,
          question: "What will be the output of the following C++ code snippet```cpint x = 5, y = 3std::cout << (x ^ y);```",
          options: ["A) 6", "B) 5", "C) 3", "D) 2"],
          correctAnswer: "A) 6",
        },
        {
          id: 18,
          question: "Which operator is used to perform logical AND in C++?",
          options: ["A) &&", "B) ||", "C) &", "D) |"],
          correctAnswer: "A) &&",
        },
        {
          id: 19,
          question: "What will be the output of the following C++ code snippet```cpint x = 5, y = 3std::cout << (x && y);```",
          options: ["A) 1", "B) 0", "C) true", "D) false"],
          correctAnswer: "A) 1",
        },
        {
          id: 20,
          question: "Which operator is used to perform logical OR in C++?",
          options: ["A) ||", "B) &&", "C) |", "D) &"],
          correctAnswer: "A) ||",
        },
        {
          id: 21,
          question: "What will be the output of the following C++ code snippet```cpint x = 5, y = 3std::cout << (x || y);```",
          options: ["A) 1", "B) 0", "C) true", "D) false"],
          correctAnswer: "A) 1",
        },
        {
          id: 22,
          question: "Which operator is used to perform bitwise NOT in C++?",
          options: ["A) ~", "B) !", "C) ^", "D) |"],
          correctAnswer: "A) ~",
        },
        {
          id: 23,
          question: "What will be the output of the following C++ code snippet```cpint x = 5std::cout << (~x);```",
          options: ["A) -6", "B) -5", "C) 4", "D) 5"],
          correctAnswer: "A) -6",
        },
        {
          id: 24,
          question: "Which operator is used for dynamic memory allocation in C++?",
          options: ["A) malloc", "B) free", "C) new", "D) delete"],
          correctAnswer: "C) new",
        },
        {
          id: 25,
          question: "What will be the value of ptr after the following code is executed in C++```cpint* ptr = new int;```",
          options: ["A) Address of the allocated memory", "B) Value of the allocated memory", "C) 0", "D) Garbage value"],
          correctAnswer: "A) Address of the allocated memory",
        },
        {
          id: 26,
          question: "Which operator is used to deallocate memory in C++?",
          options: ["A) malloc", "B) free", "C) new", "D) delete"],
          correctAnswer: "D) delete",
        },
        {
          id: 27,
          question: "What will be the value of x after the following code is executed in C++```cpint* ptr = new int*ptr = 10int x = *ptrdelete ptr;```",
          options: ["A) 10", "B) Garbage value", "C) Compilation error", "D) Runtime error"],
          correctAnswer: "A) 10",
        },
        {
          id: 28,
          question: "Which operator is used to access members of a class or namespace in C++?",
          options: ["A) .", "B) ->", "C) ::", "D) :"],
          correctAnswer: "C) ::",
        },
        {
          id: 29,
          question: "What is the result of the expression sizeof(int) in C++?",
          options: ["A) 2", "B) 4", "C) 8", "D) Depends on the system"],
          correctAnswer: "B) 4",
        },
        {
          id: 30,
          question: "Which operator is used to obtain the address of a class member in C++?",
          options: ["A) .", "B) ->", "C) &", "D) *"],
          correctAnswer: "B) ->",
        },
        // Add more questions for subchapter 1.1 as needed
      ],


      "2.5": [
        {
          id: 1,
          question: "What does the endl manipulator do in C++?",
          options: [
            "A) Ends the program",
            "B) Ends the line and flushes the buffer",
            "C) Ends the line and clears the buffer",
            "D) Ends the line without flushing the buffer"
          ],
          correctAnswer: "B) Ends the line and flushes the buffer",
        },
        {
          id: 2,
          question: "Which manipulator is used to set the width of the next output field in C++?",
          options: [
            "A) setw",
            "B) width",
            "C) setwidth",
            "D) setfield"
          ],
          correctAnswer: "A) setw",
        },
        {
          id: 3,
          question: "What is the purpose of the left manipulator in C++?",
          options: [
            "A) Sets the output to left alignment",
            "B) Sets the output to right alignment",
            "C) Sets the output to center alignment",
            "D) Clears the buffer"
          ],
          correctAnswer: "A) Sets the output to left alignment",
        },
        {
          id: 4,
          question: "Which manipulator is used to set the fill character for the next output operation in C++?",
          options: [
            "A) setfill",
            "B) fillchar",
            "C) setchar",
            "D) fill"
          ],
          correctAnswer: "A) setfill",
        },
        {
          id: 5,
          question: "What does the setprecision manipulator do in C++?",
          options: [
            "A) Sets the precision of floating-point output",
            "B) Sets the width of the output field",
            "C) Sets the fill character",
            "D) Sets the alignment of output"
          ],
          correctAnswer: "A) Sets the precision of floating-point output",
        },
        {
          id: 6,
          question: "What does the fixed manipulator do in C++?",
          options: [
            "A) Sets the output to fixed-point notation",
            "B) Sets the output to scientific notation",
            "C) Sets the precision of floating-point output",
            "D) Sets the width of the output field"
          ],
          correctAnswer: "A) Sets the output to fixed-point notation",
        },
        {
          id: 7,
          question: "In C++, which control structure is used to execute a block of code repeatedly as long as a condition is true?",
          options: [
            "A) if statement",
            "B) for loop",
            "C) while loop",
            "D) switch statement"
          ],
          correctAnswer: "C) while loop",
        },
        {
          id: 8,
          question: "Which keyword is used to specify the default case in a switch statement in C++?",
          options: [
            "A) default",
            "B) break",
            "C) switch",
            "D) case"
          ],
          correctAnswer: "A) default",
        },
        {
          id: 9,
          question: "In C++, which control structure is used to execute a block of code at least once, and then repeatedly as long as a condition is true?",
          options: [
            "A) for loop",
            "B) while loop",
            "C) do-while loop",
            "D) if-else statement"
          ],
          correctAnswer: "C) do-while loop",
        },
        {
          id: 10,
          question: "What is the purpose of the break statement in a loop in C++?",
          options: [
            "A) Terminates the loop and transfers control to the next iteration",
            "B) Terminates the program",
            "C) Terminates the loop and exits the program",
            "D) Skips the current iteration and continues with the next"
          ],
          correctAnswer: "A) Terminates the loop and transfers control to the next iteration",
        },
        {
          id: 11,
          question: "In C++, which control structure is used to execute one block of code if a condition is true, and another block if the condition is false?",
          options: [
            "A) if-else statement",
            "B) switch statement",
            "C) for loop",
            "D) while loop"
          ],
          correctAnswer: "A) if-else statement",
        },
        {
          id: 12,
          question: "What is the result of the expression 10 % 3 in C++?",
          options: [
            "A) 1",
            "B) 3",
            "C) 0",
            "D) 2"
          ],
          correctAnswer: "A) 1",
        },
        {
          id: 13,
          question: "In C++, what is the role of the switch statement?",
          options: [
            "A) It is used to perform repeated calculations.",
            "B) It is used to select one of many code blocks to be executed.",
            "C) It is used to create loops.",
            "D) It is used to declare variables."
          ],
          correctAnswer: "B) It is used to select one of many code blocks to be executed.",
        },
        {
          id: 14,
          question: "In C++, what is the purpose of the continue statement in a loop?",
          options: [
            "A) Terminates the loop and exits the program",
            "B) Skips the rest of the loop's code and continues with the next iteration",
            "C) Terminates the program",
            "D) Restarts the loop from the beginning"
          ],
          correctAnswer: "B) Skips the rest of the loop's code and continues with the next iteration",
        },
        {
          id: 15,
          question: "In C++, which control structure is used to execute a block of code based on a condition being true or false?",
          options: [
            "A) if statement",
            "B) for loop",
            "C) while loop",
            "D) switch statement"
          ],
          correctAnswer: "A) if statement",
        },
        {
          id: 16,
          question: "What is the result of the expression 5 + 2 * 3 in C++?",
          options: [
            "A) 11",
            "B) 13",
            "C) 16",
            "D) 23"
          ],
          correctAnswer: "A) 11",
        },
        {
          id: 17,
          question: "In C++, what is the purpose of the else keyword in an if-else statement?",
          options: [
            "A) It indicates the end of the statement.",
            "B) It specifies the condition to be checked.",
            "C) It provides an alternative block of code to be executed if the initial condition is false.",
            "D) It starts a new block of code."
          ],
          correctAnswer: "C) It provides an alternative block of code to be executed if the initial condition is false.",
        },
        {
          id: 18,
          question: "In C++, which control structure is used to execute a block of code a specific number of times?",
          options: [
            "A) if statement",
            "B) while loop",
            "C) for loop",
            "D) do-while loop"
          ],
          correctAnswer: "C) for loop",
        },
        {
          id: 19,
          question: "What is the result of the expression 8 / 2 in C++?",
          options: [
            "A) 2",
            "B) 4",
            "C) 6",
            "D) 8"
          ],
          correctAnswer: "B) 4",
        },
        {
          id: 20,
          question: "In C++, what is the purpose of the default case in a switch statement?",
          options: [
            "A) It specifies the condition to be checked.",
            "B) It provides an alternative block of code to be executed if no other cases match.",
            "C) It indicates the end of the statement.",
            "D) It starts a new block of code."
          ],
          correctAnswer: "B) It provides an alternative block of code to be executed if no other cases match.",
        },
        {
          id: 21,
          question: "What is the result of the expression 4 * (3 + 2) in C++?",
          options: [
            "A) 9",
            "B) 14",
            "C) 20",
            "D) 10"
          ],
          correctAnswer: "B) 14",
        },
        {
          id: 22,
          question: "In C++, what is the purpose of the do-while loop?",
          options: [
            "A) It executes a block of code as long as a condition is true.",
            "B) It executes a block of code at least once and then repeats as long as a condition is true.",
            "C) It iterates through a range of values.",
            "D) It performs a one-time calculation."
          ],
          correctAnswer: "B) It executes a block of code at least once and then repeats as long as a condition is true.",
        },
        {
          id: 23,
          question: "What will be the output of the following C++ code snippet```cpint x = 5if (x > 3    std::cout << \"x is greater than 3\"els    std::cout << \"x is not greater than 3\";",
          options: [
            "A) x is greater than 3",
            "B) x is not greater than 3",
            "C) Compilation error",
            "D) Runtime error"
          ],
          correctAnswer: "A) x is greater than 3",
        },
        {
          id: 24,
          question: "In C++, what is the purpose of the break statement in a switch statement?",
          options: [
            "A) It terminates the program.",
            "B) It terminates the loop and transfers control to the next iteration.",
            "C) It terminates the switch statement and transfers control to the next case.",
            "D) It skips the current iteration and continues with the next."
          ],
          correctAnswer: "C) It terminates the switch statement and transfers control to the next case",
        },
        {
          id: 25,
          question: "What will be the output of the following C++ code snippet```cpint i = 0while (i < 5)     std::cout << i << \" \"    i++}",
          options: [
            "A) 0 1 2 3 4",
            "B) 1 2 3 4 5",
            "C) 5 4 3 2 1",
            "D) Compilation error"
          ],
          correctAnswer: "A) 0 1 2 3 4",
        },
        {
          id: 26,
          question: "In C++, what is the purpose of the continue statement in a loop?",
          options: [
            "A) It terminates the loop and exits the program.",
            "B) It skips the rest of the loop's code and continues with the next iteration.",
            "C) It restarts the loop from the beginning.",
            "D) It terminates the program."
          ],
          correctAnswer: "B) It skips the rest of the loop's code and continues with the next iteration.",
        },
        {
          id: 27,
          question: "What will be the output of the following C++ code snippet```cpfor (int i = 0; i < 3; i++)     for (int j = 0; j < 2; j++)         std::cout << i << \"-\" << j << \" \"    }",
          options: [
            "A) 0-0 0-1 1-0 1-1 2-0 2-1",
            "B) 0-0 1-0 2-0 0-1 1-1 2-1",
            "C) 0-0 1-0 2-0 2-1 1-1 0-1",
            "D) Compilation error"
          ],
          correctAnswer: "A) 0-0 0-1 1-0 1-1 2-0 2-1",
        },
        {
          id: 28,
          question: "In C++, what is the purpose of the if statement?",
          options: [
            "A) It executes a block of code repeatedly as long as a condition is true.",
            "B) It executes a block of code based on whether a condition is true or false.",
            "C) It performs a one-time calculation.",
            "D) It selects one of many code blocks to be executed."
          ],
          correctAnswer: "B) It executes a block of code based on whether a condition is true or false.",
        },
        {
          id: 29,
          question: "What will be the output of the following C++ code snippet```cpint x = 1switch (x)     case 1        std::cout << \"One \"    case 2        std::cout << \"Two \"    case 3        std::cout << \"Three \"    default        std::cout << \"Default \"}",
          options: [
            "A) One Two Three Default",
            "B) One Two",
            "C) Two Three Default",
            "D) Default"
          ],
          correctAnswer: "A) One Two Three Default",
        },
        {
          id: 30,
          question: "In C++, what is the purpose of the while loop?",
          options: [
            "A) It executes a block of code at least once and then repeats as long as a condition is true.",
            "B) It iterates through a range of values.",
            "C) It performs a one-time calculation.",
            "D) It executes a block of code repeatedly as long as a condition is true."
          ],
          correctAnswer: "D) It executes a block of code repeatedly as long as a condition is true.",
        },
      ],

      // Add more subchapters for Chapter 1 as needed
    },

    3: {
      3.1: [
        {
          id: 1,
          question: "What is the purpose of the main() function in a C++ program?",
          options: [
            "A) It is the entry point of the program",
            "B) It is used to declare variables",
            "C) It defines the structure of a class",
            "D) It is a reserved keyword",
          ],
          correctAnswer: "A) It is the entry point of the program",
        },
        {
          id: 2,
          question: "Which section of a C++ program typically contains function prototypes?",
          options: [
            "A) Main Section",
            "B) Header Section",
            "C) Body Section",
            "D) Footer Section",
          ],
          correctAnswer: "B) Header Section",
        },
        {
          id: 3,
          question: "What is the significance of function prototyping in C++?",
          options: [
            "A) It helps the compiler identify the functions before they are called",
            "B) It defines the structure of a function",
            "C) It is used for declaring variables",
            "D) It is a reserved keyword",
          ],
          correctAnswer: "A) It helps the compiler identify the functions before they are called",
        },
        {
          id: 4,
          question: "Which of the following is a valid way to declare a function prototype in C++?",
          options: [
            "A) int add(int a, int b);",
            "B) add(int a, int b);",
            "C) int add(int, int);",
            "D) add(int, int)",
          ],
          correctAnswer: "A) int add(int a, int b);",
        },
        {
          id: 5,
          question: "What is the purpose of using inline functions in C++?",
          options: [
            "A) To reduce function call overhead",
            "B) To declare variables",
            "C) To define classes",
            "D) To create loops",
          ],
          correctAnswer: "A) To reduce function call overhead",
        },
        {
          id: 6,
          question: "In C++, what keyword is used to define an inline function?",
          options: [
            "A) inline",
            "B) function",
            "C) def",
            "D) define",
          ],
          correctAnswer: "A) inline",
        },
        {
          id: 7,
          question: "Which of the following is a benefit of using inline functions?",
          options: [
            "A) Improved runtime performance",
            "B) Increased program size",
            "C) Increased memory usage",
            "D) Slower program execution",
          ],
          correctAnswer: "A) Improved runtime performance",
        },
        {
          id: 8,
          question: "When should you avoid using inline functions in C++?",
          options: [
            "A) When the function contains a loop",
            "B) When the function is recursive",
            "C) When the function is very large",
            "D) When the function is called only once",
          ],
          correctAnswer: "C) When the function is very large",
        },
        {
          id: 9,
          question: "In C++, can a function be both inline and recursive?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 10,
          question: "Which of the following is a correct way to declare an inline function inside a class in C++?",
          options: [
            "A) inline void MyClass::myFunction() { ... }",
            "B) void inline MyClass::myFunction() { ... }",
            "C) void MyClass::inline myFunction() { ... }",
            "D) void MyClass::myFunction() inline { ... }",
          ],
          correctAnswer: "A) inline void MyClass::myFunction() { ... }",
        },
        {
          id: 11,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\ninline int multiply(int a, int b) {\n    return a * b;\n}\n\nint main() {\n    int result = multiply(3, 4);\n    cout << \"Result: \" << result << endl;\n    return 0;\n}\n```\nA) Result: 12\nB) Compiler Error\nC) Result: 7\nD) Result: 1",
          options: [
            "A) Result: 12",
            "B) Compiler Error",
            "C) Result: 7",
            "D) Result: 1",
          ],
          correctAnswer: "A) Result: 12",
        },
        {
          id: 12,
          question: "Which keyword is used to define the main function in C++?",
          options: [
            "A) void",
            "B) main",
            "C) int",
            "D) start",
          ],
          correctAnswer: "C) int",
        },
        {
          id: 13,
          question: "What will happen if you don't include a function prototype in your C++ program?",
          options: [
            "A) The program will not compile",
            "B) The program will execute with a warning",
            "C) The program will execute without any issues",
            "D) The program will prompt for user input",
          ],
          correctAnswer: "A) The program will not compile",
        },
        {
          id: 14,
          question: "In C++, can you have multiple functions with the same name but different parameter lists?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 15,
          question: "What is the return type of the main function in C++?",
          options: [
            "A) int",
            "B) void",
            "C) char",
            "D) float",
          ],
          correctAnswer: "A) int",
        },
        {
          id: 16,
          question: "Which of the following is true about function prototypes?",
          options: [
            "A) They provide information about the function's name, return type, and parameters",
            "B) They contain the function's implementation",
            "C) They are optional in C++",
            "D) They are written after the main function",
          ],
          correctAnswer: "A) They provide information about the function's name, return type, and parameters",
        },
        {
          id: 17,
          question: "What is the purpose of including the <iostream> header file in a C++ program?",
          options: [
            "A) For mathematical operations",
            "B) For input and output operations",
            "C) For defining classes",
            "D) For declaring variables",
          ],
          correctAnswer: "B) For input and output operations",
        },
        {
          id: 18,
          question: "In C++, which keyword is used to declare a variable?",
          options: [
            "A) var",
            "B) int",
            "C) declare",
            "D) let",
          ],
          correctAnswer: "B) int",
        },
        {
          id: 19,
          question: "What is the syntax for defining a function prototype in C++?",
          options: [
            "A) int add(int a, int b);",
            "B) add(int a, int b);",
            "C) int add(int, int);",
            "D) add(int, int)",
          ],
          correctAnswer: "A) int add(int a, int b);",
        },
        {
          id: 20,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\ninline int square(int x) {\n    return x * x;\n}\n\nint main() {\n    int result = square(5);\n    cout << \"Result: \" << result << endl;\n    return 0;\n}\n```\nA) Result: 25\nB) Result: 10\nC) Compiler Error\nD) Result: 5",
          options: [
            "A) Result: 25",
            "B) Result: 10",
            "C) Compiler Error",
            "D) Result: 5",
          ],
          correctAnswer: "A) Result: 25",
        },
        {
          id: 21,
          question: "In C++, can you define a function inside another function?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 22,
          question: "What is the purpose of the return statement in a C++ function?",
          options: [
            "A) To specify the function's name",
            "B) To end the function's execution and return a value",
            "C) To declare a variable",
            "D) To define a loop",
          ],
          correctAnswer: "B) To end the function's execution and return a value",
        },
        {
          id: 23,
          question: "Which keyword is used to indicate that a function will not return a value in C++?",
          options: [
            "A) void",
            "B) return",
            "C) null",
            "D) none",
          ],
          correctAnswer: "A) void",
        },
        {
          id: 24,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\ninline int increment(int& x) {\n    return x++;\n}\n\nint main() {\n    int num = 5;\n    int result = increment(num);\n    cout << \"Result: \" << result << endl;\n    return 0;\n}\n```\nA) Result: 5\nB) Result: 6\nC) Result: 7\nD) Compiler Error",
          options: [
            "A) Result: 5",
            "B) Result: 6",
            "C) Result: 7",
            "D) Compiler Error",
          ],
          correctAnswer: "A) Result: 5",
        },
        {
          id: 25,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\ninline int sum(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    int x = 5;\n    int y = 3;\n    int result = sum(x, y);\n    cout << \"Result: \" << result << endl;\n    return 0;\n}\n```\nA) Result: 8\nB) Result: 15\nC) Compiler Error\nD) Result: 53",
          options: [
            "A) Result: 8",
            "B) Result: 15",
            "C) Compiler Error",
            "D) Result: 53",
          ],
          correctAnswer: "A) Result: 8",
        },
        {
          id: 26,
          question: "Which of the following is a valid way to define an inline function outside of a class in C++?",
          options: [
            "A) inline void myFunction() { ... }",
            "B) void inline myFunction() { ... }",
            "C) void myFunction() inline { ... }",
            "D) inline void function myFunction() { ... }",
          ],
          correctAnswer: "A) inline void myFunction() { ... }",
        },
        {
          id: 27,
          question: "In C++, what is the purpose of the #include directive?",
          options: [
            "A) To include a library or header file",
            "B) To define a function",
            "C) To declare a variable",
            "D) To create a loop",
          ],
          correctAnswer: "A) To include a library or header file",
        },
        {
          id: 28,
          question: "Which of the following is a correct way to declare a variable in C++?",
          options: [
            "A) int x;",
            "B) x = int;",
            "C) x int;",
            "D) declare x;",
          ],
          correctAnswer: "A) int x;",
        },
        {
          id: 29,
          question: "What is the purpose of using namespace in a C++ program?",
          options: [
            "A) To declare a variable",
            "B) To define a class",
            "C) To specify the scope of identifiers",
            "D) To create loops",
          ],
          correctAnswer: "C) To specify the scope of identifiers",
        },
        {
          id: 30,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\ninline int max(int a, int b) {\n    return (a > b) ? a : b;\n}\n\nint main() {\n    int x = 8, y = 12;\n    int result = max(x, y);\n    cout << \"Result: \" << result << endl;\n    return 0;\n}\n```\nA) Result: 12\nB) Result: 8\nC) Result: 20\nD) Compiler Error",
          options: [
            "A) Result: 12",
            "B) Result: 8",
            "C) Result: 20",
            "D) Compiler Error",
          ],
          correctAnswer: "A) Result: 12",
        },
      ],


      "3.2": [
        {
          id: 1,
          question: "What is the purpose of using call by reference in a function?",
          options: [
            "A) To pass the actual value of a variable",
            "B) To pass the memory address of a variable",
            "C) To create a copy of a variable",
            "D) To return a value from a function",
          ],
          correctAnswer: "B) To pass the memory address of a variable",
        },
        {
          id: 2,
          question: "In C++, how is a function parameter passed by reference indicated in the function signature?",
          options: [
            "A) Using an ampersand (&) symbol before the parameter name",
            "B) Using an asterisk (*) symbol before the parameter name",
            "C) Using square brackets ([ ]) around the parameter name",
            "D) Using a dollar sign ($) before the parameter name",
          ],
          correctAnswer: "A) Using an ampersand (&) symbol before the parameter name",
        },
        {
          id: 3,
          question: "Which of the following statements about return by reference in C++ is true?",
          options: [
            "A) It allows a function to return multiple values",
            "B) It is not possible in C++",
            "C) It is used to pass a variable by reference to a function",
            "D) It is used to pass a value by reference to a function",
          ],
          correctAnswer: "A) It allows a function to return multiple values",
        },
        {
          id: 4,
          question: "Consider the following function prototype:\nint& increment(int& x);\nWhat does this function return?",
          options: [
            "A) The incremented value of x",
            "B) The memory address of x",
            "C) An error, as it violates return by reference",
            "D) A copy of x",
          ],
          correctAnswer: "A) The incremented value of x",
        },
        {
          id: 5,
          question: "When defining a function with default arguments, in which order should the default arguments be placed in the function signature?",
          options: [
            "A) From left to right",
            "B) From right to left",
            "C) It doesn't matter, as long as they are all provided",
            "D) Default arguments cannot be used in C++",
          ],
          correctAnswer: "A) From left to right",
        },
        {
          id: 6,
          question: "In C++, can you have both default arguments and non-default arguments in the same function?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if the function has a return type of void",
            "D) Only if the function is defined as a global function",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 7,
          question: "Which of the following is an example of function overloading?",
          options: [
            "A) Having two functions with the same name and same parameter list",
            "B) Having two functions with the same name and different parameter lists",
            "C) Having two functions with the same name and no parameter list",
            "D) Having two functions with different names and different parameter lists",
          ],
          correctAnswer: "B) Having two functions with the same name and different parameter lists",
        },
        {
          id: 8,
          question: "In function overloading, can the return type of the functions be different?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if the return type is void",
            "D) Only if the functions have the same parameter list",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 9,
          question: "Consider the following function prototypes:\nint add(int a, int b);\ndouble add(double a, double b);\nWhat is this an example of?",
          options: [
            "A) Function overloading",
            "B) Function overriding",
            "C) Function overwriting",
            "D) Function overloading and overriding",
          ],
          correctAnswer: "A) Function overloading",
        },
        {
          id: 10,
          question: "What is the significance of using function overloading in C++?",
          options: [
            "A) It allows a function to return multiple values",
            "B) It allows a function to accept different types of arguments",
            "C) It allows a function to have multiple return statements",
            "D) It allows a function to be called from different parts of the program",
          ],
          correctAnswer: "B) It allows a function to accept different types of arguments",
        },
        {
          id: 11,
          question: "Which of the following is an example of a function with default arguments?",
          options: [
            "A) int calculate(int a, int b = 0);",
            "B) int calculate(int a = 0, int b);",
            "C) int calculate(int a, int b);",
            "D) int calculate(int a = 0, int b = 0);",
          ],
          correctAnswer: "D) int calculate(int a = 0, int b = 0);",
        },
        {
          id: 12,
          question: "What will be the output of the following code snippet?\nint increment(int& x) {\n  return x++;\n}\n\nint main() {\n  int num = 5;\n  int result = increment(num);\n  cout << \"Result: \" << result << \", Num: \" << num << endl;\n  return 0;\n}",
          options: [
            "A) Result: 5, Num: 6",
            "B) Result: 6, Num: 5",
            "C) Result: 6, Num: 6",
            "D) Compilation error",
          ],
          correctAnswer: "B) Result: 6, Num: 5",
        },
        {
          id: 13,
          question: "Which of the following is true about function overloading in C++?",
          options: [
            "A) Two functions can have the same name and same parameter list",
            "B) Two functions can have the same name and different return types",
            "C) Two functions can have the same name and different parameter lists as long as the return type is different",
            "D) Two functions cannot have the same name, regardless of their parameter lists or return types",
          ],
          correctAnswer: "A) Two functions can have the same name and same parameter list",
        },
        {
          id: 14,
          question: "Which of the following is an example of a function returning a reference?",
          options: [
            "A) int& doubleValue(int x) { return x * 2; }",
            "B) int& doubleValue(int& x) { return x * 2; }",
            "C) int doubleValue(int x) { return x * 2; }",
            "D) int doubleValue(int& x) { return x * 2; }",
          ],
          correctAnswer: "B) int& doubleValue(int& x) { return x * 2; }",
        },
        {
          id: 15,
          question: "Consider the following function prototype:\nint sum(int a, int b = 0, int c = 0);\nHow many arguments can be passed to this function?",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) Any number of arguments",
          ],
          correctAnswer: "C) 3",
        },
        {
          id: 16,
          question: "Which of the following statements about default arguments is true?",
          options: [
            "A) They must be specified in the function definition, not the declaration",
            "B) They can only be used with non-void functions",
            "C) They must be of the same data type",
            "D) They must be placed at the end of the parameter list",
          ],
          correctAnswer: "D) They must be placed at the end of the parameter list",
        },
        {
          id: 17,
          question: "What is the output of the following code snippet?\nint add(int a, int b) {\n  return a + b;\n}\ndouble add(double a, double b) {\n  return a + b;\n}\n\nint main() {\n  cout << add(2, 3) << endl;\n  cout << add(2.5, 3.5) << endl;\n  return 0;\n}",
          options: [
            "A) 5 \\n 6.0",
            "B) 5.0 \\n 6",
            "C) 5 \\n 6",
            "D) Compilation error",
          ],
          correctAnswer: "B) 5.0 \\n 6",
        },
        {
          id: 18,
          question: "In function overloading, is it possible to have two functions with the same name and parameter list but different return types?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if the functions are defined in different files",
            "D) Only if the functions have default arguments",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 19,
          question: "Consider the following function prototypes:\nvoid printValue(int x);\nvoid printValue(double x);\nIs this an example of function overloading?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if the functions have default arguments",
            "D) Only if the functions return a value",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 20,
          question: "What is the output of the following code snippet?\nint square(int& x) {\n  return x * x;\n}\n\nint square(const int& x) {\n  return x * x;\n}\n\nint main() {\n  int num1 = 5;\n  const int num2 = 3;\n  cout << square(num1) << endl;\n  cout << square(num2) << endl;\n  return 0;\n}",
          options: [
            "A) 25 \\n 9",
            "B) 25 \\n Compilation error",
            "C) Compilation error \\n 9",
            "D) Compilation error \\n Compilation error",
          ],
          correctAnswer: "A) 25 \\n 9",
        },
        {
          id: 21,
          question: "Which of the following statements about return by reference is true?",
          options: [
            "A) It allows a function to return multiple values",
            "B) It is not possible in C++",
            "C) It is used to pass a variable by reference to a function",
            "D) It is used to pass a value by reference to a function",
          ],
          correctAnswer: "A) It allows a function to return multiple values",
        },
        {
          id: 22,
          question: "Consider the following function prototype:\nint& increment(int& x);\nWhat does this function return?",
          options: [
            "A) The incremented value of x",
            "B) The memory address of x",
            "C) An error, as it violates return by reference",
            "D) A copy of x",
          ],
          correctAnswer: "A) The incremented value of x",
        },
        {
          id: 23,
          question: "What is the purpose of using call by reference in a function?",
          options: [
            "A) To pass the actual value of a variable",
            "B) To pass the memory address of a variable",
            "C) To create a copy of a variable",
            "D) To return a value from a function",
          ],
          correctAnswer: "B) To pass the memory address of a variable",
        },
        {
          id: 24,
          question: "In C++, how is a function parameter passed by reference indicated in the function signature?",
          options: [
            "A) Using an ampersand (&) symbol before the parameter name",
            "B) Using an asterisk (*) symbol before the parameter name",
            "C) Using square brackets ([ ]) around the parameter name",
            "D) Using a dollar sign ($) before the parameter name",
          ],
          correctAnswer: "A) Using an ampersand (&) symbol before the parameter name",
        },
        {
          id: 25,
          question: "Which of the following statements about return by reference in C++ is true?",
          options: [
            "A) It allows a function to return multiple values",
            "B) It is not possible in C++",
            "C) It is used to pass a variable by reference to a function",
            "D) It is used to pass a value by reference to a function",
          ],
          correctAnswer: "A) It allows a function to return multiple values",
        },
        {
          id: 26,
          question: "Consider the following function prototype:\nint& increment(int& x);\nWhat does this function return?",
          options: [
            "A) The incremented value of x",
            "B) The memory address of x",
            "C) An error, as it violates return by reference",
            "D) A copy of x",
          ],
          correctAnswer: "A) The incremented value of x",
        },
        {
          id: 27,
          question: "When defining a function with default arguments, in which order should the default arguments be placed in the function signature?",
          options: [
            "A) From left to right",
            "B) From right to left",
            "C) It doesn't matter, as long as they are all provided",
            "D) Default arguments cannot be used in C++",
          ],
          correctAnswer: "A) From left to right",
        },
        {
          id: 28,
          question: "In C++, can you have both default arguments and non-default arguments in the same function?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if the function has a return type of void",
            "D) Only if the function is defined as a global function",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 29,
          question: "Which of the following is an example of function overloading?",
          options: [
            "A) Having two functions with the same name and same parameter list",
            "B) Having two functions with the same name and different parameter lists",
            "C) Having two functions with the same name and no parameter list",
            "D) Having two functions with different names and different parameter lists",
          ],
          correctAnswer: "B) Having two functions with the same name and different parameter lists",
        },
        {
          id: 30,
          question: "In function overloading, can the return type of the functions be different?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if the return type is void",
            "D) Only if the functions have the same parameter list",
          ],
          correctAnswer: "A) Yes",
        },
    
      ],
    },


    // chapter 3 ended



    4: {
      // Chapter 4
      "4.1": [
        
        {
          id: 1,
          question: "What is a limitation of C structures compared to classes in C++?",
          options: [
            "A) They cannot have member functions",
            "B) They cannot hold multiple data types",
            "C) They cannot be used to model real-world entities",
            "D) They cannot be used in object-oriented programming",
          ],
          correctAnswer: "A) They cannot have member functions",
        },
        {
          id: 2,
          question: "Which keyword is used to create a class in C++?",
          options: [
            "A) class",
            "B) struct",
            "C) define",
            "D) type",
          ],
          correctAnswer: "A) class",
        },
        {
          id: 3,
          question: "In C++, how do you create an object of a class?",
          options: [
            "A) class Object = new class();",
            "B) class Object();",
            "C) class Object;",
            "D) class Object = class();",
          ],
          correctAnswer: "C) class Object;",
        },
        {
          id: 4,
          question: "What is the default visibility modifier for class members in C++?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) static",
          ],
          correctAnswer: "B) private",
        },
        {
          id: 5,
          question: "Which visibility modifier allows class members to be accessed by derived classes?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) static",
          ],
          correctAnswer: "C) protected",
        },
        {
          id: 6,
          question: "Which keyword is used to access a member of a class using a pointer to an object?",
          options: [
            "A) ->",
            "B) ::",
            "C) .",
            "D) >",
          ],
          correctAnswer: "A) ->",
        },
        {
          id: 7,
          question: "What is the difference between a structure and a class in C++?",
          options: [
            "A) Classes can have member functions, structures cannot.",
            "B) Structures can have private members, classes cannot.",
            "C) Classes are used for procedural programming, structures for object-oriented programming.",
            "D) There is no difference, they can be used interchangeably.",
          ],
          correctAnswer: "A) Classes can have member functions, structures cannot.",
        },
        {
          id: 8,
          question: "Which keyword is used to define a private member in a class in C++?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) secret",
          ],
          correctAnswer: "B) private",
        },
        {
          id: 9,
          question: "In C++, what is the purpose of a constructor in a class?",
          options: [
            "A) To create objects of the class",
            "B) To initialize the data members of an object",
            "C) To allocate memory for the class",
            "D) To define member functions of the class",
          ],
          correctAnswer: "B) To initialize the data members of an object",
        },
        {
          id: 10,
          question: "Which of the following is an extension to structures in C++?",
          options: [
            "A) Inheritance",
            "B) Pointers",
            "C) Constructors",
            "D) Functions",
          ],
          correctAnswer: "A) Inheritance",
        },
        {
          id: 11,
          question: "What is the output of the following code snippet?\n\n```cpp\nstruct Point {\n    int x;\n    int y;\n};\n\nPoint p = {1, 2};\ncout << p.x << \", \" << p.y;",
          options: [
            "A) 1, 2",
            "B) 2, 1",
            "C) Error: 'cout' was not declared",
            "D) Error: 'Point' was not declared",
          ],
          correctAnswer: "A) 1, 2",
        },
        {
          id: 12,
          question: "Which keyword is used to declare a member function of a class in C++?",
          options: [
            "A) method",
            "B) function",
            "C) member",
            "D) void",
          ],
          correctAnswer: "B) function",
        },
        {
          id: 13,
          question: "What is the output of the following code snippet?\n\n```cpp\nclass Rectangle {\npublic:\n    int length;\n    int width;\n};\n\nRectangle r;\nr.length = 5;\nr.width = 3;\n\ncout << \"Area: \" << r.length * r.width;",
          options: [
            "A) Area: 8",
            "B) Area: 15",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Area: 15",
        },
        {
          id: 14,
          question: "What is the purpose of a destructor in C++?",
          options: [
            "A) To deallocate memory for a class",
            "B) To destroy objects of a class",
            "C) To define member functions of the class",
            "D) To initialize data members of an object",
          ],
          correctAnswer: "A) To deallocate memory for a class",
        },
        {
          id: 15,
          question: "Which keyword is used to define a derived class in C++?",
          options: [
            "A) class",
            "B) extends",
            "C) inherit",
            "D) : public",
          ],
          correctAnswer: "D) : public",
        },
        {
          id: 16,
          question: "What is the output of the following code snippet?\n\n```cpp\nclass Base {\npublic:\n    int x;\n    Base(int val) : x(val) {}\n};\n\nclass Derived : public Base {\npublic:\n    int y;\n    Derived(int val) : Base(val), y(val) {}\n};\n\nDerived d(10);\ncout << d.x << \", \" << d.y;",
          options: [
            "A) 10, 10",
            "B) 0, 0",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) 10, 10",
        },
        {
          id: 17,
          question: "Which visibility modifier restricts access to class members to the same class only?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) restricted",
          ],
          correctAnswer: "B) private",
        },
        {
          id: 18,
          question: "What is the purpose of the 'this' pointer in C++?",
          options: [
            "A) It is used to refer to the current instance of the class",
            "B) It is a keyword for creating new objects",
            "C) It is a pointer to the base class",
            "D) It is used to refer to a global variable",
          ],
          correctAnswer: "A) It is used to refer to the current instance of the class",
        },
        {
          id: 19,
          question: "What is the correct way to define a member function outside of a class in C++?",
          options: [
            "A) void MyClass::myMethod() {}",
            "B) void MyClass.myMethod() {}",
            "C) void MyClass::myMethod {}",
            "D) void myMethod() {}",
          ],
          correctAnswer: "A) void MyClass::myMethod() {}",
        },
        {
          id: 20,
          question: "Which keyword is used to make a class member accessible without the need for an instance of the class?",
          options: [
            "A) public",
            "B) static",
            "C) instance",
            "D) shared",
          ],
          correctAnswer: "B) static",
        },
        {
          id: 21,
          question: "What is the output of the following code snippet?\n\n```cpp\nclass MyClass {\nprivate:\n    int x;\npublic:\n    void setX(int val) {\n        x = val;\n    }\n    int getX() {\n        return x;\n    }\n};\n\nint main() {\n    MyClass obj;\n    obj.setX(5);\n    cout << obj.getX();\n    return 0;\n}",
          options: [
            "A) 5",
            "B) Compilation Error",
            "C) 0",
            "D) Runtime Error",
          ],
          correctAnswer: "A) 5",
        },
        {
          id: 22,
          question: "In C++, can a class inherit from multiple base classes simultaneously?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 23,
          question: "What is the correct syntax to initialize a constant member variable in a class?",
          options: [
            "A) const int x = 10;",
            "B) const int MyClass::x = 10;",
            "C) const int x;",
            "D) int const x = 10;",
          ],
          correctAnswer: "B) const int MyClass::x = 10;",
        },
        {
          id: 24,
          question: "Which of the following is true about constructors in a class?",
          options: [
            "A) They have a return type",
            "B) They can be overloaded",
            "C) They can be inherited",
            "D) They can be static",
          ],
          correctAnswer: "B) They can be overloaded",
        },
        {
          id: 25,
          question: "What is the output of the following code snippet?\n\n```cpp\nclass A {\npublic:\n    A() { cout << \"A\"; }\n};\n\nclass B : public A {\npublic:\n    B() { cout << \"B\"; }\n};\n\nint main() {\n    B obj;\n    return 0;\n}",
          options: [
            "A) AB",
            "B) BA",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) AB",
        },
        {
          id: 26,
          question: "Which keyword is used to prevent a class from being inherited in C++?",
          options: [
            "A) private",
            "B) final",
            "C) sealed",
            "D) restrict",
          ],
          correctAnswer: "B) final",
        },
        {
          id: 27,
          question: "What is the output of the following code snippet?\n\n```cpp\nclass Parent {\npublic:\n    Parent() { cout << \"P\"; }\n};\n\nclass Child : public Parent {\npublic:\n    Child() { cout << \"C\"; }\n};\n\nint main() {\n    Parent p;\n    Child c;\n    return 0;\n}",
          options: [
            "A) PCC",
            "B) PC",
            "C) CPPC",
            "D) Compilation Error",
          ],
          correctAnswer: "A) PCC",
        },
        {
          id: 28,
          question: "In C++, what is a default constructor?",
          options: [
            "A) A constructor that takes no arguments",
            "B) A constructor with default parameter values",
            "C) A constructor provided by the compiler if none is defined",
            "D) A constructor that initializes all members to their default values",
          ],
          correctAnswer: "C) A constructor provided by the compiler if none is defined",
        },
        {
          id: 29,
          question: "What is the output of the following code snippet?\n\n```cpp\nclass Test {\npublic:\n    static int x;\n    Test() { x++; }\n};\n\nint Test::x = 0;\n\nint main() {\n    Test t1, t2, t3;\n    cout << Test::x;\n    return 0;\n}",
          options: [
            "A) 3",
            "B) 0",
            "C) 1",
            "D) Compilation Error",
          ],
          correctAnswer: "A) 3",
        },
        {
          id: 30,
          question: "Which of the following statements is true about encapsulation in object-oriented programming?",
          options: [
            "A) It refers to the process of inheriting from a base class",
            "B) It is the bundling of data and the methods that operate on that data",
            "C) It allows a class to have multiple functions with the same name",
            "D) It is the process of creating objects from a class",
          ],
          correctAnswer: "B) It is the bundling of data and the methods that operate on that data",
        },
      ],


      "4.2": [
        {
          id: 1,
          question: "Where are member functions typically defined in a C++ class?",
          options: [
            "A) Inside the class definition",
            "B) Outside the class definition",
            "C) Both a and b",
            "D) None of the above",
          ],
          correctAnswer: "A) Inside the class definition",
        },
        {
          id: 2,
          question: "What is the advantage of defining member functions inside the class definition?",
          options: [
            "A) It improves code organization",
            "B) It allows for better encapsulation",
            "C) It reduces the need for separate function declarations",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
       
        {
          id: 3,
          question: "When would you define a member function outside the class definition?",
          options: [
            "A) When the function is too long",
            "B) When the function requires access to private members of the class",
            "C) When the function is rarely used",
            "D) None of the above",
          ],
          correctAnswer: "B) When the function requires access to private members of the class",
        },
        {
          id: 4,
          question: "Which keyword is used to make an outside function inline in C++?",
          options: [
            "A) inline",
            "B) extern",
            "C) inlinefunc",
            "D) None of the above",
          ],
          correctAnswer: "A) inline",
        },
        {
          id: 5,
          question: "What is the purpose of making a function inline?",
          options: [
            "A) To reduce function call overhead",
            "B) To increase code modularity",
            "C) To improve code readability",
            "D) None of the above",
          ],
          correctAnswer: "A) To reduce function call overhead",
        },
        {
          id: 6,
          question: "In which scenario is it recommended to use inline functions?",
          options: [
            "A) For complex functions with many statements",
            "B) For small, frequently called functions",
            "C) For functions with recursion",
            "D) None of the above",
          ],
          correctAnswer: "B) For small, frequently called functions",
        },
        {
          id: 7,
          question: "Which of the following is a potential drawback of using inline functions?",
          options: [
            "A) Increased code size",
            "B) Slower execution speed",
            "C) Reduced readability",
            "D) None of the above",
          ],
          correctAnswer: "A) Increased code size",
        },
        {
          id: 8,
          question: "What happens if a function is declared inline, but the compiler chooses not to inline it?",
          options: [
            "A) The compiler will produce an error",
            "B) The function will be automatically inlined",
            "C) The function will be treated as a normal function",
            "D) None of the above",
          ],
          correctAnswer: "C) The function will be treated as a normal function",
        },
        {
          id: 9,
          question: "Consider the following class definition:\nclass MyClass {\npublic:\n    void myFunction() {\n        // Function code here\n    }\n};\nIs myFunction defined inside or outside the class definition?",
          options: [
            "A) Inside",
            "B) Outside",
          ],
          correctAnswer: "A) Inside",
        },
        {
          id: 10,
          question: "Which of the following is a valid way to define an inline function outside the class definition?",
          options: [
            "A) inline void MyClass::myFunction() { /* Function code here */ }",
            "B) void inline MyClass::myFunction() { /* Function code here */ }",
            "C) void MyClass::inline myFunction() { /* Function code here */ }",
            "D) void MyClass::myFunction() inline { /* Function code here */ }",
          ],
          correctAnswer: "A) inline void MyClass::myFunction() { /* Function code here */ }",
        },
        {
          id: 11,
          question: "In a real-world scenario, when might you choose not to make a function inline even if it is small and frequently called?",
          options: [
            "A) When the function contains a loop",
            "B) When the function is part of a library",
            "C) When the function has multiple return statements",
            "D) None of the above",
          ],
          correctAnswer: "B) When the function is part of a library",
        },
        {
          id: 12,
          question: "Which of the following is a potential benefit of defining member functions inside the class definition?",
          options: [
            "A) Improved code reusability",
            "B) Reduced compilation time",
            "C) Easier debugging",
            "D) None of the above",
          ],
          correctAnswer: "A) Improved code reusability",
        },
        {
          id: 13,
          question: "When is it necessary to provide a separate function declaration in addition to the inline definition?",
          options: [
            "A) When the function is recursive",
            "B) When the function is part of a template class",
            "C) When the function is used before its definition in the code",
            "D) None of the above",
          ],
          correctAnswer: "C) When the function is used before its definition in the code",
        },
        {
          id: 14,
          question: "Consider the following code:\nclass MyClass {\npublic:\n    void myFunction();\n};\ninline void MyClass::myFunction() {\n    // Function code here\n}\nIs myFunction defined inside or outside the class definition?",
          options: [
            "A) Inside",
            "B) Outside",
          ],
          correctAnswer: "B) Outside",
        },
        {
          id: 15,
          question: "In which scenario is it recommended to use an external function (outside the class definition) instead of an inline function?",
          options: [
            "A) When the function is large and complex",
            "B) When the function is used in multiple classes",
            "C) When the function needs access to private class members",
            "D) All of the above",
          ],
          correctAnswer: "C) When the function needs access to private class members",
        },
        {
          id: 16,
          question: "Consider the following code:\nclass MyClass {\npublic:\n    void myFunction();\n};\ninline void MyClass::myFunction() {\n    // Function code here\n}\nWhat is the purpose of the separate function declaration?",
          options: [
            "A) To allow for function overloading",
            "B) To provide a prototype for the function",
            "C) To improve code readability",
            "D) None of the above",
          ],
          correctAnswer: "B) To provide a prototype for the function",
        },
        {
          id: 17,
          question: "When might defining a function outside the class definition be more appropriate than an inline function?",
          options: [
            "A) When the function has a complex implementation",
            "B) When the function is used in a single class only",
            "C) When the function is rarely called",
            "D) None of the above",
          ],
          correctAnswer: "A) When the function has a complex implementation",
        },
        {
          id: 18,
          question: "Which of the following is a potential disadvantage of using inline functions?",
          options: [
            "A) Increased code size",
            "B) Slower execution speed",
            "C) Harder debugging",
            "D) None of the above",
          ],
          correctAnswer: "A) Increased code size",
        },
        {
          id: 19,
          question: "Consider the following class definition:\nclass MyClass {\npublic:\n    void myFunction() {\n        // Function code here\n    }\n};\nCan myFunction be called from an external source?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 20,
          question: "What is the purpose of making an external function inline?",
          options: [
            "A) To improve code organization",
            "B) To reduce function call overhead",
            "C) To allow access to private class members",
            "D) None of the above",
          ],
          correctAnswer: "B) To reduce function call overhead",
        },
        {
          id: 21,
          question: "In which scenario might an external function not be inlined by the compiler, even if marked as such?",
          options: [
            "A) When it contains a loop",
            "B) When it is part of a library",
            "C) When it is used only once",
            "D) None of the above",
          ],
          correctAnswer: "B) When it is part of a library",
        },
        {
          id: 22,
          question: "Consider the following code:\nclass MyClass {\npublic:\n    void myFunction() {\n        // Function code here\n    }\n};\nIs myFunction defined inside or outside the class definition?",
          options: [
            "A) Inside",
            "B) Outside",
          ],
          correctAnswer: "A) Inside",
        },
        {
          id: 23,
          question: "When might you choose not to define a member function inside the class definition?",
          options: [
            "A) When the function is short and simple",
            "B) When the function is used in multiple classes",
            "C) When the function requires access to private class members",
            "D) None of the above",
          ],
          correctAnswer: "C) When the function requires access to private class members",
        },
        {
          id: 24,
          question: "Which keyword is used to define a function outside the class definition?",
          options: [
            "A) class",
            "B) function",
            "C) void",
            "D) None of the above",
          ],
          correctAnswer: "D) None of the above",
        },
        {
          id: 25,
          question: "In a real-world scenario, when might you choose not to make a function inline even if it is small and frequently called?",
          options: [
            "A) When the function contains a loop",
            "B) When the function is part of a library",
            "C) When the function has multiple return statements",
            "D) None of the above",
          ],
          correctAnswer: "B) When the function is part of a library",
        },
        {
          id: 26,
          question: "What is the primary purpose of making a function inline?",
          options: [
            "A) To reduce code size",
            "B) To improve runtime performance",
            "C) To eliminate the need for separate function declarations",
            "D) None of the above",
          ],
          correctAnswer: "B) To improve runtime performance",
        },
        {
          id: 27,
          question: "Consider the following class definition:\nclass MyClass {\npublic:\n    void myFunction();\n};\ninline void MyClass::myFunction() {\n    // Function code here\n}\nIs myFunction defined inside or outside the class definition?",
          options: [
            "A) Inside",
            "B) Outside",
          ],
          correctAnswer: "B) Outside",
        },
        {
          id: 28,
          question: "In which scenario is it recommended to use an external function (outside the class definition) instead of an inline function?",
          options: [
            "A) When the function is large and complex",
            "B) When the function is used in multiple classes",
            "C) When the function needs access to private class members",
            "D) All of the above",
          ],
          correctAnswer: "C) When the function needs access to private class members",
        },
        {
          id: 29,
          question: "When might defining a function outside the class definition be more appropriate than an inline function?",
          options: [
            "A) When the function has a complex implementation",
            "B) When the function is used in a single class only",
            "C) When the function is rarely called",
            "D) None of the above",
          ],
          correctAnswer: "A) When the function has a complex implementation",
        },
        {
          id: 30,
          question: "Which of the following is a potential disadvantage of using inline functions?",
          options: [
            "A) Increased code size",
            "B) Slower execution speed",
            "C) Harder debugging",
            "D) None of the above",
          ],
          correctAnswer: "A) Increased code size",
        },
        // Add more questions for subchapter 1.1 as needed
      ],

      // Chapter 4
      "4.3": [
        {
          id: 1,
          question: "Which of the following best describes nesting of member functions in C++?",
          options: [
            "A) Defining a member function within another member function",
            "B) Defining a class within another class",
            "C) Defining a function within a loop",
            "D) Defining a function within a conditional statement",
          ],
          correctAnswer: "A) Defining a member function within another member function",
        },
        {
          id: 2,
          question: "What is the purpose of using private member functions in a class?",
          options: [
            "A) To restrict access to certain functionality within the class",
            "B) To allow access to all class members",
            "C) To make the function available to other classes",
            "D) To hide the implementation details of the class",
          ],
          correctAnswer: "A) To restrict access to certain functionality within the class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "Which keyword is used to declare static data members in C++?",
          options: [
            "A) static",
            "B) const",
            "C) static_data",
            "D) int",
          ],
          correctAnswer: "A) static",
        },
        {
          id: 4,
          question: "Which of the following statements about static member functions is true?",
          options: [
            "A) They can access only static data members of the class",
            "B) They can access only non-static data members of the class",
            "C) They can access both static and non-static data members of the class",
            "D) They cannot access any data members of the class",
          ],
          correctAnswer: "A) They can access only static data members of the class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "Consider the following C++ code:\n\n```cpp\nclass MyClass {\nprivate:\n    int x;\npublic:\n    static int y;\n    void func() {\n        x = 10;\n        y = 20;\n    }\n};\nint MyClass::y = 0;\n```\nWhat will happen if we try to access x directly in the main function?",
          options: [
            "A) It will result in a compilation error",
            "B) It will change the value of x",
            "C) It will change the value of y",
            "D) It will result in a runtime error",
          ],
          correctAnswer: "A) It will result in a compilation error",
        },
        {
          id: 6,
          question: "Which of the following is an example of nesting of member functions?",
          options: [
            "A) Defining a class within another class",
            "B) Defining a member function within another member function",
            "C) Defining a function within a loop",
            "D) Defining a function within a conditional statement",
          ],
          correctAnswer: "B) Defining a member function within another member function",
        },
        {
          id: 7,
          question: "What is the output of the following C++ code?",
          code: true,
          codeSnippet: "class Example {\nprivate:\n    int x;\npublic:\n    static int y;\n    void func1() {\n        x = 10;\n        y = 20;\n    }\n    void func2() {\n        x = 30;\n        y = 40;\n    }\n};\nint Example::y = 0;\n\nint main() {\n    Example obj;\n    obj.func1();\n    obj.func2();\n    cout << Example::y;\n    return 0;\n}",
          options: [
            "A) 0",
            "B) 20",
            "C) 40",
            "D) Compilation error",
          ],
          correctAnswer: "C) 40",
        },
        {
          id: 8,
          question: "In C++, can a private member function be accessed outside the class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 9,
          question: "Which of the following is true about static data members?",
          options: [
            "A) They are initialized only once for the entire class",
            "B) They are initialized every time a new object of the class is created",
            "C) They cannot be accessed by static member functions",
            "D) They cannot be declared as private",
          ],
          correctAnswer: "A) They are initialized only once for the entire class",
        },
        {
          id: 10,
          question: "Consider the following C++ code:\n\n```cpp\nclass Example {\nprivate:\n    static int x;\npublic:\n    static int y;\n    void func() {\n        x = 10;\n        y = 20;\n    }\n};\nint Example::x = 0;\nint Example::y = 0;\n```\nWhat is the output of the following code?\n\n```cpp\nint main() {\n    Example::x = 30;\n    Example obj;\n    obj.func();\n    cout << Example::x << \" \" << Example::y;\n    return 0;\n}",
          options: [
            "A) 10 20",
            "B) 30 20",
            "C) 30 0",
            "D) Compilation error",
          ],
          correctAnswer: "C) 30 0",
        },
        {
          id: 11,
          question: "Which of the following is not a valid way to access a private member function of a class?",
          options: [
            "A) Using an object of the class",
            "B) Using a pointer to an object of the class",
            "C) Using the friend keyword",
            "D) Using the scope resolution operator (::)",
          ],
          correctAnswer: "D) Using the scope resolution operator (::)",
        },
        {
          id: 12,
          question: "What is the purpose of using static member functions in a class?",
          options: [
            "A) They can access only static data members of the class",
            "B) They can access only non-static data members of the class",
            "C) They do not have access to any data members of the class",
            "D) They can be used to perform operations that do not depend on any specific object of the class",
          ],
          correctAnswer: "D) They can be used to perform operations that do not depend on any specific object of the class",
        },
        {
          id: 13,
          question: "Consider the following C++ code:\n\n```cpp\nclass Example {\nprivate:\n    static int x;\npublic:\n    static int y;\n    void func() {\n        x = 10;\n        y = 20;\n    }\n};\nint Example::x = 0;\nint Example::y = 0;\n```\nWhat is the output of the following code?\n\n```cpp\nint main() {\n    Example obj1, obj2;\n    obj1.func();\n    obj2.func();\n    cout << Example::x << \" \" << Example::y;\n    return 0;\n}",
          options: [
            "A) 10 20",
            "B) 0 20",
            "C) 10 0",
            "D) Compilation error",
          ],
          correctAnswer: "C) 10 0",
        },
        {
          id: 14,
          question: "Which of the following statements about static member functions is true?",
          options: [
            "A) They cannot access any data members of the class",
            "B) They can access only static data members of the class",
            "C) They can access only non-static data members of the class",
            "D) They cannot be declared in a class",
          ],
          correctAnswer: "B) They can access only static data members of the class",
        },
        {
          id: 15,
          question: "In C++, can a static data member be initialized inside the class definition?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 16,
          question: "What is the purpose of using nesting of member functions in C++?",
          options: [
            "A) To define a class within another class",
            "B) To define a member function within another member function",
            "C) To define a function within a loop",
            "D) To define a function within a conditional statement",
          ],
          correctAnswer: "B) To define a member function within another member function",
        },
        {
          id: 17,
          question: "Consider the following C++ code:\n\n```cpp\nclass Example {\nprivate:\n    static int x;\npublic:\n    static int y;\n    void func() {\n        x = 10;\n        y = 20;\n    }\n};\nint Example::x = 0;\nint Example::y = 0;\n```\nWhat is the output of the following code?\n\n```cpp\nint main() {\n    Example obj1, obj2;\n    obj1.func();\n    obj2.func();\n    cout << Example::x << \" \" << Example::y;\n    return 0;\n}",
          options: [
            "A) 10 20",
            "B) 0 20",
            "C) 10 0",
            "D) Compilation error",
          ],
          correctAnswer: "B) 0 20",
        },
        {
          id: 18,
          question: "Which of the following is not a valid way to access a private member function of a class?",
          options: [
            "A) Using an object of the class",
            "B) Using a pointer to an object of the class",
            "C) Using the friend keyword",
            "D) Using the scope resolution operator (::)",
          ],
          correctAnswer: "D) Using the scope resolution operator (::)",
        },
        {
          id: 19,
          question: "Consider the following C++ code:\n\n```cpp\nclass Example {\nprivate:\n    static int x;\npublic:\n    static int y;\n    void func() {\n        x = 10;\n        y = 20;\n    }\n};\nint Example::x = 0;\nint Example::y = 0;\n```\nWhat is the output of the following code?\n\n```cpp\nint main() {\n    Example obj;\n    obj.func();\n    cout << Example::x << \" \" << Example::y;\n    return 0;\n}",
          options: [
            "A) 10 20",
            "B) 0 20",
            "C) 10 0",
            "D) Compilation error",
          ],
          correctAnswer: "A) 10 20",
        },
        {
          id: 20,
          question: "In C++, can a private member function be accessed by other functions within the same class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 21,
          question: "What happens if we try to access a static data member without initializing it in C++?",
          options: [
            "A) It will result in a compilation error",
            "B) It will return a garbage value",
            "C) It will initialize it to zero automatically",
            "D) It will return an error message",
          ],
          correctAnswer: "A) It will result in a compilation error",
        },
        {
          id: 22,
          question: "Which of the following statements about static member functions is true?",
          options: [
            "A) They cannot be called using an object of the class",
            "B) They cannot be declared in a class",
            "C) They can only access non-static data members of the class",
            "D) They can be called using an object of the class",
          ],
          correctAnswer: "A) They cannot be called using an object of the class",
        },
        {
          id: 23,
          question: "In C++, can a private member function be called from a static member function of the same class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 24,
          question: "What is the output of the following C++ code?\n\n```cpp\nclass Example {\nprivate:\n    static int x;\npublic:\n    static int y;\n    void func() {\n        y = 20;\n    }\n};\nint Example::y = 0;\n```\n\n```cpp\nint main() {\n    Example obj;\n    obj.func();\n    cout << Example::y;\n    return 0;\n}\n```",
          options: [
            "A) 0",
            "B) 20",
            "C) Compilation error",
            "D) 10",
          ],
          correctAnswer: "B) 20",
        },
        {
          id: 25,
          question: "Consider the following C++ code:\n\n```cpp\nclass Example {\nprivate:\n    int x;\n    static int y;\npublic:\n    static void func() {\n        y = 20;\n    }\n};\nint Example::y = 0;\n```\nWhat is the output of the following code?\n\n```cpp\nint main() {\n    Example obj;\n    obj.func();\n    cout << Example::y;\n    return 0;\n}\n```",
          options: [
            "A) 0",
            "B) 20",
            "C) Compilation error",
            "D) 10",
          ],
          correctAnswer: "B) 20",
        },
        {
          id: 26,
          question: "In C++, can a static member function be called using an object of the class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 27,
          question: "Consider the following C++ code:\n\n```cpp\nclass Example {\nprivate:\n    int x;\n    static int y;\npublic:\n    static void func() {\n        y = 20;\n    }\n};\nint Example::y = 0;\n```\nWhat is the output of the following code?\n\n```cpp\nint main() {\n    Example obj;\n    obj.func();\n    cout << Example::y;\n    return 0;\n}\n```",
          options: [
            "A) 0",
            "B) 20",
            "C) Compilation error",
            "D) 10",
          ],
          correctAnswer: "B) 20",
        },
        {
          id: 28,
          question: "What is the output of the following C++ code?\n\n```cpp\nclass Example {\nprivate:\n    int x;\n    static int y;\npublic:\n    static void func() {\n        y = 20;\n    }\n};\nint Example::y = 0;\n\nint main() {\n    Example obj1, obj2;\n    obj1.func();\n    obj2.func();\n    cout << Example::x << \" \" << Example::y;\n    return 0;\n}",
          options: [
            "A) Compilation error",
            "B) 10 20",
            "C) 0 20",
            "D) 10 0",
          ],
          correctAnswer: "A) Compilation error",
        },
        {
          id: 29,
          question: "In C++, can a private member function be accessed by functions in other classes?",
          options: [
            "A) Yes, if it is declared as public in the class definition",
            "B) Yes, if it is declared as protected in the class definition",
            "C) No, it can only be accessed within the class where it is defined",
            "D) Yes, if it is declared as static in the class definition",
          ],
          correctAnswer: "C) No, it can only be accessed within the class where it is defined",
        },
        {
          id: 30,
          question: "What is the output of the following C++ code?\n\n```cpp\nclass Example {\nprivate:\n    static int x;\npublic:\n    static int y;\n    void func() {\n        x = 10;\n        y = 20;\n    }\n};\nint Example::x = 0;\nint Example::y = 0;\n\nint main() {\n    Example obj1, obj2;\n    obj1.func();\n    obj2.func();\n    cout << Example::x << \" \" << Example::y;\n    return 0;\n}",
          options: [
            "A) 10 20",
            "B) 0 20",
            "C) 10 0",
            "D) Compilation error",
          ],
          correctAnswer: "B) 0 20",
        },
        // Add more questions for subchapter 1.1 as needed
      ],

      // Chapter 4
      "4.4": [
        {
          id: 1,
          question: "What is an array of objects in C++?",
          options: [
            "A) An array containing multiple data types",
            "B) An array that can store objects of any class",
            "C) An array that can store only integers",
            "D) An array used to store characters",
          ],
          correctAnswer: "B) An array that can store objects of any class",
        },
        {
          id: 2,
          question: "In C++, can you have an array of user-defined objects?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 3,
          question: "What is the maximum number of elements an array can store in C++?",
          options: [
            "A) 100",
            "B) 65535",
            "C) It depends on the system's memory and available resources",
            "D) 256",
          ],
          correctAnswer: "C) It depends on the system's memory and available resources",
        },
        {
          id: 4,
          question: "Which of the following is the correct way to declare an array of objects of class MyClass with 10 elements?",
          options: [
            "A) MyClass[10] arr;",
            "B) MyClass arr[10];",
            "C) arr[10] MyClass;",
            "D) arr[MyClass] 10;",
          ],
          correctAnswer: "B) MyClass arr[10];",
        },
        {
          id: 5,
          question: "How do you access an individual object within an array of objects?",
          options: [
            "A) Using the . operator",
            "B) Using the -> operator",
            "C) Using the [] operator",
            "D) Using the * operator",
          ],
          correctAnswer: "C) Using the [] operator",
        },
        {
          id: 6,
          question: "What is the index of the first element in an array in C++?",
          options: [
            "A) 0",
            "B) 1",
            "C) -1",
            "D) It depends on the array size",
          ],
          correctAnswer: "A) 0",
        },
        {
          id: 7,
          question: "Which function is used to find the number of elements in an array?",
          options: [
            "A) length()",
            "B) count()",
            "C) size()",
            "D) elements()",
          ],
          correctAnswer: "C) size()",
        },
        {
          id: 8,
          question: "What happens if you try to access an element outside the bounds of an array in C++?",
          options: [
            "A) It will return an error at compile-time.",
            "B) It will return a runtime error.",
            "C) It will give you the value stored in that memory location.",
            "D) It will automatically resize the array.",
          ],
          correctAnswer: "B) It will return a runtime error.",
        },
        {
          id: 9,
          question: "Which of the following is an error when defining an array of objects?",
          options: [
            "A) MyClass arr[10];",
            "B) MyClass arr[] = {obj1, obj2, obj3};",
            "C) MyClass[] arr = {obj1, obj2, obj3};",
            "D) MyClass arr[];",
          ],
          correctAnswer: "D) MyClass arr[];",
        },
        {
          id: 10,
          question: "What is the purpose of a default constructor in C++?",
          options: [
            "A) To initialize the array's size",
            "B) To initialize the array's elements",
            "C) To create an instance of the array",
            "D) There is no such thing as a default constructor for arrays",
          ],
          correctAnswer: "D) There is no such thing as a default constructor for arrays",
        },
        {
          id: 11,
          question: "Which C++ loop is typically used to iterate through elements in an array?",
          options: [
            "A) for",
            "B) if",
            "C) while",
            "D) do-while",
          ],
          correctAnswer: "A) for",
        },
        {
          id: 12,
          question: "When declaring an array of objects, do all objects get automatically created and initialized?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 13,
          question: "What is the purpose of the destructor in C++ for an array of objects?",
          options: [
            "A) To destroy the entire array",
            "B) To release the memory allocated for the array",
            "C) To clean up resources associated with individual objects in the array",
            "D) There is no destructor for arrays",
          ],
          correctAnswer: "C) To clean up resources associated with individual objects in the array",
        },
        {
          id: 14,
          question: "Which function is used to set the value of an element in an array of objects?",
          options: [
            "A) setValue()",
            "B) set()",
            "C) initialize()",
            "D) insert()",
          ],
          correctAnswer: "B) set()",
        },
        {
          id: 15,
          question: "In C++, can you change the size of an array after it has been declared?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 16,
          question: "Which keyword is used to access the elements of an array of objects?",
          options: [
            "A) access",
            "B) this",
            "C) super",
            "D) this->",
          ],
          correctAnswer: "D) this->",
        },
        {
          id: 17,
          question: "What is the correct syntax for initializing an array of objects with specific values?",
          options: [
            "A) MyClass[] arr = {obj1, obj2, obj3};",
            "B) MyClass arr[] = {obj1, obj2, obj3};",
            "C) MyClass arr[3] = {obj1, obj2, obj3};",
            "D) MyClass[3] arr = {obj1, obj2, obj3};",
          ],
          correctAnswer: "C) MyClass arr[3] = {obj1, obj2, obj3};",
        },
        {
          id: 18,
          question: "What is the purpose of the copy constructor in C++?",
          options: [
            "A) To copy the entire array",
            "B) To create a deep copy of an object",
            "C) To create a new object by cloning an existing one",
            "D) To move an object from one array to another",
          ],
          correctAnswer: "C) To create a new object by cloning an existing one",
        },
        {
          id: 19,
          question: "How do you delete an array of objects in C++?",
          options: [
            "A) delete arr;",
            "B) delete[] arr;",
            "C) delete arr[];",
            "D) delete obj[];",
          ],
          correctAnswer: "B) delete[] arr;",
        },
        {
          id: 20,
          question: "Which function is used to retrieve the size of an array in C++?",
          options: [
            "A) sizeof()",
            "B) length()",
            "C) size()",
            "D) get_size()",
          ],
          correctAnswer: "A) sizeof()",
        },
        {
          id: 21,
          question: "In C++, can you have an array of objects where each object belongs to a different class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 22,
          question: "What is the purpose of the sizeof operator in C++?",
          options: [
            "A) To find the number of elements in an array",
            "B) To determine the size of an object or data type in bytes",
            "C) To check if an object exists",
            "D) To calculate the sum of elements in an array",
          ],
          correctAnswer: "B) To determine the size of an object or data type in bytes",
        },
        {
          id: 23,
          question: "Which operator is used to access an element in an array?",
          options: [
            "A) . operator",
            "B) -> operator",
            "C) [] operator",
            "D) * operator",
          ],
          correctAnswer: "C) [] operator",
        },
        {
          id: 24,
          question: "How do you declare an array of objects without specifying the size in C++?",
          options: [
            "A) MyClass[] arr;",
            "B) MyClass arr[];",
            "C) MyClass arr;",
            "D) MyClass[10] arr;",
          ],
          correctAnswer: "B) MyClass arr[];",
        },
        {
          id: 25,
          question: "What is the correct way to initialize an array of objects without a default constructor?",
          options: [
            "A) Using the new keyword",
            "B) Using a loop to set each element",
            "C) It is not possible to initialize without a default constructor",
            "D) By passing an initial value to the array declaration",
          ],
          correctAnswer: "B) Using a loop to set each element",
        },
        {
          id: 26,
          question: "When should you use an array of objects instead of a standard array?",
          options: [
            "A) When you need to store different data types",
            "B) When you need to store a collection of objects",
            "C) When you need to dynamically allocate memory",
            "D) When you need to perform mathematical operations on the array",
          ],
          correctAnswer: "B) When you need to store a collection of objects",
        },
        {
          id: 27,
          question: "Which function is used to retrieve the address of an element in an array?",
          options: [
            "A) addressOf()",
            "B) &",
            "C) *",
            "D) location()",
          ],
          correctAnswer: "B) &",
        },
        {
          id: 28,
          question: "What is the default index of the last element in an array in C++?",
          options: [
            "A) -1",
            "B) 0",
            "C) The index of the last element depends on the size of the array",
            "D) 1",
          ],
          correctAnswer: "C) The index of the last element depends on the size of the array",
        },
        {
          id: 29,
          question: "What happens if you forget to delete an array of objects in C++ after dynamically allocating it?",
          options: [
            "A) Memory leak occurs",
            "B) The program will crash",
            "C) The program will automatically deallocate the memory",
            "D) Nothing, C++ automatically manages memory",
          ],
          correctAnswer: "A) Memory leak occurs",
        },
        {
          id: 30,
          question: "Which operator is used to dynamically allocate memory for an array of objects in C++?",
          options: [
            "A) new",
            "B) malloc",
            "C) alloc",
            "D) create",
          ],
          correctAnswer: "A) new",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      // Chapter 4
      "4.5": [
        {
          id: 1,
          question: "What is the primary purpose of passing objects as function arguments in C++?",
          options: [
            "A) To improve code readability",
            "B) To encapsulate data and behavior",
            "C) To reduce the size of the object",
            "D) To eliminate the need for objects",
          ],
          correctAnswer: "B) To encapsulate data and behavior",
        },
        {
          id: 2,
          question: "In C++, objects can be passed to functions by:",
          options: [
            "A) Value, by reference, or by pointer",
            "B) Value or by pointer only",
            "C) By reference only",
            "D) By pointer only",
          ],
          correctAnswer: "A) Value, by reference, or by pointer",
        },
        {
          id: 3,
          question: "Which keyword is used to declare a friend function in C++?",
          options: [
            "A) friend",
            "B) private",
            "C) public",
            "D) protected",
          ],
          correctAnswer: "A) friend",
        },
        {
          id: 4,
          question: "What is a characteristic of a friend function in C++?",
          options: [
            "A) It can access private and protected members of the class it is a friend of.",
            "B) It can access only public members of the class it is a friend of.",
            "C) It can access private members but not protected members.",
            "D) It cannot access any members of the class it is a friend of.",
          ],
          correctAnswer: "A) It can access private and protected members of the class it is a friend of.",
        },
        {
          id: 5,
          question: "Which of the following is true about friend functions?",
          options: [
            "A) Friend functions are defined outside the class but have access to its private members.",
            "B) Friend functions can be called only from within the class.",
            "C) Friend functions are not related to any class.",
            "D) Friend functions are members of the class.",
          ],
          correctAnswer: "A) Friend functions are defined outside the class but have access to its private members.",
        },
        {
          id: 6,
          question: "In C++, which keyword is used to define a friend function in the class definition?",
          options: [
            "A) friend",
            "B) public",
            "C) private",
            "D) protected",
          ],
          correctAnswer: "A) friend",
        },
        {
          id: 7,
          question: "What is the purpose of using a friend function in C++?",
          options: [
            "A) To provide access to the private members of a class",
            "B) To create an instance of a class",
            "C) To declare a class as a friend",
            "D) To restrict access to the public members of a class",
          ],
          correctAnswer: "A) To provide access to the private members of a class",
        },
        {
          id: 8,
          question: "When passing an object to a function by reference, which of the following is true?",
          options: [
            "A) The function receives the original object.",
            "B) A copy of the object is created.",
            "C) The function cannot modify the object.",
            "D) The function receives a null object.",
          ],
          correctAnswer: "A) The function receives the original object.",
        },
        {
          id: 9,
          question: "Which of the following is an advantage of passing objects by reference rather than by value?",
          options: [
            "A) Changes made to the object within the function persist outside the function.",
            "B) Objects passed by reference are faster to copy.",
            "C) It is not possible to pass objects by reference in C++.",
            "D) Passing by reference is more memory-efficient.",
          ],
          correctAnswer: "A) Changes made to the object within the function persist outside the function.",
        },
        {
          id: 10,
          question: "What is the syntax for passing an object by reference to a function in C++?",
          options: [
            "A) functionName(object&)",
            "B) functionName(&object)",
            "C) functionName(object)",
            "D) functionName(object*)",
          ],
          correctAnswer: "A) functionName(object&)",
        },
        {
          id: 11,
          question: "In C++, which of the following can access private members of a class?",
          options: [
            "A) Friend functions and member functions of the class",
            "B) Any function defined within the same file",
            "C) Only member functions of the class",
            "D) Global functions outside the class",
          ],
          correctAnswer: "A) Friend functions and member functions of the class",
        },
        {
          id: 12,
          question: "In C++, when is it necessary to declare a function as a friend of a class?",
          options: [
            "A) When the function needs access to private members of the class",
            "B) When the function is a member of the class",
            "C) When the function is a global function",
            "D) When the function is called from a different file",
          ],
          correctAnswer: "A) When the function needs access to private members of the class",
        },
        {
          id: 13,
          question: "What is the default access specifier for members of a class in C++?",
          options: [
            "A) private",
            "B) public",
            "C) protected",
            "D) friend",
          ],
          correctAnswer: "A) private",
        },
        {
          id: 14,
          question: "Which type of function can access private members of a class without being a member of the class?",
          options: [
            "A) Friend function",
            "B) Static function",
            "C) Member function",
            "D) Private function",
          ],
          correctAnswer: "A) Friend function",
        },
        {
          id: 15,
          question: "In C++, what keyword is used to define a member function of a class as a friend function of another class?",
          options: [
            "A) friend",
            "B) public",
            "C) private",
            "D) protected",
          ],
          correctAnswer: "A) friend",
        },
        {
          id: 16,
          question: "Which of the following is NOT a valid way to declare a friend function in C++?",
          options: [
            "A) Declaring it within the class definition using the friend keyword",
            "B) Declaring it outside the class definition and using the friend keyword",
            "C) Declaring it as a member function of the class",
            "D) Declaring it in a different namespace",
          ],
          correctAnswer: "C) Declaring it as a member function of the class",
        },
        {
          id: 17,
          question: "What is the purpose of using friend functions in C++?",
          options: [
            "A) To restrict access to class members",
            "B) To allow non-member functions to access private members of a class",
            "C) To make all members of a class public",
            "D) To define constructors for a class",
          ],
          correctAnswer: "B) To allow non-member functions to access private members of a class",
        },
        {
          id: 18,
          question: "Which of the following is a valid way to declare a friend function outside the class definition in C++?",
          options: [
            "A) friend void functionName();",
            "B) friend void className::functionName();",
            "C) friend className::functionName();",
            "D) void friend functionName();",
          ],
          correctAnswer: "B) friend void className::functionName();",
        },
        {
          id: 19,
          question: "When using a friend function in C++, which of the following statements is true?",
          options: [
            "A) The friend function can access private and protected members of the class.",
            "B) The friend function becomes a member function of the class.",
            "C) The friend function must be declared as a member function within the class.",
            "D) The friend function can only access public members of the class.",
          ],
          correctAnswer: "A) The friend function can access private and protected members of the class.",
        },
        {
          id: 20,
          question: "Which keyword is used to declare a function as a friend of a class in C++?",
          options: [
            "A) private",
            "B) public",
            "C) protected",
            "D) friend",
          ],
          correctAnswer: "D) friend",
        },
        {
          id: 21,
          question: "In C++, a friend function can be defined in a different:",
          options: [
            "A) Class",
            "B) Namespace",
            "C) File",
            "D) Object",
          ],
          correctAnswer: "C) File",
        },
        {
          id: 22,
          question: "When passing an object to a function by pointer, which operator is used to access members of the object within the function?",
          options: [
            "A) .",
            "B) ->",
            "C) *",
            "D) :",
          ],
          correctAnswer: "B) ->",
        },
        {
          id: 23,
          question: "Which type of function can access private members of a class without being a member of the class?",
          options: [
            "A) Friend function",
            "B) Member function",
            "C) Static function",
            "D) Constructor function",
          ],
          correctAnswer: "A) Friend function",
        },
        {
          id: 24,
          question: "What is the purpose of using friend functions in C++?",
          options: [
            "A) To allow functions to bypass encapsulation",
            "B) To provide a way to create objects of a class",
            "C) To allow functions to be members of a class",
            "D) To allow functions to access private members of a class",
          ],
          correctAnswer: "D) To allow functions to access private members of a class",
        },
        {
          id: 25,
          question: "Which of the following is true about passing objects by value in C++?",
          options: [
            "A) A copy of the object is created, and changes made do not affect the original.",
            "B) It is the most memory-efficient way to pass objects.",
            "C) Changes made to the object within the function persist outside the function.",
            "D) It is not possible to pass objects by value in C++.",
          ],
          correctAnswer: "A) A copy of the object is created, and changes made do not affect the original.",
        },
        {
          id: 26,
          question: "In C++, which access specifier is used for friend functions in the class definition?",
          options: [
            "A) private",
            "B) public",
            "C) protected",
            "D) friend",
          ],
          correctAnswer: "A) private",
        },
        {
          id: 27,
          question: "Which of the following is a characteristic of a friend function in C++?",
          options: [
            "A) It has access to private members of the class it is a friend of.",
            "B) It can only access public members of the class.",
            "C) It must be a member function of the class.",
            "D) It cannot access any members of the class.",
          ],
          correctAnswer: "A) It has access to private members of the class it is a friend of.",
        },
        {
          id: 28,
          question: "In C++, which of the following can be a friend of a class?",
          options: [
            "A) Another class",
            "B) A variable",
            "C) A function",
            "D) A loop",
          ],
          correctAnswer: "A) Another class",
        },
        {
          id: 29,
          question: "What happens if a friend function with the same name is declared in two different classes?",
          options: [
            "A) It leads to a compilation error.",
            "B) The friend function in the class where it was last declared takes precedence.",
            "C) The friend function in the class where it was first declared takes precedence.",
            "D) Both friend functions can be used interchangeably.",
          ],
          correctAnswer: "B) The friend function in the class where it was last declared takes precedence.",
        },
        {
          id: 30,
          question: "In C++, which keyword is used to define a member function of a class as a friend function of another class?",
          options: [
            "A) friend",
            "B) public",
            "C) private",
            "D) protected",
          ],
          correctAnswer: "A) friend",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
    },
    // CHAPTER 4 ENDED

    5: {
      // Chapter 5
      "5.1": [
        {
          id: 1,
          question: "What is the primary purpose of a constructor in C++?",
          options: [
            "A) To allocate memory for objects",
            "B) To initialize the data members of an object",
            "C) To perform arithmetic operations",
            "D) To deallocate memory for objects",
          ],
          correctAnswer: "B) To initialize the data members of an object",
        },
        {
          id: 2,
          question: "Which of the following statements is true regarding constructors?",
          options: [
            "A) Constructors have a return type.",
            "B) Constructors can be called explicitly.",
            "C) Constructors can have parameters.",
            "D) Constructors can return values.",
          ],
          correctAnswer: "C) Constructors can have parameters.",
        },
        {
          id: 3,
          question: "What is the syntax for defining a constructor in C++?",
          options: [
            "A) void constructorName()",
            "B) constructorName(void)",
            "C) constructorName::constructorName()",
            "D) constructorName.constructorName()",
          ],
          correctAnswer: "C) constructorName::constructorName()",
        },
        {
          id: 4,
          question: "Which of the following is not a characteristic of a constructor?",
          options: [
            "A) It is called automatically when an object is created.",
            "B) It does not have a return type.",
            "C) It can be overloaded.",
            "D) It can have a different name than the class.",
          ],
          correctAnswer: "D) It can have a different name than the class.",
        },
        {
          id: 5,
          question: "What is the purpose of a default constructor?",
          options: [
            "A) To create objects with default values.",
            "B) To allocate memory for objects.",
            "C) To destroy objects.",
            "D) To perform complex calculations.",
          ],
          correctAnswer: "A) To create objects with default values.",
        },
        {
          id: 6,
          question: "If a class does not define any constructors, what type of constructor is automatically provided by the compiler?",
          options: [
            "A) Parameterized constructor",
            "B) Copy constructor",
            "C) Default constructor",
            "D) Destructor",
          ],
          correctAnswer: "C) Default constructor",
        },
        {
          id: 7,
          question: "Which of the following is a parameterized constructor?",
          options: [
            "A) MyClass()",
            "B) MyClass(int x)",
            "C) MyClass(MyClass& obj)",
            "D) MyClass::MyClass()",
          ],
          correctAnswer: "B) MyClass(int x)",
        },
        {
          id: 8,
          question: "In C++, how can you differentiate between a parameterized constructor and a default constructor?",
          options: [
            "A) By the number of parameters it takes.",
            "B) By the class name.",
            "C) By the keyword 'parameterized' in the declaration.",
            "D) There is no way to differentiate.",
          ],
          correctAnswer: "A) By the number of parameters it takes.",
        },
        {
          id: 9,
          question: "When is a default constructor automatically called?",
          options: [
            "A) When an object is declared but not initialized.",
            "B) When an object is destroyed.",
            "C) When an object is created with parameters.",
            "D) When an object is explicitly called using its name.",
          ],
          correctAnswer: "A) When an object is declared but not initialized.",
        },
        {
          id: 10,
          question: "Which constructor is called when one object is used to initialize another object of the same class?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Destructor",
          ],
          correctAnswer: "C) Copy constructor",
        },
        {
          id: 11,
          question: "What is the role of a copy constructor in C++?",
          options: [
            "A) It creates a copy of an object.",
            "B) It initializes an object with a value.",
            "C) It deallocates memory.",
            "D) It modifies the original object.",
          ],
          correctAnswer: "A) It creates a copy of an object.",
        },
        {
          id: 12,
          question: "Which of the following is a valid way to call a parameterized constructor?",
          options: [
            "A) MyClass obj();",
            "B) MyClass obj = MyClass(10);",
            "C) MyClass obj = new MyClass();",
            "D) MyClass obj;",
          ],
          correctAnswer: "B) MyClass obj = MyClass(10);",
        },
        {
          id: 13,
          question: "What happens if you don't provide a constructor in your class?",
          options: [
            "A) The program will not compile.",
            "B) The compiler will generate a default constructor.",
            "C) The class cannot have objects.",
            "D) You can only create objects using the new keyword.",
          ],
          correctAnswer: "B) The compiler will generate a default constructor.",
        },
        {
          id: 14,
          question: "Which constructor is used when an object is passed by value as a function parameter?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Destructor",
          ],
          correctAnswer: "C) Copy constructor",
        },
        {
          id: 15,
          question: "What is the purpose of using the 'this' pointer in a constructor?",
          options: [
            "A) To access global variables.",
            "B) To call a different constructor within the same class.",
            "C) To allocate memory dynamically.",
            "D) To prevent object creation.",
          ],
          correctAnswer: "B) To call a different constructor within the same class.",
        },
        {
          id: 16,
          question: "Which constructor is called when an object is destroyed?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Destructor",
          ],
          correctAnswer: "D) Destructor",
        },
        {
          id: 17,
          question: "What is the difference between a constructor and a regular member function?",
          options: [
            "A) Constructors can have a return type; regular member functions cannot.",
            "B) Constructors are called explicitly; regular member functions are called automatically.",
            "C) Constructors are used for object initialization; regular member functions perform operations on objects.",
            "D) There is no difference between them.",
          ],
          correctAnswer: "C) Constructors are used for object initialization; regular member functions perform operations on objects.",
        },
        {
          id: 18,
          question: "In C++, can a class have both a default constructor and a parameterized constructor?",
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on the compiler.",
            "D) Only if the class is derived from another class.",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 19,
          question: "Which constructor is called when an object is created using the new keyword?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Destructor",
          ],
          correctAnswer: "B) Parameterized constructor",
        },
        {
          id: 20,
          question: "When is the initialization list used in a constructor?",
          options: [
            "A) To declare variables.",
            "B) To perform calculations.",
            "C) To initialize member variables.",
            "D) To define functions.",
          ],
          correctAnswer: "C) To initialize member variables.",
        },
        {
          id: 21,
          question: "What is a shallow copy in the context of copy constructors?",
          options: [
            "A) It creates a new object with the same values.",
            "B) It copies the memory address of the original object.",
            "C) It duplicates the original object.",
            "D) It deallocates memory.",
          ],
          correctAnswer: "B) It copies the memory address of the original object.",
        },
        {
          id: 22,
          question: "Which of the following is a valid declaration of a parameterized constructor in a class called 'MyClass'?",
          options: [
            "A) MyClass()",
            "B) MyClass(int x)",
            "C) void MyClass()",
            "D) int MyClass(int x)",
          ],
          correctAnswer: "B) MyClass(int x)",
        },
        {
          id: 23,
          question: "What is the purpose of the destructor in C++?",
          options: [
            "A) To create objects.",
            "B) To initialize objects.",
            "C) To free resources and perform cleanup when an object is destroyed.",
            "D) To copy objects.",
          ],
          correctAnswer: "C) To free resources and perform cleanup when an object is destroyed.",
        },
        {
          id: 24,
          question: "Which constructor is called when an object is created without using the new keyword?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Destructor",
          ],
          correctAnswer: "A) Default constructor",
        },
        {
          id: 25,
          question: "What is the return type of a constructor in C++?",
          options: [
            "A) int",
            "B) void",
            "C) float",
            "D) The same as the class name",
          ],
          correctAnswer: "B) void",
        },
        {
          id: 26,
          question: "Which constructor is called when you create an object like this: MyClass obj = anotherObj; where 'anotherObj' is of the same class?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Destructor",
          ],
          correctAnswer: "C) Copy constructor",
        },
        {
          id: 27,
          question: "When defining a copy constructor, what is the recommended parameter type?",
          options: [
            "A) int",
            "B) float",
            "C) const reference to the same class",
            "D) char",
          ],
          correctAnswer: "C) const reference to the same class",
        },
        {
          id: 28,
          question: "Which of the following is not a valid way to initialize member variables in a constructor?",
          options: [
            "A) Using the assignment operator",
            "B) Using an initialization list",
            "C) Using a separate member function",
            "D) Using a loop",
          ],
          correctAnswer: "C) Using a separate member function",
        },
        {
          id: 29,
          question: "What is the significance of the 'explicit' keyword in front of a constructor?",
          options: [
            "A) It indicates that the constructor cannot be used.",
            "B) It allows implicit conversions from other types.",
            "C) It prevents implicit conversions from other types.",
            "D) It is used to define a destructor.",
          ],
          correctAnswer: "C) It prevents implicit conversions from other types.",
        },
        {
          id: 30,
          question: "In which order are base class constructors called when a derived class object is created?",
          options: [
            "A) In the order in which they are declared in the derived class.",
            "B) In the reverse order in which they are declared in the derived class.",
            "C) In the order in which they are declared in the base class.",
            "D) In the reverse order in which they are declared in the base class.",
          ],
          correctAnswer: "C) In the order in which they are declared in the base class.",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "5.2": [
        {
          id: 1,
          question: "What is the purpose of having multiple constructors in a class?",
          options: [
            "A) To provide different ways of initializing objects",
            "B) To overload the constructor function",
            "C) To increase the number of objects that can be created",
            "D) To reduce memory usage",
          ],
          correctAnswer: "A) To provide different ways of initializing objects",
        },
        {
          id: 2,
          question: "Which of the following is true about constructors?",
          options: [
            "A) They have a return type",
            "B) They are called explicitly by the programmer",
            "C) They have the same name as the class",
            "D) They can have multiple definitions in a class",
          ],
          correctAnswer: "C) They have the same name as the class",
        },
        {
          id: 3,
          question: "When would you use a default constructor?",
          options: [
            "A) When you want to provide default values to member variables",
            "B) When you want to create an instance of a class without providing any initial values",
            "C) When you want to create a constructor with a single argument",
            "D) When you want to override the default behavior of the class",
          ],
          correctAnswer: "B) When you want to create an instance of a class without providing any initial values",
        },
        {
          id: 4,
          question: "What happens if you don't provide a constructor in a C++ class?",
          options: [
            "A) The compiler generates a default constructor",
            "B) It is a syntax error",
            "C) The class cannot have any objects",
            "D) The class cannot have any member functions",
          ],
          correctAnswer: "A) The compiler generates a default constructor",
        },
        {
          id: 5,
          question: "Which type of constructor is this?",
          options: [
            "A) Default constructor",
            "B) Parameterized constructor",
            "C) Copy constructor",
            "D) Constructor with default argument",
          ],
          correctAnswer: "B) Parameterized constructor",
        },
        {
          id: 6,
          question: "In C++, can a class have both a default constructor and a parameterized constructor?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 7,
          question: "Which of the following is an advantage of using default arguments in constructors?",
          options: [
            "A) It reduces the number of constructors needed in a class",
            "B) It allows the creation of objects without specifying all arguments",
            "C) It improves the performance of the program",
            "D) It prevents overloading of constructors",
          ],
          correctAnswer: "B) It allows the creation of objects without specifying all arguments",
        },
        {
          id: 8,
          question: "What are the default values of length and width if no arguments are provided during object creation?",
          options: [
            "A) length = 1, width = 1",
            "B) length = 0, width = 0",
            "C) length = 0, width = 1",
            "D) length = 1, width = 0",
          ],
          correctAnswer: "B) length = 0, width = 0",
        },
        {
          id: 9,
          question: "Can you have both default arguments and non-default arguments in the same constructor?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 10,
          question: "Which of the following is an example of using default arguments in a constructor?",
          options: [
            "A) Rectangle() { length = 1; width = 1; }",
            "B) Rectangle(int l = 1, int w = 1) { length = l; width = w; }",
            "C) Rectangle(int l, int w) { length = l; width = w; }",
            "D) Rectangle(int l = 0, int w = 0) { length = l; width = w; }",
          ],
          correctAnswer: "B) Rectangle(int l = 1, int w = 1) { length = l; width = w; }",
        },
        {
          id: 11,
          question: "Which of the following statements is true about constructors in C++?",
          options: [
            "A) Constructors can return a value.",
            "B) Constructors can be declared static.",
            "C) Constructors can have a different name than the class.",
            "D) Constructors can't accept arguments.",
          ],
          correctAnswer: "B) Constructors can be declared static.",
        },
        {
          id: 12,
          question: "What will be the radius of a Circle object created with Circle c;?",
          options: [
            "A) 0.0",
            "B) 1.0",
            "C) 1",
            "D) It will result in an error.",
          ],
          correctAnswer: "B) 1.0",
        },
        {
          id: 13,
          question: "In a class, can a default constructor and a parameterized constructor have the same number of arguments?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 14,
          question: "Which of the following statements is true about default constructors?",
          options: [
            "A) They can be overloaded.",
            "B) They are always provided by the compiler if no constructors are defined.",
            "C) They cannot be used to initialize member variables.",
            "D) They cannot have any parameters.",
          ],
          correctAnswer: "B) They are always provided by the compiler if no constructors are defined.",
        },
        {
          id: 15,
          question: "What will be the value of year if a Car object is created using Car myCar;?",
          options: [
            "A) 0",
            "B) 2020",
            "C) 1",
            "D) It will result in an error.",
          ],
          correctAnswer: "B) 2020",
        },
        {
          id: 16,
          question: "Which of the following is a valid way to call a parameterized constructor within another constructor of the same class?",
          options: [
            "A) this();",
            "B) this.constructor();",
            "C) this->constructor();",
            "D) constructor();",
          ],
          correctAnswer: "D) constructor();",
        },
        {
          id: 17,
          question: "Which of the following is a valid way to create a Book object?",
          options: [
            "A) Book b;",
            "B) Book b(\"The Catcher in the Rye\");",
            "C) Book b(\"1984\", \"George Orwell\");",
            "D) Book b(\"To Kill a Mockingbird\", \"Harper Lee\", \"1960\");",
          ],
          correctAnswer: "B) Book b(\"The Catcher in the Rye\");",
        },
        {
          id: 18,
          question: "In C++, can a constructor have a return type?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 19,
          question: "What will be the values of hours and minutes if a Time object is created using Time t(2);?",
          options: [
            "A) hours = 2, minutes = 0",
            "B) hours = 0, minutes = 2",
            "C) hours = 2, minutes = 2",
            "D) hours = 0, minutes = 0",
          ],
          correctAnswer: "A) hours = 2, minutes = 0",
        },
        {
          id: 20,
          question: "Can a class have both a destructor and multiple constructors?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 21,
          question: "Which of the following is a valid way to initialize a class member variable using a constructor with default arguments?",
          options: [
            "A) length(l); width(w);",
            "B) length = l; width = w;",
            "C) this->length = l; this->width = w;",
            "D) this(length, width);",
          ],
          correctAnswer: "B) length = l; width = w;",
        },
        {
          id: 22,
          question: "What will be the value of age if an Employee object is created using Employee e;?",
          options: [
            "A) 0",
            "B) 30",
            "C) 1",
            "D) It will result in an error.",
          ],
          correctAnswer: "B) 30",
        },
        {
          id: 23,
          question: "Which of the following statements is true about default arguments in constructors?",
          options: [
            "A) Default arguments must be specified in the class definition.",
            "B) Default arguments must be constants.",
            "C) Default arguments must be of the same type.",
            "D) Default arguments can be overridden during object creation.",
          ],
          correctAnswer: "D) Default arguments can be overridden during object creation.",
        },
        {
          id: 24,
          question: "What will be the values of x and y if a Point object is created using Point p(3);?",
          options: [
            "A) x = 3, y = 0",
            "B) x = 3, y = 3",
            "C) x = 0, y = 3",
            "D) x = 0, y = 0",
          ],
          correctAnswer: "A) x = 3, y = 0",
        },
        {
          id: 25,
          question: "Can a class have multiple constructors with the same number of parameters and the same default arguments?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 26,
          question: "What will be the value of degrees if a Temperature object is created using Temperature t(25.5);?",
          options: [
            "A) 0.0",
            "B) 25.5",
            "C) 1",
            "D) It will result in an error.",
          ],
          correctAnswer: "B) 25.5",
        },
        {
          id: 27,
          question: "In C++, can a constructor be virtual?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 28,
          question: "What will be the value of name if a Person object is created using Person p;?",
          options: [
            "A) \"John Doe\"",
            "B) \"\"",
            "C) \"Unknown\"",
            "D) It will result in an error.",
          ],
          correctAnswer: "A) \"John Doe\"",
        },
        {
          id: 29,
          question: "Which of the following statements is true about constructors with default arguments?",
          options: [
            "A) Default arguments must be specified in the function declaration.",
            "B) Default arguments must be of a built-in data type.",
            "C) Default arguments must be specified in the function definition.",
            "D) Default arguments can be specified in either the declaration or the definition.",
          ],
          correctAnswer: "D) Default arguments can be specified in either the declaration or the definition.",
        },
        {
          id: 30,
          question: "What will be the values of x and y if a Point object is created using Point p(3);?",
          options: [
            "A) x = 3, y = 0",
            "B) x = 3, y = 3",
            "C) x = 0, y = 3",
            "D) x = 0, y = 0",
          ],
          correctAnswer: "A) x = 3, y = 0",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "5.3": [
        {
          id: 1,
          question: "What is dynamic initialization of objects in C++?",
          options: [
            "A) Initializing objects using pointers",
            "B) Initializing objects at runtime using new keyword",
            "C) Initializing objects using constructors",
            "D) Initializing objects using static keyword",
          ],
          correctAnswer: "B) Initializing objects at runtime using new keyword",
        },
        {
          id: 2,
          question: "When is dynamic initialization of objects useful?",
          options: [
            "A) When the number of objects is known at compile time",
            "B) When the number of objects is determined at runtime",
            "C) When objects don't require initialization",
            "D) When objects are constants",
          ],
          correctAnswer: "B) When the number of objects is determined at runtime",
        },
        {
          id: 3,
          question: "Which operator is used for dynamic initialization of objects?",
          options: [
            "A) =",
            "B) ()",
            "C) []",
            "D) new",
          ],
          correctAnswer: "D) new",
        },
        {
          id: 4,
          question: "In dynamic initialization, what does the new operator return?",
          options: [
            "A) Address of the allocated memory",
            "B) Value of the initialized object",
            "C) Size of the allocated memory",
            "D) Constructor function pointer",
          ],
          correctAnswer: "A) Address of the allocated memory",
        },
        {
          id: 5,
          question: "What is the syntax for dynamic initialization of an integer object named num?",
          options: [
            "A) new int(num)",
            "B) new int num",
            "C) int* num = new int",
            "D) int* num = new int(num)",
          ],
          correctAnswer: "A) new int(num)",
        },
        {
          id: 6,
          question: "When should you use a copy constructor in C++?",
          options: [
            "A) When creating an object using dynamic initialization",
            "B) When creating an object using static initialization",
            "C) When creating an object using default initialization",
            "D) When creating an object using pointers",
          ],
          correctAnswer: "A) When creating an object using dynamic initialization",
        },
        {
          id: 7,
          question: "What does a copy constructor do?",
          options: [
            "A) Creates a new object with the same values as an existing object",
            "B) Creates a copy of the object using a pointer",
            "C) Initializes an object using dynamic memory allocation",
            "D) Initializes an object using a default value",
          ],
          correctAnswer: "A) Creates a new object with the same values as an existing object",
        },
        {
          id: 8,
          question: "What is the parameter of a copy constructor?",
          options: [
            "A) Reference to the original object",
            "B) Pointer to the original object",
            "C) Value of the original object",
            "D) Address of the original object",
          ],
          correctAnswer: "A) Reference to the original object",
        },
        {
          id: 9,
          question: "When is a copy constructor called in C++?",
          options: [
            "A) When an object is declared",
            "B) When an object is passed by value to a function",
            "C) When an object is passed by reference to a function",
            "D) When an object is initialized with another object",
          ],
          correctAnswer: "D) When an object is initialized with another object",
        },
        {
          id: 10,
          question: "What happens if a copy constructor is not defined for a class?",
          options: [
            "A) The program will not compile",
            "B) The compiler will generate a default copy constructor",
            "C) The class cannot have dynamic initialization",
            "D) The class cannot have static initialization",
          ],
          correctAnswer: "B) The compiler will generate a default copy constructor",
        },
        {
          id: 11,
          question: "Which type of initialization does a copy constructor perform?",
          options: [
            "A) Dynamic initialization",
            "B) Static initialization",
            "C) Shallow copy initialization",
            "D) Deep copy initialization",
          ],
          correctAnswer: "D) Deep copy initialization",
        },
        {
          id: 12,
          question: "In a copy constructor, what is typically copied from the source object to the target object?",
          options: [
            "A) Data members by value",
            "B) Data members by reference",
            "C) Data members by pointer",
            "D) Data members by address",
          ],
          correctAnswer: "A) Data members by value",
        },
        {
          id: 13,
          question: "Which is an example of dynamic initialization of an array of integers?",
          options: [
            "A) int arr[5] = {1, 2, 3, 4, 5}",
            "B) int* arr = new int[5]",
            "C) int* arr[5] = {1, 2, 3, 4, 5}",
            "D) int* arr = new int(5)",
          ],
          correctAnswer: "B) int* arr = new int[5]",
        },
        {
          id: 14,
          question: "When using dynamic initialization, when should memory be deallocated?",
          options: [
            "A) After the program finishes executing",
            "B) After the object is no longer needed",
            "C) Automatically by the compiler",
            "D) Memory is never deallocated",
          ],
          correctAnswer: "B) After the object is no longer needed",
        },
        {
          id: 15,
          question: "What happens if you forget to deallocate memory after dynamic initialization?",
          options: [
            "A) Memory leak occurs",
            "B) The program crashes",
            "C) Compiler generates an error",
            "D) Garbage collection takes care of it",
          ],
          correctAnswer: "A) Memory leak occurs",
        },
        {
          id: 16,
          question: "Which keyword is used to delete dynamically allocated memory in C++?",
          options: [
            "A) delete",
            "B) free",
            "C) destroy",
            "D) deallocate",
          ],
          correctAnswer: "A) delete",
        },
        {
          id: 17,
          question: "What is the purpose of a destructor in C++?",
          options: [
            "A) Initializes objects",
            "B) Deallocates memory",
            "C) Copies objects",
            "D) Returns a value",
          ],
          correctAnswer: "B) Deallocates memory",
        },
        {
          id: 18,
          question: "When is a destructor called in C++?",
          options: [
            "A) After an object is created",
            "B) When an object is passed by value to a function",
            "C) When an object goes out of scope",
            "D) When an object is initialized with another object",
          ],
          correctAnswer: "C) When an object goes out of scope",
        },
        {
          id: 19,
          question: "What is the syntax for defining a copy constructor in a class named MyClass?",
          options: [
            "A) MyClass(MyClass const& obj)",
            "B) void MyClass(MyClass const& obj)",
            "C) MyClass copy(MyClass const& obj)",
            "D) MyClass(const MyClass& obj)",
          ],
          correctAnswer: "D) MyClass(const MyClass& obj)",
        },
        {
          id: 20,
          question: "Which type of initialization is performed by the default copy constructor provided by the compiler?",
          options: [
            "A) Shallow copy initialization",
            "B) Deep copy initialization",
            "C) Static initialization",
            "D) Dynamic initialization",
          ],
          correctAnswer: "A) Shallow copy initialization",
        },
        {
          id: 21,
          question: "In dynamic initialization, what does the delete operator do?",
          options: [
            "A) Deallocates memory",
            "B) Initializes an object",
            "C) Creates a copy of the object",
            "D) Copies data members",
          ],
          correctAnswer: "A) Deallocates memory",
        },
        {
          id: 22,
          question: "What is the role of the assignment operator (=) in dynamic initialization?",
          options: [
            "A) Allocates memory",
            "B) Deallocates memory",
            "C) Copies values from one object to another",
            "D) Initializes objects",
          ],
          correctAnswer: "C) Copies values from one object to another",
        },
        {
          id: 23,
          question: "What happens if a copy constructor is called recursively?",
          options: [
            "A) Stack overflow error occurs",
            "B) Infinite loop",
            "C) Compilation error",
            "D) Program runs normally",
          ],
          correctAnswer: "A) Stack overflow error occurs",
        },
        {
          id: 24,
          question: "Which function is called for dynamic initialization of an object?",
          options: [
            "A) Constructor",
            "B) Destructor",
            "C) Copy constructor",
            "D) Assignment operator",
          ],
          correctAnswer: "A) Constructor",
        },
        {
          id: 25,
          question: "In dynamic initialization, what happens if memory allocation fails?",
          options: [
            "A) Program crashes",
            "B) Exception is thrown",
            "C) nullptr is returned",
            "D) Program continues with uninitialized memory",
          ],
          correctAnswer: "B) Exception is thrown",
        },
        {
          id: 26,
          question: "When should you define a custom copy constructor?",
          options: [
            "A) When the default copy behavior is sufficient",
            "B) When the class has dynamically allocated memory",
            "C) When the class has only primitive data members",
            "D) When the class is a derived class",
          ],
          correctAnswer: "B) When the class has dynamically allocated memory",
        },
        {
          id: 27,
          question: "Which statement is true about dynamic initialization in C++?",
          options: [
            "A) It is always done using pointers",
            "B) It is performed at compile time",
            "C) It allows objects to be initialized at runtime",
            "D) It only applies to built-in data types",
          ],
          correctAnswer: "C) It allows objects to be initialized at runtime",
        },
        {
          id: 28,
          question: "What is the purpose of providing a copy constructor in a class?",
          options: [
            "A) To create a new object with uninitialized data members",
            "B) To create a shallow copy of an object",
            "C) To prevent objects from being copied",
            "D) To create a new object with the same values as an existing object",
          ],
          correctAnswer: "D) To create a new object with the same values as an existing object",
        },
        {
          id: 29,
          question: "Which keyword is used to prevent a class from being copied?",
          options: [
            "A) no_copy",
            "B) disable_copy",
            "C) no_copy_construct",
            "D) delete",
          ],
          correctAnswer: "D) delete",
        },
        {
          id: 30,
          question: "In dynamic initialization, what is the role of the destructor?",
          options: [
            "A) Deallocates memory and cleans up resources",
            "B) Initializes the object with default values",
            "C) Copies values from one object to another",
            "D) Creates a new object with the same values",
          ],
          correctAnswer: "A) Deallocates memory and cleans up resources",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "5.4": [
        {
          id: 1,
          question: "What is the purpose of a dynamic constructor in C++?",
          options: [
            "A) It allocates memory for an object dynamically",
            "B) It initializes the object's data members",
            "C) It deallocates memory for an object",
            "D) It is not a valid concept in C++",
          ],
          correctAnswer: "A) It allocates memory for an object dynamically",
        },
        {
          id: 2,
          question: "When is a dynamic constructor called in C++?",
          options: [
            "A) During object creation",
            "B) During object destruction",
            "C) Both A and B",
            "D) Neither A nor B",
          ],
          correctAnswer: "A) During object creation",
        },
        {
          id: 3,
          question: "What happens if you don't define a dynamic constructor for a class in C++?",
          options: [
            "A) The program will not compile",
            "B) The default constructor will be used",
            "C) The program will throw an error at runtime",
            "D) The program will run without any issues",
          ],
          correctAnswer: "B) The default constructor will be used",
        },
        {
          id: 4,
          question: "Which keyword is used to define a destructor in C++?",
          options: [
            "A) ~Destructor",
            "B) destruct",
            "C) delete",
            "D) None of the above",
          ],
          correctAnswer: "A) ~Destructor",
        },
        {
          id: 5,
          question: "When is a destructor called in C++?",
          options: [
            "A) During object creation",
            "B) During object destruction",
            "C) Both A and B",
            "D) Neither A nor B",
          ],
          correctAnswer: "B) During object destruction",
        },
        {
          id: 6,
          question: "Can a class have multiple destructors in C++?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 7,
          question: "What is the purpose of a destructor in C++?",
          options: [
            "A) It initializes the object's data members",
            "B) It deallocates memory for an object",
            "C) It allocates memory for an object dynamically",
            "D) It is not a valid concept in C++",
          ],
          correctAnswer: "B) It deallocates memory for an object",
        },
        {
          id: 8,
          question: "What is the syntax for defining a destructor in C++?",
          options: [
            "A) void Destructor()",
            "B) ~ClassName()",
            "C) ClassName::~Destructor()",
            "D) Destruct ClassName()",
          ],
          correctAnswer: "B) ~ClassName()",
        },
        {
          id: 9,
          question: "Which of the following is true about destructors in C++?",
          options: [
            "A) They have return type",
            "B) They can be overloaded",
            "C) They can be inherited",
            "D) They cannot be called explicitly",
          ],
          correctAnswer: "B) They can be overloaded",
        },
        {
          id: 10,
          question: "What happens if you don't define a destructor for a class in C++?",
          options: [
            "A) The program will not compile",
            "B) The default destructor will be used",
            "C) The program will throw an error at runtime",
            "D) The program will run without any issues",
          ],
          correctAnswer: "B) The default destructor will be used",
        },
        {
          id: 11,
          question: "In C++, can a class have both a dynamic constructor and a destructor?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 12,
          question: "Which of the following statements about dynamic constructors is true in C++?",
          options: [
            "A) They can be overloaded",
            "B) They cannot be overloaded",
            "C) They can be inherited",
            "D) They cannot be inherited",
          ],
          correctAnswer: "A) They can be overloaded",
        },
        {
          id: 13,
          question: "In C++, when is a dynamic constructor called?",
          options: [
            "A) During object creation",
            "B) During object destruction",
            "C) Both A and B",
            "D) Neither A nor B",
          ],
          correctAnswer: "A) During object creation",
        },
        {
          id: 14,
          question: "Which of the following is not a valid destructor name in C++?",
          options: [
            "A) ~MyDestructor",
            "B) ~Destructor()",
            "C) Destruct()",
            "D) ~ClassName()",
          ],
          correctAnswer: "C) Destruct()",
        },
        {
          id: 15,
          question: "Can a destructor be private in C++?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 16,
          question: "Which operator is used to call the destructor explicitly in C++?",
          options: [
            "A) -> Destructor",
            "B) :: Destructor",
            "C) ~ Destructor",
            "D) ! Destructor",
          ],
          correctAnswer: "C) ~ Destructor",
        },
        {
          id: 17,
          question: "In C++, what is the order of execution for a class with both dynamic constructor and destructor?",
          options: [
            "A) Constructor first, then destructor",
            "B) Destructor first, then constructor",
            "C) It is implementation-dependent",
            "D) Compiler will throw an error",
          ],
          correctAnswer: "A) Constructor first, then destructor",
        },
        {
          id: 18,
          question: "Which of the following is true about dynamic constructors and inheritance in C++?",
          options: [
            "A) Dynamic constructors cannot be inherited",
            "B) Dynamic constructors are inherited in the derived class",
            "C) Dynamic constructors can be inherited only if they are defined as public",
            "D) Dynamic constructors are not related to inheritance",
          ],
          correctAnswer: "B) Dynamic constructors are inherited in the derived class",
        },
        {
          id: 19,
          question: "When does memory allocation occur in a dynamic constructor?",
          options: [
            "A) During object creation",
            "B) During object destruction",
            "C) Both A and B",
            "D) Neither A nor B",
          ],
          correctAnswer: "A) During object creation",
        },
        {
          id: 20,
          question: "In C++, can a dynamic constructor throw an exception?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 21,
          question: "What is the purpose of a dynamic constructor in a real-life scenario?",
          options: [
            "A) Allocating memory for a dynamic array",
            "B) Initializing variables with user input",
            "C) Deallocating memory for a dynamic array",
            "D) None of the above",
          ],
          correctAnswer: "B) Initializing variables with user input",
        },
        {
          id: 22,
          question: "In C++, can a dynamic constructor have parameters?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 23,
          question: "Which of the following is true about dynamic constructors and static data members in C++?",
          options: [
            "A) Dynamic constructors can access static data members",
            "B) Static data members can access dynamic constructors",
            "C) Dynamic constructors cannot access static data members",
            "D) Static data members are automatically initialized by dynamic constructors",
          ],
          correctAnswer: "A) Dynamic constructors can access static data members",
        },
        {
          id: 24,
          question: "What is the primary purpose of a destructor in a real-life scenario?",
          options: [
            "A) Closing file handles",
            "B) Initializing variables",
            "C) Allocating memory",
            "D) Creating objects",
          ],
          correctAnswer: "A) Closing file handles",
        },
        {
          id: 25,
          question: "Can a class have both a static constructor and a dynamic constructor in C++?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 26,
          question: "Which of the following statements about destructors is true in C++?",
          options: [
            "A) They have parameters",
            "B) They cannot be overloaded",
            "C) They can be virtual",
            "D) They return a value",
          ],
          correctAnswer: "C) They can be virtual",
        },
        {
          id: 27,
          question: "In C++, can a destructor be virtual?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 28,
          question: "Which of the following is true about the order of execution for a class with both dynamic constructor and destructor in C++?",
          options: [
            "A) Destructor first, then constructor",
            "B) Constructor first, then destructor",
            "C) It is implementation-dependent",
            "D) Compiler will throw an error",
          ],
          correctAnswer: "B) Constructor first, then destructor",
        },
        {
          id: 29,
          question: "Can a class have multiple dynamic constructors in C++?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 30,
          question: "In C++, is it mandatory to define a destructor for every class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
    },

    //CHAPTER 5 ENDED



    6: {
      // Chapter 6
      "6.1": [
        {
          id: 1,
          question: "What is operator overloading in C++?",
          options: [
            "A) It allows creating new operators",
            "B) It allows defining the behavior of existing operators for user-defined types",
            "C) It allows using operators without writing their definitions",
            "D) It allows overloading built-in functions",
          ],
          correctAnswer: "B) It allows defining the behavior of existing operators for user-defined types",
        },
        {
          id: 2,
          question: "Which keyword is used to overload operators in C++?",
          options: [
            "A) operator",
            "B) overload",
            "C) over",
            "D) overload_operator",
          ],
          correctAnswer: "A) operator",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "Which of the following operators cannot be overloaded in C++?",
          options: [
            "A) .",
            "B) ::",
            "C) ?",
            "D) ->",
          ],
          correctAnswer: "A) .",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "What is the syntax for overloading the + operator for a user-defined class MyClass?",
          options: [
            "A) MyClass operator+(const MyClass& obj)",
            "B) operator+ MyClass(const MyClass& obj)",
            "C) MyClass operator+(MyClass obj)",
            "D) operator+(MyClass obj)",
          ],
          correctAnswer: "A) MyClass operator+(const MyClass& obj)",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "Which of the following operators must be overloaded as a member function?",
          options: [
            "A) +",
            "B) -",
            "C) *",
            "D) /",
          ],
          correctAnswer: "A) +",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 6,
          question: "When overloading the unary minus (-) operator, how many arguments does the corresponding function take?",
          options: [
            "A) 0",
            "B) 1",
            "C) 2",
            "D) It cannot be overloaded",
          ],
          correctAnswer: "A) 0",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 7,
          question: "What is the purpose of overloading the << operator for a class?",
          options: [
            "A) To perform bitwise left shift",
            "B) To allow objects of the class to be printed using cout",
            "C) To concatenate strings",
            "D) To perform arithmetic left shift",
          ],
          correctAnswer: "B) To allow objects of the class to be printed using cout",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 8,
          question: "Which operator is used to overload the function call operator?",
          options: [
            "A) ()",
            "B) {}",
            "C) []",
            "D) <>",
          ],
          correctAnswer: "A) ()",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 9,
          question: "When overloading the subscript [] operator, which parameter should be used?",
          options: [
            "A) int",
            "B) float",
            "C) char",
            "D) It depends on the class's requirements",
          ],
          correctAnswer: "A) int",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 10,
          question: "What is the purpose of overloading the == operator?",
          options: [
            "A) To compare the memory addresses of objects",
            "B) To compare the values of two objects",
            "C) To perform logical OR operation",
            "D) To concatenate strings",
          ],
          correctAnswer: "B) To compare the values of two objects",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 11,
          question: "Which of the following is true regarding the return type of an overloaded assignment operator (=)?",
          options: [
            "A) It must be void",
            "B) It must be the same as the class type",
            "C) It can be any type",
            "D) It must be an integer",
          ],
          correctAnswer: "B) It must be the same as the class type",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 12,
          question: "What is the default behavior of the assignment operator if it is not overloaded for a user-defined class?",
          options: [
            "A) It performs a bitwise copy",
            "B) It performs a shallow copy",
            "C) It performs a deep copy",
            "D) It generates a compilation error",
          ],
          correctAnswer: "A) It performs a bitwise copy",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 13,
          question: "In C++, can the arity (number of operands) of an operator be changed during overloading?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 14,
          question: "When overloading the binary operators +, -, *, or /, how many parameters should the corresponding function take?",
          options: [
            "A) 0",
            "B) 1",
            "C) 2",
            "D) 3",
          ],
          correctAnswer: "C) 2",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 15,
          question: "Which operator is used to overload the type casting operator in C++?",
          options: [
            "A) ()",
            "B) []",
            "C) {}",
            "D) <>",
          ],
          correctAnswer: "A) ()",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 16,
          question: "What is the output of the following code snippet?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nclass Complex {\nprivate:\n    int real, imag;\npublic:\n    Complex(int r, int i) : real(r), imag(i) {}\n    Complex operator+(Complex const &obj) {\n        return Complex(real + obj.real, imag + obj.imag);\n    }\n    void display() {\n        cout << real << \" + \" << imag << \"i\";\n    }\n};\n\nint main() {\n    Complex num1(3, 4), num2(1, 2);\n    Complex sum = num1 + num2;\n    sum.display();\n    return 0;\n}\n```\na) 4 + 6i\nb) 4 + 2i\nc) 3 + 4i\nd) 3 + 2i",
          options: [
            "A) 4 + 6i",
            "B) 4 + 2i",
            "C) 3 + 4i",
            "D) 3 + 2i",
          ],
          correctAnswer: "A) 4 + 6i",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 17,
          question: "Which operator is used to overload the stream extraction operator (>>) for a class?",
          options: [
            "A) <<",
            "B) >>",
            "C) <<",
            "D) >>",
          ],
          correctAnswer: "B) >>",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 18,
          question: "When overloading the stream insertion operator (<<) for a class, what is the typical return type of the overloaded function?",
          options: [
            "A) int",
            "B) void",
            "C) ostream&",
            "D) istream&",
          ],
          correctAnswer: "C) ostream&",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 19,
          question: "What is the output of the following code snippet?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nclass Point {\nprivate:\n    int x, y;\npublic:\n    Point(int a, int b) : x(a), y(b) {}\n    Point operator+(Point const &obj) {\n        return Point(x + obj.x, y + obj.y);\n    }\n    void display() {\n        cout << \"x = \" << x << \", y = \" << y;\n    }\n};\n\nint main() {\n    Point p1(2, 3), p2(1, 2);\n    Point p3 = p1 + p2;\n    p3.display();\n    return 0;\n}\n```\na) x = 3, y = 5\nb) x = 2, y = 3\nc) x = 1, y = 2\nd) x = 2, y = 5",
          options: [
            "A) x = 3, y = 5",
            "B) x = 2, y = 3",
            "C) x = 1, y = 2",
            "D) x = 2, y = 5",
          ],
          correctAnswer: "A) x = 3, y = 5",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 20,
          question: "Which operator is used to overload the array subscript operator ([]) for a class?",
          options: [
            "A) []",
            "B) ()",
            "C) {}",
            "D) <>",
          ],
          correctAnswer: "A) []",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 21,
          question: "When overloading the array subscript operator ([]) for a class, which parameter type should be used?",
          options: [
            "A) int",
            "B) float",
            "C) char",
            "D) It depends on the class's requirements",
          ],
          correctAnswer: "A) int",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 22,
          question: "What is the purpose of overloading the == operator?",
          options: [
            "A) To compare the memory addresses of objects",
            "B) To compare the values of two objects",
            "C) To perform logical OR operation",
            "D) To concatenate strings",
          ],
          correctAnswer: "B) To compare the values of two objects",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 23,
          question: "Which of the following is true regarding the return type of an overloaded assignment operator (=)?",
          options: [
            "A) It must be void",
            "B) It must be the same as the class type",
            "C) It can be any type",
            "D) It must be an integer",
          ],
          correctAnswer: "B) It must be the same as the class type",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 24,
          question: "What is the default behavior of the assignment operator if it is not overloaded for a user-defined class?",
          options: [
            "A) It performs a bitwise copy",
            "B) It performs a shallow copy",
            "C) It performs a deep copy",
            "D) It generates a compilation error",
          ],
          correctAnswer: "A) It performs a bitwise copy",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 25,
          question: "In C++, can the arity (number of operands) of an operator be changed during overloading?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "B) No",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 26,
          question: "When overloading the binary operators +, -, *, or /, how many parameters should the corresponding function take?",
          options: [
            "A) 0",
            "B) 1",
            "C) 2",
            "D) 3",
          ],
          correctAnswer: "C) 2",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 27,
          question: "Which operator is used to overload the type casting operator in C++?",
          options: [
            "A) ()",
            "B) []",
            "C) {}",
            "D) <>",
          ],
          correctAnswer: "A) ()",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 28,
          question: "What is the output of the following code snippet?\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nclass Complex {\nprivate:\n    int real, imag;\npublic:\n    Complex(int r, int i) : real(r), imag(i) {}\n    Complex operator+(Complex const &obj) {\n        return Complex(real + obj.real, imag + obj.imag);\n    }\n    void display() {\n        cout << real << \" + \" << imag << \"i\";\n    }\n};\n\nint main() {\n    Complex num1(3, 4), num2(1, 2);\n    Complex sum = num1 + num2;\n    sum.display();\n    return 0;\n}\n```\na) 4 + 6i\nb) 4 + 2i\nc) 3 + 4i\nd) 3 + 2i",
          options: [
            "A) 4 + 6i",
            "B) 4 + 2i",
            "C) 3 + 4i",
            "D) 3 + 2i",
          ],
          correctAnswer: "A) 4 + 6i",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 29,
          question: "Which operator is used to overload the stream extraction operator (>>) for a class?",
          options: [
            "A) <<",
            "B) >>",
            "C) <<",
            "D) >>",
          ],
          correctAnswer: "B) >>",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 30,
          question: "When overloading the stream insertion operator (<<) for a class, what is the typical return type of the overloaded function?",
          options: [
            "A) int",
            "B) void",
            "C) ostream&",
            "D) istream&",
          ],
          correctAnswer: "C) ostream&",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "6.2": [
        {
          id: 1,
          question: "Unary operators can be overloaded to perform operations on:",
          options: [
            "A) Single operand",
            "B) Multiple operands",
            "C) Arrays",
            "D) None of the above",
          ],
          correctAnswer: "A) Single operand",
        },
        {
          id: 2,
          question: "Which keyword is used to overload unary operators?",
          options: [
            "A) operator",
            "B) overload",
            "C) unary",
            "D) unary_operator",
          ],
          correctAnswer: "A) operator",
        },
        {
          id: 3,
          question: "What is the syntax for overloading the unary minus (-) operator?",
          options: [
            "A) T operator-()",
            "B) T operator-(-)",
            "C) operator T-()",
            "D) T -operator()",
          ],
          correctAnswer: "A) T operator-()",
        },
        {
          id: 4,
          question: "In C++, which operator is used for incrementing an object's value by one?",
          options: ["A) ++", "B) --", "C) +", "D) -"],
          correctAnswer: "A) ++",
        },
        {
          id: 5,
          question: "What is the return type of the overloaded increment operator (++) when used as a postfix operator?",
          options: ["A) int", "B) void", "C) T&", "D) T"],
          correctAnswer: "C) T&",
        },
        {
          id: 6,
          question: "Which operator is used for overloading arithmetic operations like addition, subtraction, etc.?",
          options: ["A) +", "B) *", "C) %", "D) &"],
          correctAnswer: "A) +",
        },
        {
          id: 7,
          question: "What is the syntax for overloading the addition (+) operator for a class MyClass?",
          options: [
            "A) MyClass operator+(const MyClass&)",
            "B) operator+(const MyClass&)",
            "C) MyClass + (const MyClass&)",
            "D) operator + (const MyClass&)",
          ],
          correctAnswer: "A) MyClass operator+(const MyClass&)",
        },
        {
          id: 8,
          question: "In binary operator overloading, how many arguments are typically involved?",
          options: ["A) One", "B) Two", "C) Three", "D) It varies depending on the operator"],
          correctAnswer: "B) Two",
        },
        {
          id: 9,
          question: "What is the purpose of overloading the equality (==) operator?",
          options: [
            "A) To compare two objects for equality",
            "B) To assign one object to another",
            "C) To perform logical OR operation",
            "D) None of the above",
          ],
          correctAnswer: "A) To compare two objects for equality",
        },
        {
          id: 10,
          question: "Which operator overloading function should be marked as const if the operation doesn't modify the object?",
          options: [
            "A) Both the left-hand and right-hand operand",
            "B) Only the left-hand operand",
            "C) Only the right-hand operand",
            "D) Neither the left-hand nor the right-hand operand",
          ],
          correctAnswer: "A) Both the left-hand and right-hand operand",
        },
        {
          id: 11,
          question: "What is the return type of the overloaded stream insertion (<<) operator when used for output?",
          options: ["A) ostream&", "B) void", "C) int", "D) T&"],
          correctAnswer: "A) ostream&",
        },
        {
          id: 12,
          question: "When overloading the subscript ([]) operator, which argument is passed to the overloaded function?",
          options: ["A) Index", "B) Value", "C) Array", "D) None of the above"],
          correctAnswer: "A) Index",
        },
        {
          id: 13,
          question: "What is the purpose of overloading the assignment (=) operator?",
          options: [
            "A) To compare two objects for equality",
            "B) To assign one object to another",
            "C) To perform logical OR operation",
            "D) None of the above",
          ],
          correctAnswer: "B) To assign one object to another",
        },
        {
          id: 14,
          question: "Which operator is used to compare two objects for inequality?",
          options: ["A) !=", "B) ==", "C) <=", "D) >="],
          correctAnswer: "A) !=",
        },
        {
          id: 15,
          question: "In C++, which keyword is used to define an operator function outside the class definition?",
          options: ["A) friend", "B) public", "C) operator", "D) extern"],
          correctAnswer: "A) friend",
        },
        {
          id: 16,
          question: "What is the return type of the overloaded stream extraction (>>) operator when used for input?",
          options: ["A) istream&", "B) void", "C) int", "D) T&"],
          correctAnswer: "A) istream&",
        },
        {
          id: 17,
          question: "Which operator is used to access a class member through a pointer?",
          options: ["A) ->", "B) .", "C) ::", "D) :"],
          correctAnswer: "A) ->",
        },
        {
          id: 18,
          question: "What is the result of overloading the comma (,) operator?",
          options: ["A) A single value", "B) Multiple values", "C) A pair of values", "D) It cannot be overloaded"],
          correctAnswer: "B) Multiple values",
        },
        {
          id: 19,
          question: "When overloading the stream extraction (>>) operator, what parameter should be passed to the overloaded function?",
          options: ["A) istream&", "B) ostream&", "C) int", "D) T&"],
          correctAnswer: "A) istream&",
        },
        {
          id: 20,
          question: "What is the purpose of overloading the unary logical NOT (!) operator?",
          options: ["A) To negate a value", "B) To perform bitwise negation", "C) To perform logical OR operation", "D) None of the above"],
          correctAnswer: "A) To negate a value",
        },
        {
          id: 21,
          question: "In C++, can the subscript ([]) operator be overloaded as a static member function?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "B) No",
        },
        {
          id: 22,
          question: "What is the syntax for overloading the unary plus (+) operator?",
          options: ["A) T operator+()", "B) T +()", "C) operator+(T)", "D) operator+(void)"],
          correctAnswer: "A) T operator+()",
        },
        {
          id: 23,
          question: "Which of the following is an example of a binary operator?",
          options: ["A) +", "B) ++", "C) !", "D) ="],
          correctAnswer: "A) +",
        },
        {
          id: 24,
          question: "What is the purpose of overloading the stream insertion (<<) operator for a class?",
          options: ["A) To insert data into an object", "B) To extract data from an object", "C) To perform bitwise left shift", "D) None of the above"],
          correctAnswer: "A) To insert data into an object",
        },
        {
          id: 25,
          question: "When overloading a binary operator, how many operands are there in total?",
          options: ["A) One", "B) Two", "C) Three", "D) It varies depending on the operator"],
          correctAnswer: "B) Two",
        },
        {
          id: 26,
          question: "Which operator is used to concatenate strings in C++?",
          options: ["A) +", "B) *", "C) /", "D) -"],
          correctAnswer: "A) +",
        },
        {
          id: 27,
          question: "In C++, which keyword is used to define a function that overloads the subscript ([]) operator?",
          options: ["A) operator", "B) overload", "C) subscript", "D) None of the above"],
          correctAnswer: "A) operator",
        },
        {
          id: 28,
          question: "What is the return type of the overloaded comma (,) operator?",
          options: ["A) A single value", "B) Multiple values", "C) A pair of values", "D) It cannot be overloaded"],
          correctAnswer: "A) A single value",
        },
        {
          id: 29,
          question: "When overloading the stream insertion (<<) operator, which parameter should be passed to the overloaded function?",
          options: ["A) ostream&", "B) istream&", "C) int", "D) T&"],
          correctAnswer: "A) ostream&",
        },
        {
          id: 30,
          question: "What is the purpose of overloading the dereference (*) operator?",
          options: [
            "A) To access the value pointed to by a pointer",
            "B) To perform multiplication",
            "C) To perform logical AND operation",
            "D) None of the above",
          ],
          correctAnswer: "A) To access the value pointed to by a pointer",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
  
    },
    //chapter 6 ended



    7: {
      // Chapter 7
      "7.1": [
        {
          id: 1,
          question: "What is the purpose of a base class in C++?",
          options: [
            "A) To provide a blueprint for derived classes",
            "B) To store data members",
            "C) To restrict access to derived classes",
            "D) None of the above",
          ],
          correctAnswer: "A) To provide a blueprint for derived classes",
        },
        {
          id: 2,
          question: "Which keyword is used to indicate inheritance in C++?",
          options: [
            "A) inherit",
            "B) extends",
            "C) : (colon)",
            "D) inheritFrom",
          ],
          correctAnswer: "C) : (colon)",
        },
        {
          id: 3,
          question: "In C++, which inheritance mode allows public members of the base class to be accessible in the derived class?",
          options: [
            "A) Public",
            "B) Private",
            "C) Protected",
            "D) None of the above",
          ],
          correctAnswer: "A) Public",
        },
        {
          id: 4,
          question: "In private inheritance, what is the access level of base class members in the derived class?",
          options: [
            "A) Public",
            "B) Private",
            "C) Protected",
            "D) Depends on the member",
          ],
          correctAnswer: "B) Private",
        },
        {
          id: 5,
          question: "Which inheritance mode is not recommended because it limits the accessibility of base class members in the derived class?",
          options: [
            "A) Public",
            "B) Private",
            "C) Protected",
            "D) It depends on the specific use case",
          ],
          correctAnswer: "B) Private",
        },
        {
          id: 6,
          question: "What happens if you try to create an instance of an abstract base class?",
          options: [
            "A) It will compile successfully",
            "B) It will result in a compile-time error",
            "C) It will result in a run-time error",
            "D) None of the above",
          ],
          correctAnswer: "B) It will result in a compile-time error",
        },
        {
          id: 7,
          question: "When should you use protected inheritance?",
          options: [
            "A) When you want to restrict access to derived classes",
            "B) When you want to grant access only to specific members of the base class",
            "C) When you want to inherit implementation details without exposing them",
            "D) None of the above",
          ],
          correctAnswer: "C) When you want to inherit implementation details without exposing them",
        },
        {
          id: 8,
          question: "Which of the following is an example of multiple inheritance?",
          options: [
            "A) A class inheriting from one base class",
            "B) A class inheriting from two or more base classes",
            "C) A class inheriting from a derived class",
            "D) None of the above",
          ],
          correctAnswer: "B) A class inheriting from two or more base classes",
        },
        {
          id: 9,
          question: "In C++, can a derived class inherit from multiple base classes of the same name?",
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on the access specifiers used",
            "D) None of the above",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 10,
          question: "Which access specifier is used by default if none is specified when inheriting a class?",
          options: [
            "A) Public",
            "B) Private",
            "C) Protected",
            "D) It is an error to not specify an access specifier",
          ],
          correctAnswer: "B) Private",
        },
        {
          id: 11,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                int value;
            }

            class Derived : private Base {
            }
          `,
          options: [
            "A) It will compile and run successfully",
            "B) It will result in a compile-time error",
            "C) It will result in a run-time error",
            "D) None of the above",
          ],
          correctAnswer: "B) It will result in a compile-time error",
        },
        {
          id: 12,
          question: "In C++, can a derived class access private members of the base class?",
          options: [
            "A) Yes, always",
            "B) No, never",
            "C) It depends on the mode of inheritance",
            "D) None of the above",
          ],
          correctAnswer: "B) No, never",
        },
        {
          id: 13,
          question: "Consider the following code:",
          code: `
            class Base {
              protected:
                int value;
            }

            class Derived : public Base {
              public:
                void setValue(int val) {
                  value = val;
                }
            }
          `,
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on how Derived is instantiated",
            "D) None of the above",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 14,
          question: "Which of the following is an advantage of using protected inheritance?",
          options: [
            "A) It provides tighter encapsulation",
            "B) It allows access to all members of the base class",
            "C) It is more memory-efficient",
            "D) None of the above",
          ],
          correctAnswer: "A) It provides tighter encapsulation",
        },
        {
          id: 15,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                void display() {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : public Base {
              private:
                void display() {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) 'Base Class' will be printed",
            "B) 'Derived Class' will be printed",
            "C) It will result in a compile-time error",
            "D) It will result in a run-time error",
          ],
          correctAnswer: "A) 'Base Class' will be printed",
        },
        {
          id: 16,
          question: "When is it appropriate to use private inheritance?",
          options: [
            "A) When you want to restrict access to all members of the base class",
            "B) When you want to implement composition instead of inheritance",
            "C) When you want to restrict access to specific members of the base class",
            "D) None of the above",
          ],
          correctAnswer: "B) When you want to implement composition instead of inheritance",
        },
        {
          id: 17,
          question: "In C++, can a derived class override a private member function of the base class?",
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on the mode of inheritance",
            "D) None of the above",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 18,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                virtual void show() {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : public Base {
              public:
                void show() override {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on how Derived is instantiated",
            "D) None of the above",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 19,
          question: "In which type of inheritance mode can a derived class be passed as an argument to a function that expects a base class?",
          options: [
            "A) Public",
            "B) Private",
            "C) Protected",
            "D) All of the above",
          ],
          correctAnswer: "A) Public",
        },
        {
          id: 20,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                virtual void show() const {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : public Base {
              public:
                void show() override {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) 'Base Class' will be printed",
            "B) 'Derived Class' will be printed",
            "C) It will result in a compile-time error",
            "D) It will result in a run-time error",
          ],
          correctAnswer: "A) 'Base Class' will be printed",
        },
        {
          id: 21,
          question: "In C++, can a base class pointer point to a derived class object?",
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on the mode of inheritance",
            "D) None of the above",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 22,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                virtual void show() {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : public Base {
              public:
                void show() {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) 'Base Class' will be printed",
            "B) 'Derived Class' will be printed",
            "C) It will result in a compile-time error",
            "D) It will result in a run-time error",
          ],
          correctAnswer: "B) 'Derived Class' will be printed",
        },
        {
          id: 23,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                virtual void show() = 0;
            }

            class Derived : public Base {
              public:
                void show() override {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) Public",
            "B) Private",
            "C) Protected",
            "D) None of the above",
          ],
          correctAnswer: "A) Public",
        },
        {
          id: 24,
          question: "In C++, can a derived class have its own data members in addition to the ones inherited from the base class?",
          options: [
            "A) Yes, always",
            "B) No, never",
            "C) It depends on the mode of inheritance",
            "D) None of the above",
          ],
          correctAnswer: "A) Yes, always",
        },
        {
          id: 25,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                virtual void show() const {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : public Base {
              public:
                void show() const override {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on how Derived is instantiated",
            "D) None of the above",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 26,
          question: "When is it appropriate to use public inheritance?",
          options: [
            "A) When you want to restrict access to all members of the base class",
            "B) When you want to implement composition instead of inheritance",
            "C) When you want to inherit implementation details without exposing them",
            "D) None of the above",
          ],
          correctAnswer: "C) When you want to inherit implementation details without exposing them",
        },
        {
          id: 27,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                void display() {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : public Base {
              public:
                void display() const {
                  cout << "Derived Class" << endl;
                }
            }
          `,
          options: [
            "A) 'Base Class' will be printed",
            "B) 'Derived Class' will be printed",
            "C) It will result in a compile-time error",
            "D) It will result in a run-time error",
          ],
          correctAnswer: "B) 'Derived Class' will be printed",
        },
        {
          id: 28,
          question: "In C++, can a derived class change the access level of a member inherited from the base class?",
          options: [
            "A) Yes, always",
            "B) No, never",
            "C) It depends on the mode of inheritance",
            "D) None of the above",
          ],
          correctAnswer: "B) No, never",
        },
        {
          id: 29,
          question: "Consider the following code:",
          code: `
            class Base {
              public:
                void show() {
                  cout << "Base Class" << endl;
                }
            }

            class Derived : private Base {
              public:
                using Base::show;
            }
          `,
          options: [
            "A) It makes the show function public in the Derived class",
            "B) It hides the show function in the Base class",
            "C) It makes the show function private in the Derived class",
            "D) None of the above",
          ],
          correctAnswer: "A) It makes the show function public in the Derived class",
        },
        {
          id: 30,
          question: "In C++, can a derived class have multiple base classes with the same name but different implementations?",
          options: [
            "A) Yes",
            "B) No",
            "C) It depends on the mode of inheritance",
            "D) None of the above",
          ],
          correctAnswer: "A) Yes",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "7.2": [
        {
          id: 1,
          question: "Which type of inheritance involves a single base class and a single derived class?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "A) Single Inheritance",
        },
        {
          id: 2,
          question: "In multilevel inheritance, how many levels of classes can be created?",
          options: [
            "A) 2",
            "B) 3",
            "C) 4",
            "D) 5",
          ],
          correctAnswer: "B) 3",
        },
        {
          id: 3,
          question: "Which type of inheritance involves a derived class having multiple base classes?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "C) Multiple Inheritance",
        },
        {
          id: 4,
          question: "In multiple inheritance, what can be a possible issue to watch out for?",
          options: [
            "A) Diamond Problem",
            "B) Triangle Problem",
            "C) Square Problem",
            "D) Circle Problem",
          ],
          correctAnswer: "A) Diamond Problem",
        },
        {
          id: 5,
          question: "Which type of inheritance involves multiple derived classes inheriting from a single base class?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "D) Hierarchical Inheritance",
        },
        {
          id: 6,
          question: "What is the correct syntax for implementing single inheritance in C++?",
          options: [
            "A) class DerivedClass : BaseClass",
            "B) class BaseClass < DerivedClass",
            "C) class DerivedClass > BaseClass",
            "D) class DerivedClass - BaseClass",
          ],
          correctAnswer: "A) class DerivedClass : BaseClass",
        },
        {
          id: 7,
          question: "In multilevel inheritance, can a derived class have its own unique member variables?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 8,
          question: "Which keyword is used to inherit a class in C++?",
          options: [
            "A) inherit",
            "B) extends",
            "C) : public",
            "D) inherits",
          ],
          correctAnswer: "C) : public",
        },
        {
          id: 9,
          question: "In multiple inheritance, if both base classes have a member with the same name, how can you resolve the ambiguity?",
          options: [
            "A) Use virtual inheritance",
            "B) Ignore the ambiguity",
            "C) Rename one of the members",
            "D) Use friend functions",
          ],
          correctAnswer: "A) Use virtual inheritance",
        },
        {
          id: 10,
          question: "Which type of inheritance is a combination of two or more types of inheritance?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hybrid Inheritance",
          ],
          correctAnswer: "D) Hybrid Inheritance",
        },
        {
          id: 11,
          question: "What is the main advantage of using inheritance in object-oriented programming?",
          options: [
            "A) Code reusability",
            "B) Code obfuscation",
            "C) Code optimization",
            "D) Code encryption",
          ],
          correctAnswer: "A) Code reusability",
        },
        {
          id: 12,
          question: "Which type of inheritance allows a derived class to inherit members from multiple base classes?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "C) Multiple Inheritance",
        },
        {
          id: 13,
          question: "In multilevel inheritance, can a derived class be used as a base class for another class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 14,
          question: "Which type of inheritance can lead to the 'deadly diamond of death' problem?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "C) Multiple Inheritance",
        },
        {
          id: 15,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass A {\n  public:\n    void display() {\n        cout << 'Class A' << endl;\n    }\n};\n\nclass B : public A {\n  public:\n    void display() {\n        cout << 'Class B' << endl;\n    }\n};\n\nint main() {\n    B b;\n    b.display();\n    return 0;\n}\n```",
          options: [
            "A) Class A",
            "B) Class B",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Class B",
        },
        {
          id: 16,
          question: "In multiple inheritance, how is the order of constructor and destructor calls determined?",
          options: [
            "A) In the order of declaration",
            "B) In the reverse order of declaration",
            "C) In an arbitrary order",
            "D) Compiler-dependent",
          ],
          correctAnswer: "A) In the order of declaration",
        },
        {
          id: 17,
          question: "Which type of inheritance is commonly used in modeling real-world scenarios like a hierarchy of animals?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "B) Multilevel Inheritance",
        },
        {
          id: 18,
          question: "In multiple inheritance, if both base classes have a member with the same name, how can you access a specific member in the derived class?",
          options: [
            "A) Use scope resolution operator",
            "B) It's not possible",
            "C) Use the this pointer",
            "D) Use friend functions",
          ],
          correctAnswer: "A) Use scope resolution operator",
        },
        {
          id: 19,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass A {\n  public:\n    void display() {\n        cout << 'Class A' << endl;\n    }\n};\n\nclass B : public A {};\n\nint main() {\n    B b;\n    b.display();\n    return 0;\n}\n```",
          options: [
            "A) Class A",
            "B) Compilation Error",
            "C) Runtime Error",
            "D) No Output",
          ],
          correctAnswer: "A) Class A",
        },
        {
          id: 20,
          question: "Which type of inheritance can lead to the creation of a complex class hierarchy?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "C) Multiple Inheritance",
        },
        {
          id: 21,
          question: "In hierarchical inheritance, how many derived classes can inherit from a single base class?",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) Any number",
          ],
          correctAnswer: "D) Any number",
        },
        {
          id: 22,
          question: "Which keyword is used to specify virtual inheritance in C++?",
          options: [
            "A) virtual",
            "B) inherit",
            "C) base",
            "D) extend",
          ],
          correctAnswer: "A) virtual",
        },
        {
          id: 23,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass A {\n  public:\n    void display() {\n        cout << 'Class A' << endl;\n    }\n};\n\nclass B : virtual public A {};\n\nint main() {\n    B b;\n    b.display();\n    return 0;\n}\n```",
          options: [
            "A) Class A",
            "B) Compilation Error",
            "C) Runtime Error",
            "D) No Output",
          ],
          correctAnswer: "A) Class A",
        },
        {
          id: 24,
          question: "In multilevel inheritance, can a derived class override a method defined in its base class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 25,
          question: "Which type of inheritance is considered more complex due to potential conflicts between inherited members?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "C) Multiple Inheritance",
        },
        {
          id: 26,
          question: "What is the purpose of virtual inheritance in C++?",
          options: [
            "A) To allow a class to inherit from multiple base classes",
            "B) To prevent the creation of objects of a class",
            "C) To resolve ambiguity in multiple inheritance",
            "D) To create an abstract base class",
          ],
          correctAnswer: "C) To resolve ambiguity in multiple inheritance",
        },
        {
          id: 27,
          question: "Which type of inheritance is used when you want to create a specialization of a base class?",
          options: [
            "A) Single Inheritance",
            "B) Multilevel Inheritance",
            "C) Multiple Inheritance",
            "D) Hierarchical Inheritance",
          ],
          correctAnswer: "A) Single Inheritance",
        },
        {
          id: 28,
          question: "In multiple inheritance, what is the order of base class initialization in the derived class?",
          options: [
            "A) In the order of declaration",
            "B) In the reverse order of declaration",
            "C) In an arbitrary order",
            "D) Compiler-dependent",
          ],
          correctAnswer: "B) In the reverse order of declaration",
        },
        {
          id: 29,
          question: "What is the output of the following C++ code?\n\n```cpp\n#include<iostream>\nusing namespace std;\n\nclass A {\n  public:\n    void display() {\n        cout << 'Class A' << endl;\n    }\n};\n\nclass B : public A {\n  public:\n    void show() {\n        cout << 'Class B' << endl;\n    }\n};\n\nint main() {\n    B b;\n    b.display();\n    b.show();\n    return 0;\n}\n```",
          options: [
            "A) Class A Class B",
            "B) Class B Class A",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) Class A Class B",
        },
        {
          id: 30,
          question: "In hybrid inheritance, which combination of inheritances is possible?",
          options: [
            "A) Single and Multilevel",
            "B) Multilevel and Multiple",
            "C) Single and Multiple",
            "D) Multilevel, Multiple, and Hierarchical",
          ],
          correctAnswer: "D) Multilevel, Multiple, and Hierarchical",
        },
        // Add more questions for subchapter 1.1 as needed
      ],

      "7.3": [
        {
          id: 1,
          question: "What are the three derivation modes in C++?",
          options: [
            "A) public, protected, hidden",
            "B) public, private, protected",
            "C) open, closed, restricted",
            "D) accessible, non-accessible, restricted",
          ],
          correctAnswer: "B) public, private, protected",
        },
        {
          id: 2,
          question: "Which access specifier allows a class to inherit its members?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) static",
          ],
          correctAnswer: "A) public",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "In C++, which access specifier is used by default for members of a class?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) static",
          ],
          correctAnswer: "B) private",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "When using a virtual base class, which problem does it help to resolve?",
          options: [
            "A) Diamond problem",
            "B) Inheritance ambiguity",
            "C) Multiple inheritance issue",
            "D) Access specifier conflict",
          ],
          correctAnswer: "A) Diamond problem",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "Which keyword is used to declare a class as a virtual base class in C++?",
          options: [
            "A) virtual",
            "B) base",
            "C) vbase",
            "D) abstract",
          ],
          correctAnswer: "A) virtual",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 6,
          question: "In a derived class, which constructor is called first?",
          options: [
            "A) Base class constructor",
            "B) Derived class constructor",
            "C) They are called simultaneously",
            "D) Depends on the situation",
          ],
          correctAnswer: "A) Base class constructor",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 7,
          question: "What is the purpose of a constructor in a derived class?",
          options: [
            "A) To initialize base class members",
            "B) To initialize derived class members",
            "C) To allocate memory for objects",
            "D) To define inheritance mode",
          ],
          correctAnswer: "A) To initialize base class members",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 8,
          question: "Which of the following is true about constructors in a derived class?",
          options: [
            "A) They must have the same name as the derived class",
            "B) They cannot have default arguments",
            "C) They cannot call base class constructor explicitly",
            "D) They cannot be overloaded",
          ],
          correctAnswer: "A) They must have the same name as the derived class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 9,
          question: "What happens if a derived class does not have a constructor?",
          options: [
            "A) The default constructor of the derived class will be created automatically",
            "B) The base class constructor will be called",
            "C) It will use the constructor of the nearest ancestor",
            "D) It will cause a compilation error",
          ],
          correctAnswer: "A) The default constructor of the derived class will be created automatically",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 10,
          question: "Which keyword is used to call a base class constructor explicitly in a derived class constructor?",
          options: [
            "A) base",
            "B) super",
            "C) this",
            "D) parent",
          ],
          correctAnswer: "A) base",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 11,
          question: "In a multiple inheritance scenario, how can you resolve ambiguity if two base classes have a member with the same name?",
          options: [
            "A) Use explicit scope resolution",
            "B) Use a virtual base class",
            "C) Use a derived class",
            "D) Rename the members",
          ],
          correctAnswer: "A) Use explicit scope resolution",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 12,
          question: "Which access specifier allows a derived class to access the protected members of its base class?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) static",
          ],
          correctAnswer: "C) protected",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 13,
          question: "In a derived class, can you change the access specifier of an inherited member?",
          options: [
            "A) No",
            "B) Yes",
          ],
          correctAnswer: "A) No",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 14,
          question: "When using multiple inheritance, what is the order of constructor execution?",
          options: [
            "A) Leftmost base class first, then rightmost base class",
            "B) Rightmost base class first, then leftmost base class",
            "C) Random order",
            "D) Compiler dependent",
          ],
          correctAnswer: "A) Leftmost base class first, then rightmost base class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 15,
          question: "Which access specifier allows a derived class to access the private members of its base class indirectly?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) friend",
          ],
          correctAnswer: "D) friend",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 16,
          question: "In a multiple inheritance scenario, which type of inheritance should be avoided to prevent the Diamond problem?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) virtual",
          ],
          correctAnswer: "A) public",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 17,
          question: "What is the purpose of a destructor in a derived class?",
          options: [
            "A) To clean up resources before the object is destroyed",
            "B) To deallocate memory for base class objects",
            "C) To deallocate memory for derived class objects",
            "D) To define the destruction mode of base class",
          ],
          correctAnswer: "A) To clean up resources before the object is destroyed",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 18,
          question: "Which access specifier allows a derived class to inherit constructors of its base class?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) static",
          ],
          correctAnswer: "A) public",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 19,
          question: "In a derived class, can you override a private member of the base class?",
          options: [
            "A) No",
            "B) Yes",
          ],
          correctAnswer: "A) No",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 20,
          question: "Which type of inheritance allows a class to inherit from multiple base classes at the same time?",
          options: [
            "A) Multiple inheritance",
            "B) Hierarchical inheritance",
            "C) Multilevel inheritance",
            "D) Single inheritance",
          ],
          correctAnswer: "A) Multiple inheritance",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 21,
          question: "What is the output of the following code snippet?\nclass A {\npublic:\n    int value;\n    A() : value(10) {}\n};\n\nclass B : public A {\npublic:\n    B() : value(20) {}\n};\n\nint main() {\n    B b;\n    cout << b.value << endl;\n    return 0;\n}\na) 10\nb) 20\nc) Compilation error\nd) Runtime error",
          options: [
            "A) 10",
            "B) 20",
            "C) Compilation error",
            "D) Runtime error",
          ],
          correctAnswer: "B) 20",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 22,
          question: "Which keyword is used to prevent a class from being inherited by other classes?",
          options: [
            "A) prevent",
            "B) final",
            "C) sealed",
            "D) restrict",
          ],
          correctAnswer: "B) final",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 23,
          question: "In a derived class, can you inherit a constructor from a base class with arguments?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 24,
          question: "What is the output of the following code snippet?\nclass A {\npublic:\n    A(int x) {}\n};\n\nclass B : public A {\npublic:\n    B(int y) {}\n};\n\nint main() {\n    B b(10);\n    return 0;\n}\na) Compilation error\nb) Runtime error\nc) No output\nd) The code runs successfully",
          options: [
            "A) Compilation error",
            "B) Runtime error",
            "C) No output",
            "D) The code runs successfully",
          ],
          correctAnswer: "A) Compilation error",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 25,
          question: "Which access specifier restricts access to members only within the same class and its derived classes?",
          options: [
            "A) public",
            "B) private",
            "C) protected",
            "D) internal",
          ],
          correctAnswer: "C) protected",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 26,
          question: "In a derived class, can you access the private members of the base class through a friend function?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 27,
          question: "What is the output of the following code snippet?\nclass A {\nprotected:\n    int x;\npublic:\n    A(int y) : x(y) {}\n};\n\nclass B : public A {\npublic:\n    int get_x() { return x; }\n};\n\nint main() {\n    B b(5);\n    cout << b.get_x() << endl;\n    return 0;\n}\na) 5\nb) Compilation error\nc) Runtime error\nd) 0",
          options: [
            "A) 5",
            "B) Compilation error",
            "C) Runtime error",
            "D) 0",
          ],
          correctAnswer: "A) 5",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 28,
          question: "In a derived class, can you override a protected member of the base class?",
          options: [
            "A) Yes",
            "B) No",
          ],
          correctAnswer: "A) Yes",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 29,
          question: "What is the purpose of making a base class destructor virtual?",
          options: [
            "A) To ensure proper cleanup of resources in polymorphic scenarios",
            "B) To allow derived classes to inherit the destructor",
            "C) To prevent memory leaks",
            "D) To improve performance",
          ],
          correctAnswer: "A) To ensure proper cleanup of resources in polymorphic scenarios",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 30,
          question: "What is the output of the following code snippet?\nclass A {\npublic:\n    virtual void display() { cout << 'A'; }\n};\n\nclass B : public A {\npublic:\n    void display() { cout << 'B'; }\n};\n\nint main() {\n    A* ptr = new B;\n    ptr->display();\n    delete ptr;\n    return 0;\n}\na) A\nb) B\nc) Compilation error\nd) Runtime error",
          options: [
            "A) A",
            "B) B",
            "C) Compilation error",
            "D) Runtime error",
          ],
          correctAnswer: "B) B",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
  
    },
    //chapter 7 ended




    8: {
      // Chapter 8
      "8.1": [
        {
          id: 1,
          question: "What is a pointer in C++?",
          options: [
            "A) A variable that stores the address of another variable",
            "B) A variable that stores the value of another variable",
            "C) A variable that stores a reference to another variable",
            "D) A variable that stores a string value",
          ],
          correctAnswer: "A) A variable that stores the address of another variable",
        },
        {
          id: 2,
          question: "How do you declare a pointer in C++?",
          options: [
            "A) int ptr;",
            "B) int *ptr;",
            "C) pointer ptr;",
            "D) *int ptr;",
          ],
          correctAnswer: "B) int *ptr;",
        },
        {
          id: 3,
          question: "What is the result of the following code?\nint num = 10;\nint *ptr = &num;\ncout << *ptr;",
          options: [
            "A) 10",
            "B) The address of 'num'",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "A) 10",
        },
        {
          id: 4,
          question: "What is the output of the following code?\nint arr[5] = {1, 2, 3, 4, 5};\nint *ptr = arr;\ncout << *ptr;",
          options: [
            "A) 1",
            "B) The address of 'arr'",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "A) 1",
        },
        {
          id: 5,
          question: "How do you initialize a pointer to null in C++?",
          options: [
            "A) int *ptr = NULL;",
            "B) int *ptr = 0;",
            "C) int *ptr = nullptr;",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 6,
          question: "Which operator is used to access the value pointed to by a pointer in C++?",
          options: [
            "A) *",
            "B) &",
            "C) ->",
            "D) .",
          ],
          correctAnswer: "A) *",
        },
        {
          id: 7,
          question: "What is the output of the following code?\nint num = 5;\nint *ptr = &num;\n*ptr = 7;\ncout << num;",
          options: [
            "A) 5",
            "B) 7",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 7",
        },
        {
          id: 8,
          question: "Which of the following is a valid pointer declaration?",
          options: [
            "A) int ptr;",
            "B) int * ptr;",
            "C) int ptr;",
            "D) All of the above",
          ],
          correctAnswer: "D) All of the above",
        },
        {
          id: 9,
          question: "What is the size of a pointer in C++ (on a 32-bit system)?",
          options: [
            "A) 2 bytes",
            "B) 4 bytes",
            "C) 8 bytes",
            "D) Depends on the compiler",
          ],
          correctAnswer: "B) 4 bytes",
        },
        {
          id: 10,
          question: "What does the following code do?\nint *ptr = new int;",
          options: [
            "A) Declares a pointer without initialization",
            "B) Allocates memory for an integer on the heap and assigns its address to 'ptr'",
            "C) Causes a memory leak",
            "D) None of the above",
          ],
          correctAnswer: "B) Allocates memory for an integer on the heap and assigns its address to 'ptr'",
        },
        {
          id: 11,
          question: "What is the output of the following code?\nint num = 10;\nint *ptr = &num;\nint **ptr2 = &ptr;\ncout << **ptr2;",
          options: [
            "A) 10",
            "B) The address of 'num'",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "A) 10",
        },
        {
          id: 12,
          question: "Which of the following statements is true about pointers?",
          options: [
            "A) Pointers can only store integers",
            "B) Pointers cannot be used with arrays",
            "C) Pointers can be used to dynamically allocate memory",
            "D) Pointers are used for string manipulation",
          ],
          correctAnswer: "C) Pointers can be used to dynamically allocate memory",
        },
        {
          id: 13,
          question: "What is the output of the following code?\nint num = 5;\nint *ptr = &num;\n*ptr = 7;\ncout << **ptr2;",
          options: [
            "A) 5",
            "B) 7",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 7",
        },
        {
          id: 14,
          question: "How do you delete a dynamically allocated array in C++?",
          options: [
            "A) delete arr;",
            "B) delete[] arr;",
            "C) free(arr);",
            "D) None of the above",
          ],
          correctAnswer: "B) delete[] arr;",
        },
        {
          id: 15,
          question: "What is the output of the following code?\nint num = 10;\nint *ptr = &num;\nint &ref = *ptr;\nref = 15;\ncout << num;",
          options: [
            "A) 10",
            "B) 15",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 15",
        },
        {
          id: 16,
          question: "What is a null pointer in C++?",
          options: [
            "A) A pointer that points to the first element of an array",
            "B) A pointer that points to an invalid memory location",
            "C) A pointer that points to the address 0",
            "D) A pointer that has not been initialized",
          ],
          correctAnswer: "C) A pointer that points to the address 0",
        },
        {
          id: 17,
          question: "What is a dangling pointer in C++?",
          options: [
            "A) A pointer that points to a deallocated memory location",
            "B) A pointer that points to a valid memory location",
            "C) A pointer that points to the end of an array",
            "D) A pointer that points to a null value",
          ],
          correctAnswer: "A) A pointer that points to a deallocated memory location",
        },
        {
          id: 18,
          question: "Which of the following is true about the relationship between arrays and pointers in C++?",
          options: [
            "A) Arrays can be used as pointers, but pointers cannot be used as arrays",
            "B) Pointers can be used as arrays, but arrays cannot be used as pointers",
            "C) Arrays and pointers are interchangeable in all situations",
            "D) Arrays and pointers are separate concepts and cannot be used interchangeably",
          ],
          correctAnswer: "B) Pointers can be used as arrays, but arrays cannot be used as pointers",
        },
        {
          id: 19,
          question: "What is the output of the following code?\nint *ptr = nullptr;\nif (ptr) {\n    cout << 'Pointer is valid';\n} else {\n    cout << 'Pointer is null';\n}",
          options: [
            "A) Pointer is valid",
            "B) Pointer is null",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) Pointer is null",
        },
        {
          id: 20,
          question: "What does the 'const' keyword do when used with a pointer in C++?",
          options: [
            "A) It makes the pointer constant, meaning it cannot be reassigned",
            "B) It makes the value pointed to by the pointer constant, meaning it cannot be modified",
            "C) It makes both the pointer and the value constant",
            "D) It has no effect when used with a pointer",
          ],
          correctAnswer: "B) It makes the value pointed to by the pointer constant, meaning it cannot be modified",
        },
        {
          id: 21,
          question: "What is the output of the following code?\nint arr[5] = {1, 2, 3, 4, 5};\nint *ptr = arr;\ncout << *(ptr + 2);",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) Compiler error",
          ],
          correctAnswer: "C) 3",
        },
        {
          id: 22,
          question: "What is the output of the following code?\nint num = 10;\nint *ptr = &num;\nint *ptr2 = ptr;\n*ptr2 = 15;\ncout << num;",
          options: [
            "A) 10",
            "B) 15",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 15",
        },
        {
          id: 23,
          question: "When should you use pointers in C++?",
          options: [
            "A) Whenever possible",
            "B) Only when dealing with arrays",
            "C) Only when working with dynamic memory allocation",
            "D) When you need to work with addresses or manipulate memory directly",
          ],
          correctAnswer: "D) When you need to work with addresses or manipulate memory directly",
        },
        {
          id: 24,
          question: "What is the output of the following code?\nint *ptr = nullptr;\nint num = 5;\nptr = &num;\ncout << *ptr;",
          options: [
            "A) 0",
            "B) 5",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 5",
        },
        {
          id: 25,
          question: "What is the purpose of the 'this' pointer in C++?",
          options: [
            "A) It is a pointer to the current object in a class method",
            "B) It is a pointer to the previous object in a class method",
            "C) It is a pointer to the next object in a class method",
            "D) It is a pointer to the base class object",
          ],
          correctAnswer: "A) It is a pointer to the current object in a class method",
        },
        {
          id: 26,
          question: "What is the output of the following code?\nint num = 10;\nint *ptr = &num;\nint &ref = *ptr;\nref = 15;\ncout << *ptr;",
          options: [
            "A) 10",
            "B) 15",
            "C) Compiler error",
            "D) Undefined behavior",
          ],
          correctAnswer: "B) 15",
        },
        {
          id: 27,
          question: "Which of the following statements is true about pointer arithmetic in C++?",
          options: [
            "A) Pointer arithmetic is only allowed for pointers to arrays",
            "B) Adding 1 to a pointer moves it forward by the size of the data type it points to",
            "C) Subtracting 1 from a pointer moves it backward by the size of the data type it points to",
            "D) Pointer arithmetic is not allowed in C++",
          ],
          correctAnswer: "B) Adding 1 to a pointer moves it forward by the size of the data type it points to",
        },
        {
          id: 28,
          question: "What is the output of the following code?\nint arr[5] = {1, 2, 3, 4, 5};\nint *ptr = arr;\ncout << ptr[2];",
          options: [
            "A) 1",
            "B) 2",
            "C) 3",
            "D) 4",
          ],
          correctAnswer: "C) 3",
        },
        {
          id: 29,
          question: "What is a double pointer in C++?",
          options: [
            "A) A pointer that can point to both integers and floats",
            "B) A pointer that can point to two different memory locations simultaneously",
            "C) A pointer that points to another pointer",
            "D) A pointer that has twice the memory size of a regular pointer",
          ],
          correctAnswer: "C) A pointer that points to another pointer",
        },
        {
          id: 30,
          question: "What is the output of the following code?\nint *ptr = nullptr;\nint num = 5;\nptr = &num;\n*ptr = 7;\ncout << *ptr;",
          options: [
            "A) 0",
            "B) 5",
            "C) 7",
            "D) Compiler error",
          ],
          correctAnswer: "C) 7",
        },
      ],
      "8.2": [
        {
          id: 1,
          question: "What does the this pointer represent in C++?",
          options: [
            "A) It points to the current object",
            "B) It points to the previous object",
            "C) It points to the next object",
            "D) It points to the base class object",
          ],
          correctAnswer: "A) It points to the current object",
        },
        {
          id: 2,
          question: "In C++, this pointer is available in which type of functions?",
          options: [
            "A) Member functions",
            "B) Static functions",
            "C) Friend functions",
            "D) Global functions",
          ],
          correctAnswer: "A) Member functions",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "What is the type of this pointer in C++?",
          options: [
            "A) int",
            "B) float",
            "C) pointer to const",
            "D) pointer to non-const",
          ],
          correctAnswer: "D) pointer to non-const",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 4,
          question: "Which keyword is used to declare a pointer to a derived class object in C++?",
          options: [
            "A) super",
            "B) base",
            "C) this",
            "D) none of the above",
          ],
          correctAnswer: "D) none of the above",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 5,
          question: "What is the result of the following code snippet?\nclass Base {\npublic:\n    void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Derived d;\n    d.display();\n    return 0;\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Derived Class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 6,
          question: "When a derived class object is assigned to a base class pointer, which part of the object is accessible?",
          options: [
            "A) Both base class and derived class members",
            "B) Only base class members",
            "C) Only derived class members",
            "D) None of the above",
          ],
          correctAnswer: "B) Only base class members",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 7,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base* ptr = new Derived;\n    ptr->display();\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Derived Class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 8,
          question: "Which operator is used to access a member through a pointer in C++?",
          options: [
            "A) .",
            "B) ->",
            "C) ::",
            "D) :",
          ],
          correctAnswer: "B) ->",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 9,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base* ptr = new Derived;\n    Base* dptr = dynamic_cast<Derived*>(ptr);\n    if (dptr == nullptr) {\n        cout << 'Conversion failed';\n    } else {\n        cout << 'Conversion successful';\n    }\n    return 0;\n}\nA) Conversion failed\nB) Conversion successful\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Conversion failed",
            "B) Conversion successful",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) Conversion failed",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 10,
          question: "When using multiple inheritance, how is ambiguity resolved when accessing a common member using a base class pointer?",
          options: [
            "A) By using the most derived class",
            "B) By using the first base class",
            "C) By using the last base class",
            "D) By using the base class with the highest priority",
          ],
          correctAnswer: "C) By using the last base class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 11,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base* ptr = new Derived;\n    ptr->display();\n    return 0;\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Derived Class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 12,
          question: "In C++, when deleting a derived class object through a base class pointer, which destructor(s) is/are called?",
          options: [
            "A) Base class destructor only",
            "B) Derived class destructor only",
            "C) Both base class and derived class destructors",
            "D) None of the above",
          ],
          correctAnswer: "C) Both base class and derived class destructors",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 13,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Derived d;\n    Base* ptr = &d;\n    ptr->display();\n    return 0;\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Derived Class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 14,
          question: "In C++, what happens if a derived class object is assigned to a base class object?",
          options: [
            "A) Only base class members are copied",
            "B) Only derived class members are copied",
            "C) Both base class and derived class members are copied",
            "D) Compilation Error",
          ],
          correctAnswer: "A) Only base class members are copied",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 15,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void show() {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base* ptr = new Derived;\n    ptr->show();\n    return 0;\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "C) Compilation Error",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 16,
          question: "In C++, how can you avoid the 'diamond problem' when using multiple inheritance?",
          options: [
            "A) By using virtual inheritance",
            "B) By using private inheritance",
            "C) By using protected inheritance",
            "D) By using static inheritance",
          ],
          correctAnswer: "A) By using virtual inheritance",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 17,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base b;\n    Derived* dptr = dynamic_cast<Derived*>(&b);\n    if (dptr == nullptr) {\n        cout << 'Conversion failed';\n    } else {\n        cout << 'Conversion successful';\n    }\n    return 0;\n}\nA) Conversion failed\nB) Conversion successful\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Conversion failed",
            "B) Conversion successful",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) Conversion failed",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 18,
          question: "In C++, what is the purpose of a pure virtual function in an abstract base class?",
          options: [
            "A) It has no purpose and is invalid",
            "B) It provides a default implementation for derived classes",
            "C) It enforces derived classes to provide their own implementation",
            "D) It is used for private members in a base class",
          ],
          correctAnswer: "C) It enforces derived classes to provide their own implementation",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 19,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() = 0;\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Derived d;\n    d.display();\n    return 0;\n}\nA) Derived Class\nB) Compilation Error\nC) Runtime Error\nD) No output, program crashes",
          options: [
            "A) Derived Class",
            "B) Compilation Error",
            "C) Runtime Error",
            "D) No output, program crashes",
          ],
          correctAnswer: "B) Compilation Error",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 20,
          question: "In C++, what is the purpose of a virtual destructor?",
          options: [
            "A) To allow multiple destructors in a class hierarchy",
            "B) To ensure proper cleanup of derived class objects",
            "C) To allow dynamic casting of objects",
            "D) Virtual destructors are not allowed in C++",
          ],
          correctAnswer: "B) To ensure proper cleanup of derived class objects",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 21,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base* ptr = new Derived;\n    delete ptr;\n    return 0;\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Derived Class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 22,
          question: "In C++, what is the result of the following code snippet?\nclass Base {\npublic:\n    virtual void display() = 0;\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base b;\n    b.display();\n    return 0;\n}\nA) Derived Class\nB) Compilation Error\nC) Runtime Error\nD) No output, program crashes",
          options: [
            "A) Derived Class",
            "B) Compilation Error",
            "C) Runtime Error",
            "D) No output, program crashes",
          ],
          correctAnswer: "B) Compilation Error",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 23,
          question: "When should you use a dynamic_cast in C++?",
          options: [
            "A) When casting between unrelated classes",
            "B) When casting between base and derived classes",
            "C) When casting between integer types",
            "D) When casting between float types",
          ],
          correctAnswer: "B) When casting between base and derived classes",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 24,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base b;\n    Derived* dptr = dynamic_cast<Derived*>(&b);\n    if (dptr == nullptr) {\n        cout << 'Conversion failed';\n    } else {\n        cout << 'Conversion successful';\n    }\n    return 0;\n}\nA) Conversion failed\nB) Conversion successful\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Conversion failed",
            "B) Conversion successful",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) Conversion failed",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 25,
          question: "In C++, what is the purpose of a virtual function?",
          options: [
            "A) To provide a default implementation for derived classes",
            "B) To ensure that a function is called at runtime",
            "C) To allow dynamic allocation of memory",
            "D) To allow dynamic binding of functions at runtime",
          ],
          correctAnswer: "D) To allow dynamic binding of functions at runtime",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 26,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Derived d;\n    Base* ptr = &d;\n    ptr->display();\n    return 0;\n}\nA) Base Class\nB) Derived Class\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Derived Class",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 27,
          question: "In C++, what is the purpose of the typeid operator?",
          options: [
            "A) To check the type of a variable at runtime",
            "B) To perform type conversions",
            "C) To return the size of a data type",
            "D) To return the address of a variable",
          ],
          correctAnswer: "A) To check the type of a variable at runtime",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 28,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base* ptr = new Derived;\n    Base* dptr = dynamic_cast<Derived*>(ptr);\n    if (dptr == nullptr) {\n        cout << 'Conversion failed';\n    } else {\n        cout << 'Conversion successful';\n    }\n    return 0;\n}\nA) Conversion failed\nB) Conversion successful\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Conversion failed",
            "B) Conversion successful",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Conversion successful",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 29,
          question: "In C++, when should you use a pointer to a base class?",
          options: [
            "A) When you want to access only base class members",
            "B) When you want to access only derived class members",
            "C) When you want to access both base and derived class members",
            "D) When you want to access private members",
          ],
          correctAnswer: "A) When you want to access only base class members",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 30,
          question: "What is the output of the following code snippet?\nclass Base {\npublic:\n    virtual void display() {\n        cout << 'Base Class';\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() override {\n        cout << 'Derived Class';\n    }\n};\n\nint main() {\n    Base b;\n    Derived* dptr = dynamic_cast<Derived*>(&b);\n    if (dptr == nullptr) {\n        cout << 'Conversion failed';\n    } else {\n        cout << 'Conversion successful';\n    }\n    return 0;\n}\nA) Conversion failed\nB) Conversion successful\nC) Compilation Error\nD) Runtime Error",
          options: [
            "A) Conversion failed",
            "B) Conversion successful",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) Conversion failed",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
      "8.3": [
      
        {
          id: 1,
          question: "What is a virtual function in C++?",
          options: [
            "A) A function defined inside a class",
            "B) A function that can be overridden in a derived class",
            "C) A function with no body",
            "D) None of the above",
          ],
          correctAnswer: "B) A function that can be overridden in a derived class",
        },
        {
          id: 2,
          question: "Which keyword is used to declare a function as virtual in C++?",
          options: [
            "A) virtual",
            "B) override",
            "C) virtualize",
            "D) vfunction",
          ],
          correctAnswer: "A) virtual",
        },
        {
          id: 3,
          question: "In C++, can a virtual function have a definition in the base class?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a pure virtual function",
            "D) Depends on the compiler",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 4,
          question: "What is the purpose of a virtual destructor in C++?",
          options: [
            "A) To deallocate memory for base class objects",
            "B) To ensure proper cleanup of derived class objects",
            "C) It is not allowed in C++",
            "D) To prevent memory leaks in the base class",
          ],
          correctAnswer: "B) To ensure proper cleanup of derived class objects",
        },
        {
          id: 5,
          question: "When should you use a pure virtual function in C++?",
          options: [
            "A) When you want to provide a default implementation",
            "B) When you want to force derived classes to implement the function",
            "C) When you want to declare a function without defining it",
            "D) When you want to hide the function from derived classes",
          ],
          correctAnswer: "B) When you want to force derived classes to implement the function",
        },
        {
          id: 6,
          question: "Can an abstract class have non-virtual functions?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it has at least one pure virtual function",
            "D) Only if it's a template class",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 7,
          question: "Which of the following is a correct way to declare a pure virtual function in C++?",
          options: [
            "A) virtual void func() = 0;",
            "B) void virtual func() = 0;",
            "C) void func() = 0;",
            "D) pure virtual void func();",
          ],
          correctAnswer: "A) virtual void func() = 0;",
        },
        {
          id: 8,
          question: "In C++, can an abstract class be instantiated?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it has a constructor",
            "D) Only if it has no pure virtual functions",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 9,
          question: "What is the output of the following code?",
          code: `
  #include <iostream>
  using namespace std;
  
  class Base {
  public:
      virtual void display() {
          cout << "Base Class" << endl;
      }
  };
  
  class Derived : public Base {
  public:
      void display() override {
          cout << "Derived Class" << endl;
      }
  };
  
  int main() {
      Base* ptr = new Derived;
      ptr->display();
      return 0;
  }`,
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) This code will not compile",
            "D) It will throw a runtime error",
          ],
          correctAnswer: "B) Derived Class",
        },
        {
          id: 10,
          question: "Can a class have both virtual and pure virtual functions?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's an abstract class",
            "D) Only if it's a template class",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 11,
          question: "What happens if a class contains a pure virtual function but does not have any derived classes that implement it?",
          options: [
            "A) The program compiles and runs without errors",
            "B) The program will not compile",
            "C) It will cause a linker error",
            "D) It will cause a runtime error",
          ],
          correctAnswer: "B) The program will not compile",
        },
        {
          id: 12,
          question: "Which keyword is used to override a virtual function in a derived class?",
          options: [
            "A) virtual",
            "B) override",
            "C) over",
            "D) extend",
          ],
          correctAnswer: "B) override",
        },
        {
          id: 13,
          question: "In C++, can a pure virtual function have a definition in the base class?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a template class",
            "D) Only if it's a friend function",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 14,
          question: "What is the purpose of an abstract class in C++?",
          options: [
            "A) To provide a default implementation for all functions",
            "B) To serve as a blueprint for derived classes",
            "C) To prevent instantiation of a class",
            "D) To make a class inaccessible from outside code",
          ],
          correctAnswer: "B) To serve as a blueprint for derived classes",
        },
        {
          id: 15,
          question: "Which of the following statements about virtual functions is true?",
          options: [
            "A) Virtual functions can be static",
            "B) Virtual functions must have a body",
            "C) Virtual functions can be overloaded",
            "D) Virtual functions cannot be inherited",
          ],
          correctAnswer: "C) Virtual functions can be overloaded",
        },
        {
          id: 16,
          question: "In C++, can you have a virtual constructor?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a templated constructor",
            "D) Only if it's a private constructor",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 17,
          question: "What is the output of the following code?",
          code: `
  #include <iostream>
  using namespace std;
  
  class Base {
  public:
      virtual void display() {
          cout << "Base Class" << endl;
      }
  };
  
  class Derived : public Base {
  public:
      void display() {
          cout << "Derived Class" << endl;
      }
  };
  
  int main() {
      Base obj;
      obj.display();
      Derived obj2;
      obj2.display();
      return 0;
  }`,
          options: [
            "A) Base Class\n   Derived Class",
            "B) Derived Class\n   Derived Class",
            "C) Base Class\n   Base Class",
            "D) Derived Class\n   Base Class",
          ],
          correctAnswer: "A) Base Class\n   Derived Class",
        },
        {
          id: 18,
          question: "Can you instantiate a class that contains a pure virtual function?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a template class",
            "D) Only if it's a singleton class",
          ],
          correctAnswer: "B) No",
        },
        {
          id: 19,
          question: "In C++, can a class inherit from multiple abstract classes?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's a template class",
            "D) Only if it's a derived class",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 20,
          question: "Which of the following is a correct way to declare an abstract class in C++?",
          options: [
            "A) class AbstractClass { virtual void func() = 0; };",
            "B) class AbstractClass { virtual void func() = 0 {} };",
            "C) class AbstractClass { void virtual func() = 0; };",
            "D) class AbstractClass { void func() = 0; };",
          ],
          correctAnswer: "A) class AbstractClass { virtual void func() = 0; };",
        },
        {
          id: 21,
          question: "What is the output of the following code?",
          code: `
  #include <iostream>
  using namespace std;
  
  class Base {
  public:
      virtual void display() {
          cout << "Base Class" << endl;
      }
  };
  
  class Derived : public Base {
  public:
      void display() override {
          cout << "Derived Class" << endl;
      }
  };
  
  int main() {
      Derived obj;
      Base* ptr = &obj;
      ptr->display();
      return 0;
  }`,
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) This code will not compile",
            "D) It will throw a runtime error",
          ],
          correctAnswer: "B) Derived Class",
        },
        {
          id: 22,
          question: "Can a class have a virtual destructor without any virtual functions?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's an abstract class",
            "D) Only if it's a derived class",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 23,
          question: "Which of the following statements about abstract classes is true?",
          options: [
            "A) An abstract class cannot have any data members",
            "B) An abstract class cannot be inherited",
            "C) An abstract class can have non-virtual member functions",
            "D) An abstract class cannot have constructors",
          ],
          correctAnswer: "C) An abstract class can have non-virtual member functions",
        },
        {
          id: 24,
          question: "In C++, can a class have multiple pure virtual functions?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's an abstract class",
            "D) Only if it's a derived class",
          ],
          correctAnswer: "A) Yes",
        },
        {
          id: 25,
          question: "What is the output of the following code?",
          code: `
  #include <iostream>
  using namespace std;
  
  class Base {
  public:
      virtual void display() {
          cout << "Base Class" << endl;
      }
  };
  
  class Derived : public Base {
  public:
      void display() override {
          cout << "Derived Class" << endl;
      }
  };
  
  int main() {
      Base* ptr = new Base;
      ptr->display();
      delete ptr;
      ptr = new Derived;
      ptr->display();
      delete ptr;
      return 0;
  }`,
          options: [
            "A) Base Class\n   Derived Class",
            "B) Derived Class\n   Derived Class",
            "C) Base Class\n   Base Class",
            "D) Derived Class\n   Base Class",
          ],
          correctAnswer: "A) Base Class\n   Derived Class",
        },
        {
          id: 26,
          question: "Which of the following is a correct way to override a virtual function in a derived class?",
          options: [
            "A) void display() { cout << 'Derived Class' << endl; }",
            "B) void virtual display() { cout << 'Derived Class' << endl; }",
            "C) void display() override { cout << 'Derived Class' << endl; }",
            "D) virtual void display() { cout << 'Derived Class' << endl; }",
          ],
          correctAnswer: "C) void display() override { cout << 'Derived Class' << endl; }",
        },
        {
          id: 27,
          question: "What is the output of the following code?",
          code: `
  #include <iostream>
  using namespace std;
  
  class Base {
  public:
      virtual void display() {
          cout << "Base Class" << endl;
      }
  };
  
  class Derived : public Base {
  public:
      void display() override {
          cout << "Derived Class" << endl;
      }
  };
  
  int main() {
      Derived* ptr = new Derived;
      Base* ptr2 = ptr;
      ptr2->display();
      delete ptr;
      return 0;
  }`,
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) This code will not compile",
            "D) It will throw a runtime error",
          ],
          correctAnswer: "B) Derived Class",
        },
        {
          id: 28,
          question: "Which of the following is a correct way to declare an abstract class with a pure virtual function in C++?",
          options: [
            "A) class AbstractClass { virtual void func() = 0; };",
            "B) class AbstractClass { virtual void func(); };",
            "C) class AbstractClass { void func() = 0; };",
            "D) class AbstractClass { void func(); };",
          ],
          correctAnswer: "A) class AbstractClass { virtual void func() = 0; };",
        },
        {
          id: 29,
          question: "What is the output of the following code?",
          code: `
  #include <iostream>
  using namespace std;
  
  class Base {
  public:
      virtual void display() {
          cout << "Base Class" << endl;
      }
  };
  
  class Derived : public Base {
  public:
      void display() {
          cout << "Derived Class" << endl;
      }
  };
  
  int main() {
      Base* ptr = new Derived;
      ptr->display();
      delete ptr;
      return 0;
  }`,
          options: [
            "A) Base Class",
            "B) Derived Class",
            "C) This code will not compile",
            "D) It will throw a runtime error",
          ],
          correctAnswer: "B) Derived Class",
        },
        {
          id: 30,
          question: "In C++, can a class have a virtual destructor without any virtual functions?",
          options: [
            "A) Yes",
            "B) No",
            "C) Only if it's an abstract class",
            "D) Only if it's a derived class",
          ],
          correctAnswer: "A) Yes",
        },
        // Add more questions for subchapter 1.1 as needed
      ],
  
    },

    //chapter 8 ended


    9: {
      // Chapter 9
      "9.1": [
        {
          id: 1,
          question: "What is the purpose of an exception handling mechanism?",
          options: [
            "A) To gracefully handle errors during program execution",
            "B) To enhance program performance",
            "C) To improve code readability",
            "D) None of the above",
          ],
          correctAnswer: "A) To gracefully handle errors during program execution",
        },
        {
          id: 2,
          question: "Which keyword is used to start a try block in C++?",
          options: ["A) try", "B) catch", "C) throw", "D) attempt"],
          correctAnswer: "A) try",
        },
        // Add more questions for subchapter 1.1 as needed
        {
          id: 3,
          question: "In C++, can you have multiple catch blocks for a single try block?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "A) Yes",
        },
        {
          id: 4,
          question: "What is the purpose of the catch handler in exception handling?",
          options: [
            "A) To throw an exception",
            "B) To handle an exception",
            "C) To define a custom exception",
            "D) To terminate the program",
          ],
          correctAnswer: "B) To handle an exception",
        },
        {
          id: 5,
          question: "Which keyword is used to explicitly throw an exception in C++?",
          options: ["A) raise", "B) throw", "C) catch", "D) try"],
          correctAnswer: "B) throw",
        },
        {
          id: 6,
          question: "What happens if an exception is thrown inside a catch block?",
          options: [
            "A) It is caught by the same catch block",
            "B) It is caught by the catch block outside the current scope",
            "C) It leads to a runtime error",
            "D) It is ignored",
          ],
          correctAnswer: "C) It leads to a runtime error",
        },
        {
          id: 7,
          question: "In C++, can you throw an exception of any data type?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "A) Yes",
        },
        {
          id: 8,
          question: "Which of the following is a standard exception class in C++?",
          options: [
            "A) Exception",
            "B) Throwable",
            "C) std::exception",
            "D) Error",
          ],
          correctAnswer: "C) std::exception",
        },
        {
          id: 9,
          question: "What is the purpose of the std::exception class in C++?",
          options: [
            "A) It is a base class for all standard C++ exceptions",
            "B) It is used to handle file I/O operations",
            "C) It is used for mathematical calculations",
            "D) It is used for network operations",
          ],
          correctAnswer: "A) It is a base class for all standard C++ exceptions",
        },
        {
          id: 10,
          question: "Which header file should be included to use the exception handling mechanism in C++?",
          options: [
            "A) <iostream>",
            "B) <stdexcept>",
            "C) <exception>",
            "D) <assert.h>",
          ],
          correctAnswer: "C) <exception>",
        },
        {
          id: 11,
          question: "Which type of exception is thrown when you try to access an array element out of bounds?",
          options: [
            "A) std::range_error",
            "B) std::overflow_error",
            "C) std::underflow_error",
            "D) std::out_of_range",
          ],
          correctAnswer: "D) std::out_of_range",
        },
        {
          id: 12,
          question: "What is the purpose of the 'finally' block in exception handling (as in some other languages)?",
          options: [
            "A) To handle exceptions that were not caught by any catch block",
            "B) To execute code regardless of whether an exception was thrown or not",
            "C) To re-throw an exception",
            "D) To terminate the program",
          ],
          correctAnswer: "B) To execute code regardless of whether an exception was thrown or not",
        },
        {
          id: 13,
          question: "In C++, can you have a catch block without specifying the type of exception to catch?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "A) Yes",
        },
        {
          id: 14,
          question: "Which keyword is used to re-throw an exception in C++?",
          options: ["A) throw", "B) catch", "C) rethrow", "D) throw_again"],
          correctAnswer: "C) rethrow",
        },
        {
          id: 15,
          question: "When should you use exception handling in C++?",
          options: [
            "A) Only for handling syntax errors",
            "B) Only for handling runtime errors",
            "C) For handling exceptional situations that may occur during program execution",
            "D) None of the above",
          ],
          correctAnswer: "C) For handling exceptional situations that may occur during program execution",
        },
        {
          id: 16,
          question: "What is the output of the following code?",
          code: `#include <iostream>
using namespace std;

int main() {
    try {
        throw 20;
    }
    catch (int e) {
        cout << "Exception Caught: " << e << endl;
    }

    return 0;
}`,
          options: [
            "A) Exception Caught: 20",
            "B) 20",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "A) Exception Caught: 20",
        },
        {
          id: 17,
          question: "What happens if no catch block matches the type of the thrown exception?",
          options: [
            "A) The program terminates abruptly",
            "B) The exception is caught by the catch block with the closest matching type",
            "C) The program continues execution without handling the exception",
            "D) The program enters an infinite loop",
          ],
          correctAnswer: "A) The program terminates abruptly",
        },
        {
          id: 18,
          question: "Which of the following is not a valid way to handle an exception in C++?",
          options: [
            "A) Rethrowing the same exception",
            "B) Swallowing the exception and continuing execution",
            "C) Creating a custom exception class",
            "D) Ignoring the exception and not providing a catch block",
          ],
          correctAnswer: "D) Ignoring the exception and not providing a catch block",
        },
        {
          id: 19,
          question: "What is the purpose of the 'terminate' function in C++?",
          options: [
            "A) It terminates the program immediately",
            "B) It is used to throw an exception",
            "C) It is used to define a custom exception",
            "D) It is used for debugging",
          ],
          correctAnswer: "A) It terminates the program immediately",
        },
        {
          id: 20,
          question: "Which of the following is an example of a standard C++ exception class for arithmetic errors?",
          options: [
            "A) std::logic_error",
            "B) std::overflow_error",
            "C) std::range_error",
            "D) std::invalid_argument",
          ],
          correctAnswer: "B) std::overflow_error",
        },
        {
          id: 21,
          question: "What is the output of the following code?",
          code: `#include <iostream>
using namespace std;

int main() {
    try {
        throw runtime_error("Custom Error");
    }
    catch (const runtime_error& e) {
        cout << e.what() << endl;
    }

    return 0;
}`,
          options: [
            "A) Custom Error",
            "B) Runtime Error",
            "C) Compilation Error",
            "D) No output",
          ],
          correctAnswer: "A) Custom Error",
        },
        {
          id: 22,
          question: "In C++, can you catch an exception by value and modify it within the catch block?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "B) No",
        },
        {
          id: 23,
          question: "Which of the following is a real-life scenario where exception handling might be useful?",
          options: [
            "A) Handling user input in a calculator program",
            "B) Handling file not found error while reading a file",
            "C) Handling loop iterations in a for loop",
            "D) Handling mathematical calculations",
          ],
          correctAnswer: "B) Handling file not found error while reading a file",
        },
        {
          id: 24,
          question: "What is the purpose of the 'bad_alloc' exception in C++?",
          options: [
            "A) It is thrown when dynamic memory allocation fails",
            "B) It is thrown when there is a logical error in the code",
            "C) It is thrown when there is an arithmetic error",
            "D) It is thrown when there is a file I/O error",
          ],
          correctAnswer: "A) It is thrown when dynamic memory allocation fails",
        },
        {
          id: 25,
          question: "Which keyword is used to handle any type of exception in C++?",
          options: ["A) catch(...)", "B) catch(all)", "C) catch(*)", "D) catch(any)"],
          correctAnswer: "A) catch(...)",
        },
        {
          id: 26,
          question: "What is the output of the following code?",
          code: `#include <iostream>
using namespace std;

int main() {
    try {
        throw "Error";
    }
    catch (int e) {
        cout << "Exception Caught: " << e << endl;
    }
    catch (...) {
        cout << "Unknown Exception Caught" << endl;
    }

    return 0;
}`,
          options: [
            "A) Exception Caught: Error",
            "B) Unknown Exception Caught",
            "C) Compilation Error",
            "D) Runtime Error",
          ],
          correctAnswer: "B) Unknown Exception Caught",
        },
        {
          id: 27,
          question: "In C++, can you have a try block without any catch blocks?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "B) No",
        },
        {
          id: 28,
          question: "What is the output of the following code?",
          code: `#include <iostream>
using namespace std;

int main() {
    try {
        throw 10;
    }
    catch (char e) {
        cout << "Exception Caught: " << e << endl;
    }
    catch (int e) {
        cout << "Exception Caught: " << e << endl;
    }
    catch (...) {
        cout << "Unknown Exception Caught" << endl;
    }

    return 0;
}`,
          options: [
            "A) Exception Caught: 10",
            "B) Exception Caught: Unknown",
            "C) Unknown Exception Caught",
            "D) Compilation Error",
          ],
          correctAnswer: "A) Exception Caught: 10",
        },
        {
          id: 29,
          question: "In C++, is it mandatory to specify the type of exception to throw?",
          options: ["A) Yes", "B) No"],
          correctAnswer: "B) No",
        },
        {
          id: 30,
          question: "What is the output of the following code?",
          code: `#include <iostream>
using namespace std;

int main() {
    try {
        try {
            throw 1;
        }
        catch (int e) {
            cout << "Inner Catch: " << e << endl;
            throw;
        }
    }
    catch (int e) {
        cout << "Outer Catch: " << e << endl;
    }

    return 0;
}`,
          options: [
            "A) Inner Catch: 1\nOuter Catch: 1",
            "B) Inner Catch: 1",
            "C) Outer Catch: 1",
            "D) Compilation Error",
          ],
          correctAnswer: "A) Inner Catch: 1\nOuter Catch: 1",
        },
      ],
     
    },

    //chapter 9 ended


  },
  // subject 5 ended

};

module.exports = questions;